<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode-2670找出不同元素数目差数组</title>
      <link href="/2024/02/01/leetcode/leetcode-2670%E6%89%BE%E5%87%BA%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E5%B7%AE%E6%95%B0%E7%BB%84/"/>
      <url>/2024/02/01/leetcode/leetcode-2670%E6%89%BE%E5%87%BA%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E5%B7%AE%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/find-the-distinct-difference-array/description/?envType=daily-question&amp;envId=2024-01-31">leetcode-2670找出不同元素数目差数组</a><br />初始解题思路:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] distinctDifferenceArray(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        Set&lt;Integer&gt; set1 = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">        Set&lt;Integer&gt; set2 = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            set1.add(nums[i]);</span><br><span class="line">            set2.clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                set2.add(nums[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            res[i] = set1.size() - set2.size();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>官方题解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] distinctDifferenceArray(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span>[] sufCnt = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            set.add(nums[i]);</span><br><span class="line">            sufCnt[i] = set.size();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        set.clear();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            set.add(nums[i]);</span><br><span class="line">            res[i] = set.size() - sufCnt[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-218. 天际线问题</title>
      <link href="/2023/04/20/leetcode/leetcode-218-%E5%A4%A9%E9%99%85%E7%BA%BF%E9%97%AE%E9%A2%98/"/>
      <url>/2023/04/20/leetcode/leetcode-218-%E5%A4%A9%E9%99%85%E7%BA%BF%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/the-skyline-problem/">leetcode-218. 天际线问题</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; getSkyline(<span class="keyword">int</span>[][] buildings) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(buildings == <span class="keyword">null</span> || buildings.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 采用扫描线方案解决</span></span><br><span class="line">        <span class="comment">// 定义一个存放最大值的优先队列</span></span><br><span class="line">        Queue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(buildings.length, (o1,o2)-&gt;&#123;</span><br><span class="line">            <span class="keyword">int</span> height1 = o1[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> height2 = o2[<span class="number">2</span>];</span><br><span class="line">            <span class="comment">// 倒序 最高排第一</span></span><br><span class="line">            <span class="keyword">return</span> height2 - height1;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义扫描线</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Map&lt;Integer, List&lt;<span class="keyword">int</span>[]&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将数据读入队列</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] arr : buildings)&#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> x2 = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> h = arr[<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">            <span class="keyword">if</span>(!list.contains(x1))&#123;</span><br><span class="line">                list.add(x1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!list.contains(x2))&#123;</span><br><span class="line">                list.add(x2);</span><br><span class="line">            &#125;</span><br><span class="line">            List&lt;<span class="keyword">int</span>[]&gt; list1 = map.getOrDefault(x1, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">            list1.add(arr);</span><br><span class="line">            map.put(x1, list1);</span><br><span class="line"></span><br><span class="line">            List&lt;<span class="keyword">int</span>[]&gt; list2 = map.getOrDefault(x2, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">            list2.add(arr);</span><br><span class="line">            map.put(x2, list2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 前一个点的高度</span></span><br><span class="line">        <span class="keyword">int</span> last = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历扫描线</span></span><br><span class="line">        <span class="keyword">for</span>(Integer x : list)&#123;</span><br><span class="line">            List&lt;<span class="keyword">int</span>[]&gt; arrList = map.get(x);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span>[] arr : arrList)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[<span class="number">0</span>] == x)&#123;</span><br><span class="line">                    <span class="comment">// 加入队列</span></span><br><span class="line">                    queue.offer(arr);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[<span class="number">1</span>] == x)&#123;</span><br><span class="line">                    <span class="comment">// 移除队列</span></span><br><span class="line">                    queue.remove(arr);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(queue.size() == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 队列已经全部移除</span></span><br><span class="line">                List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                ans.add(x);</span><br><span class="line">                ans.add(<span class="number">0</span>);</span><br><span class="line">                res.add(ans);</span><br><span class="line">                last = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 此时队列中的最大值</span></span><br><span class="line">            <span class="keyword">int</span>[] p = queue.peek();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(p[<span class="number">2</span>] != last)&#123;</span><br><span class="line"></span><br><span class="line">                last = p[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">                List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                ans.add(x);</span><br><span class="line">                ans.add(p[<span class="number">2</span>]);</span><br><span class="line">                res.add(ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-297. 二叉树的序列化与反序列化</title>
      <link href="/2023/04/12/leetcode/leetcode-297-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2023/04/12/leetcode/leetcode-297-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/serialize-and-deserialize-binary-tree/">leetcode-297. 二叉树的序列化与反序列化</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Encodes a tree to a single string.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">serialize</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> list.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 宽度优先遍历</span></span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="comment">// 队列不为空,取出队头数据</span></span><br><span class="line">            TreeNode node = queue.poll();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">                 list.add(<span class="keyword">null</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               list.add(node.val); </span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span>(node != <span class="keyword">null</span>)&#123;</span><br><span class="line">                queue.offer(node.left);</span><br><span class="line">                queue.offer(node.right);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Decodes your encoded data to tree.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">deserialize</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data == <span class="keyword">null</span> || data.length() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String str = data.substring(<span class="number">1</span>, data.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(str.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] arr = str.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(String s : arr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="string">&quot;null&quot;</span>.equals(s.trim()))&#123;</span><br><span class="line">                list.add(Integer.valueOf(s.trim()));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                list.add(<span class="keyword">null</span>);</span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line">        Integer val = list.get(cur++);</span><br><span class="line">        TreeNode root = <span class="keyword">new</span> TreeNode(val);</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            TreeNode node = queue.poll();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cur == list.size() - <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Integer leftVal = list.get(cur++);</span><br><span class="line">            TreeNode left = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span>(leftVal != <span class="keyword">null</span>)&#123;</span><br><span class="line">                left = <span class="keyword">new</span> TreeNode(leftVal);</span><br><span class="line">            &#125;</span><br><span class="line">            node.left = left;</span><br><span class="line">            queue.offer(left);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cur == list.size() - <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Integer rightVal = list.get(cur++);</span><br><span class="line">            TreeNode right = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span>(rightVal != <span class="keyword">null</span>)&#123;</span><br><span class="line">                right = <span class="keyword">new</span> TreeNode(rightVal);</span><br><span class="line">            &#125;</span><br><span class="line">            node.right = right;</span><br><span class="line">            queue.offer(right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Your Codec object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment">// Codec ser = new Codec();</span></span><br><span class="line"><span class="comment">// Codec deser = new Codec();</span></span><br><span class="line"><span class="comment">// TreeNode ans = deser.deserialize(ser.serialize(root));</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-230. 二叉搜索树中第K小的元素</title>
      <link href="/2023/04/12/leetcode/leetcode-230-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%ACK%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/"/>
      <url>/2023/04/12/leetcode/leetcode-230-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%ACK%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/kth-smallest-element-in-a-bst/description/">leetcode-230. 二叉搜索树中第K小的元素</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        Queue&lt;Integer&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(k, (o1, o2) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> o1 - o2;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        dfs(root, queue);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = queue.poll();</span><br><span class="line">            k--;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(k == <span class="number">0</span>)&#123;</span><br><span class="line">                res = v;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>( k &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root,  Queue&lt;Integer&gt; queue)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        queue.offer(root.val);</span><br><span class="line"></span><br><span class="line">        dfs(root.left, queue);</span><br><span class="line">        dfs(root.right, queue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-454. 四数相加 II</title>
      <link href="/2023/04/12/leetcode/leetcode-454-%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0-II/"/>
      <url>/2023/04/12/leetcode/leetcode-454-%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/4sum-ii/">leetcode-454. 四数相加 II</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">fourSumCount</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2, <span class="keyword">int</span>[] nums3, <span class="keyword">int</span>[] nums4)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分治思想</span></span><br><span class="line">        Map&lt;Integer, Integer&gt; map1 = merge(nums1, nums2);</span><br><span class="line">        Map&lt;Integer, Integer&gt; map2 = merge(nums3, nums4);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, Integer&gt; entry : map1.entrySet())&#123;</span><br><span class="line">            <span class="comment">// 遍历整个集合</span></span><br><span class="line">            Integer key = entry.getKey();</span><br><span class="line">            Integer value1 = entry.getValue();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(map2.containsKey((<span class="number">0</span> - key)))&#123;</span><br><span class="line">                Integer value2 = map2.get((<span class="number">0</span> - key));</span><br><span class="line">                res += value1 * value2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;Integer, Integer&gt; <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span></span>&#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums1.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; nums2.length; j++)&#123;</span><br><span class="line">                Integer value = nums1[i] + nums2[j];</span><br><span class="line">                map.put(value, map.getOrDefault(value, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-171. Excel 表列序号</title>
      <link href="/2023/04/04/leetcode/leetcode-171-Excel-%E8%A1%A8%E5%88%97%E5%BA%8F%E5%8F%B7/"/>
      <url>/2023/04/04/leetcode/leetcode-171-Excel-%E8%A1%A8%E5%88%97%E5%BA%8F%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/excel-sheet-column-number/description/">171. Excel 表列序号</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">titleToNumber</span><span class="params">(String columnTitle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(columnTitle == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = columnTitle.length();</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 大A的为65</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columnTitle.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> x = columnTitle.charAt(i);</span><br><span class="line">            <span class="keyword">int</span> k = Integer.valueOf(x) - Integer.valueOf(<span class="string">&#x27;A&#x27;</span>) + <span class="number">1</span> ;</span><br><span class="line">            res += Math.pow(<span class="number">26</span>, n - i - <span class="number">1</span>) * k;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1971. 寻找图中是否存在路径</title>
      <link href="/2023/04/03/leetcode/leetcode-1971-%E5%AF%BB%E6%89%BE%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B7%AF%E5%BE%84/"/>
      <url>/2023/04/03/leetcode/leetcode-1971-%E5%AF%BB%E6%89%BE%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode.cn/problems/find-if-path-exists-in-graph/description/">leetcode-1971. 寻找图中是否存在路径</a></p><h2 id="解法一深度优先搜索"><a class="markdownIt-Anchor" href="#解法一深度优先搜索"></a> 解法一：深度优先搜索</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validPath</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] edges, <span class="keyword">int</span> source, <span class="keyword">int</span> destination)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(source == destination)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(edges.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 深度优先搜索</span></span><br><span class="line">        <span class="comment">// 存放路径</span></span><br><span class="line">        Map&lt;Integer, List&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; edges.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = edges[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = edges[i][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(a))&#123;</span><br><span class="line">                map.get(a).add(b);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">                list.add(b);</span><br><span class="line">                map.put(a, list);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(b))&#123;</span><br><span class="line">                map.get(b).add(a);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">                list.add(a);</span><br><span class="line">                map.put(b, list);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 进行深度优先搜索</span></span><br><span class="line">        <span class="comment">// set用来存放已经走过的点</span></span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dfs(map, set, source, destination);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(Map&lt;Integer, List&lt;Integer&gt;&gt; map, Set&lt;Integer&gt; set, <span class="keyword">int</span> source, <span class="keyword">int</span> destination)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!map.containsKey(source))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        List&lt;Integer&gt; list = map.get(source);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(list.contains(destination))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(set.contains(source))&#123;</span><br><span class="line">            <span class="comment">// 该节点已被访问过</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录节点已经被遍历过</span></span><br><span class="line">        set.add(source);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dfs(map, set, list.get(i), destination))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法二广度优先搜索"><a class="markdownIt-Anchor" href="#解法二广度优先搜索"></a> 解法二：广度优先搜索</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validPath</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] edges, <span class="keyword">int</span> source, <span class="keyword">int</span> destination)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(source == destination)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(edges.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 广度优先搜索</span></span><br><span class="line">        <span class="comment">// 存放路径</span></span><br><span class="line">        List&lt;Integer&gt;[] arr = <span class="keyword">new</span> List[n];</span><br><span class="line">        <span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="comment">// 初始化存放路径的数组</span></span><br><span class="line">            arr[i] = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; edges.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = edges[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = edges[i][<span class="number">1</span>];</span><br><span class="line">            arr[a].add(b);</span><br><span class="line">            arr[b].add(a);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        Queue&lt;Integer&gt; queue = <span class="keyword">new</span> ArrayDeque&lt;Integer&gt;();</span><br><span class="line">        queue.offer(source);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(queue.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            Integer t = queue.poll();</span><br><span class="line">            List&lt;Integer&gt; list = arr[t];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(visited[t])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visited[t] = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(t == destination)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">                Integer x = list.get(i);</span><br><span class="line">                <span class="keyword">if</span>(!visited[x])&#123;</span><br><span class="line">                    queue.offer(x);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> visited[destination];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法三并查集"><a class="markdownIt-Anchor" href="#解法三并查集"></a> 解法三：并查集</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validPath</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] edges, <span class="keyword">int</span> source, <span class="keyword">int</span> destination)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化并查集</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] arr : edges)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="comment">// 并查集链接</span></span><br><span class="line">            union(parent, a, b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(find(parent, source) == find(parent, destination))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(parent[k] != k)&#123;</span><br><span class="line">            parent[k] = find(parent, parent[k]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(parent, i);</span><br><span class="line">        <span class="keyword">int</span> y = find(parent, j);</span><br><span class="line">        <span class="keyword">if</span>(x != y)&#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-boot源码解析笔记</title>
      <link href="/2021/11/03/spring-boot/spring-boot%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/11/03/spring-boot/spring-boot%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="ques1springboot是如何进行自动配置的都把哪些组件进行了自动配置"><a class="markdownIt-Anchor" href="#ques1springboot是如何进行自动配置的都把哪些组件进行了自动配置"></a> 🐣Ques1:springboot是如何进行自动配置的，都把哪些组件进行了自动配置？</h3>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-239. 滑动窗口最大值</title>
      <link href="/2021/09/01/leetcode/leetcode-239-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
      <url>/2021/09/01/leetcode/leetcode-239-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="239-滑动窗口最大值"><a class="markdownIt-Anchor" href="#239-滑动窗口最大值"></a> <a href="https://leetcode-cn.com/problems/sliding-window-maximum/">239. 滑动窗口最大值</a></h4><p>优先队列</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] maxSlidingWindow(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length - k + <span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 使用优先队列</span></span><br><span class="line">        Queue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;<span class="keyword">int</span>[]&gt;((o1, o2)-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(o2[<span class="number">0</span>] - o1[<span class="number">0</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(o2[<span class="number">0</span>] - o1[<span class="number">0</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(o2[<span class="number">1</span>] - o1[<span class="number">1</span>] &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将前k个数据先入队列</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)&#123;</span><br><span class="line">            queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;nums[i], i&#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ans[<span class="number">0</span>] = queue.peek()[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历剩下的数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(!queue.isEmpty() &amp;&amp; queue.peek()[<span class="number">1</span>] &lt; (i - k + <span class="number">1</span>))&#123;</span><br><span class="line">                queue.poll();</span><br><span class="line">            &#125;</span><br><span class="line">            queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;nums[i], i&#125;);</span><br><span class="line">            ans[i-k+<span class="number">1</span>] = queue.peek()[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双端队列</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] maxSlidingWindow(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[n-k+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        Deque&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(!queue.isEmpty() &amp;&amp; nums[i] &gt; nums[queue.peekLast()])&#123;</span><br><span class="line">                queue.pollLast();</span><br><span class="line">            &#125;</span><br><span class="line">            queue.offerLast(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ans[<span class="number">0</span>] = nums[queue.peekFirst()];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>((!queue.isEmpty()) &amp;&amp; nums[i] &gt; nums[queue.peekLast()])&#123;</span><br><span class="line">                queue.pollLast();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>((!queue.isEmpty()) &amp;&amp; queue.peekFirst() &lt; i - k + <span class="number">1</span>)&#123;</span><br><span class="line">                queue.pollFirst();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            queue.offerLast(i);</span><br><span class="line">            ans[i-k+<span class="number">1</span>] = nums[queue.peekFirst()];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis-geek-04-哨兵机制-主库挂了如何不间断服务</title>
      <link href="/2021/08/30/redis/redis-geek-04-%E5%93%A8%E5%85%B5%E6%9C%BA%E5%88%B6-%E4%B8%BB%E5%BA%93%E6%8C%82%E4%BA%86%E5%A6%82%E4%BD%95%E4%B8%8D%E9%97%B4%E6%96%AD%E6%9C%8D%E5%8A%A1/"/>
      <url>/2021/08/30/redis/redis-geek-04-%E5%93%A8%E5%85%B5%E6%9C%BA%E5%88%B6-%E4%B8%BB%E5%BA%93%E6%8C%82%E4%BA%86%E5%A6%82%E4%BD%95%E4%B8%8D%E9%97%B4%E6%96%AD%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="哨兵机制-主库挂了如何不间断服务"><a class="markdownIt-Anchor" href="#哨兵机制-主库挂了如何不间断服务"></a> 哨兵机制-主库挂了如何不间断服务</h2><h3 id="主观下线和客观下线"><a class="markdownIt-Anchor" href="#主观下线和客观下线"></a> 主观下线和客观下线</h3><p><strong>哨兵进程会使用ping命令检测它自己和主、从库的网络连接情况，来判断实例的状态</strong>，如果哨兵发现主库或从库对PING命令的响应超时了，那么，哨兵就会先把它标记为“主观下线”。 如果检测的是从库，那么，哨兵简单地把它标记为“主观下线”就⾏了，因为从库的下线影响⼀般不太⼤， 集群的对外服务不会间断。在判断主库是否下线时，不能由⼀个哨兵说了算，只有⼤多数的哨兵实例，都判断主库已经“主观下 线”了，主库才会被标记为“客观下线”，这个叫法也是表明主库下线成为⼀个客观事实了。这个判断原则 就是：少数服从多数。同时，这会进⼀步触发哨兵开始主从切换流程。</p><h3 id="如何选定新主库"><a class="markdownIt-Anchor" href="#如何选定新主库"></a> 如何选定新主库</h3><p>先从多个从库中筛选掉不在线的和网络连接状态较差的，然后<strong>从库的优先级、从库的复制进度以及从库的ID号</strong>进行打分</p><ul><li>第⼀轮：优先级最⾼的从库得分⾼。</li><li>第二轮：和旧主库同步程度最接近的从库得分高</li><li>第三轮：ID号越小的从库得分高</li></ul><p>Redis的哨兵机制⾃动完成了以下三⼤功能，从⽽实现了主从库的⾃动切换，可以降低Redis集群的运维开销：</p><ul><li>监控主库运⾏状态，并判断主库是否客观下线；</li><li>在主库客观下线后，选取新主库；</li><li>选出新主库后，通知从库和客⼾端。</li></ul>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis-geek-03-AOF日志-宕机了如何避免数据丢失</title>
      <link href="/2021/08/27/redis/redis-geek-03-AOF%E6%97%A5%E5%BF%97-%E5%AE%95%E6%9C%BA%E4%BA%86%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1/"/>
      <url>/2021/08/27/redis/redis-geek-03-AOF%E6%97%A5%E5%BF%97-%E5%AE%95%E6%9C%BA%E4%BA%86%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="aof日志-宕机了如何避免数据丢失"><a class="markdownIt-Anchor" href="#aof日志-宕机了如何避免数据丢失"></a> AOF日志-宕机了如何避免数据丢失</h2><p>AOF⽇志正好相反，它是写后⽇志，“写 后”的意思是Redis是先执⾏命令，把数据写⼊内存，然后才记录⽇志<br /><strong>好处：</strong></p><ol><li>为了避免额外的检查开销，Redis在向AOF⾥⾯记录⽇志的时候，并不会先去对这些命令进⾏语法检 查。所以，如果先记⽇志再执⾏命令的话，⽇志中就有可能记录了错误的命令，Redis在使⽤⽇志恢复数据 时，就可能会出错。⽽写后⽇志这种⽅式，就是先让系统执⾏命令，只有命令能执⾏成功，才会被记录到⽇志中，否则，系统就 会直接向客⼾端报错。所以，Redis使⽤写后⽇志这⼀⽅式的⼀⼤好处是，可以避免出现记录错误命令的情况。</li><li>它是在命令执⾏后才记录⽇志，所以不会阻塞当前写操作</li></ol><p><strong>潜在风险：</strong></p><ol><li>如果刚执⾏完⼀个命令，还没有来得及记⽇志就宕机了，那么这个命令和相应的数据就有丢失的⻛险。</li><li>AOF虽然避免了对当前命令的阻塞，但可能会给下⼀个操作带来阻塞⻛险。这是因为，AOF⽇志也是 在主线程中执⾏的，如果在把⽇志⽂件写⼊磁盘时，磁盘写压⼒⼤，就会导致写盘很慢，进⽽导致后续的操作也⽆法执⾏了。</li></ol><p><strong>三种写策略</strong></p><p>AOF机制给我们提供了三个选择，也就是AOF配置项appendfsync的三个可选值</p><ul><li><strong>Always</strong>：同步写回：每个写命令执⾏完，⽴⻢同步地将⽇志写回磁盘；</li><li><strong>Everysec</strong>：每秒写回：每个写命令执⾏完，只是先把⽇志写到AOF⽂件的内存缓冲区，每隔⼀秒把缓冲 区中的内容写⼊磁盘；</li><li><strong>No</strong>：操作系统控制的写回：每个写命令执⾏完，只是先把⽇志写到AOF⽂件的内存缓冲区，由操作系统 决定何时将缓冲区内容写回磁盘。</li></ul><img src="/images/image-20210827134953513.png" alt="image-20210827134953513" style="zoom:50%;" /><h3 id="aof文件过大导致性能问题"><a class="markdownIt-Anchor" href="#aof文件过大导致性能问题"></a> AOF文件过大导致性能问题</h3><p>AOF文件“性能问题”，主要在于以下三个⽅⾯：</p><ol><li>⽂件系统本⾝对⽂件⼤⼩有限制，⽆法保存过⼤的⽂ 件；</li><li>如果⽂件太⼤，之后再往⾥⾯追加命令记录的话，效率也会变低；</li><li>如果发⽣宕机，AOF中 记录的命令要⼀个个被重新执⾏，⽤于故障恢复，如果⽇志⽂件太⼤，整个恢复过程就会⾮常缓慢，这就会 影响到Redis的正常使⽤。</li></ol><h3 id="aof文件日志太大了怎么办"><a class="markdownIt-Anchor" href="#aof文件日志太大了怎么办"></a> AOF文件日志太大了怎么办</h3><p>AOF重写机制就是在<strong>重写</strong>时，Redis<strong>根据数据库的现状创建⼀个新的AOF⽂</strong>件，也就是说，读取数据库中的所有键值对，然后对每⼀个键值对⽤⼀条命令记录它的写⼊</p><p>虽然AOF重写后，⽇志⽂件会缩⼩，但是，要把整个数据库的最新数据的操作⽇志都写回磁盘，仍然 是⼀个⾮常耗时的过程。这时，我们就要继续关注另⼀个问题了：重写会不会阻塞主线程？</p><h3 id="aof重写会阻塞主线程吗"><a class="markdownIt-Anchor" href="#aof重写会阻塞主线程吗"></a> AOF重写会阻塞主线程吗？</h3><p>和AOF⽇志由主线程写回不同，重写过程是由后台线程bgrewriteaof来完成的，这也是为了避免阻塞主线 程，导致数据库性能下降。把重写的过程总结为“<strong>⼀个拷⻉，两处⽇志</strong>”</p><p>“<strong>⼀个拷⻉</strong>”就是指，每次执⾏重写时，主线程fork出后台的bgrewriteaof⼦进程。此时，fork会把主线程 的内存拷⻉⼀份给bgrewriteaof⼦进程，这⾥⾯就<strong>包含了数据库的最新数据</strong>。然后，bgrewriteaof⼦进程就可以在不影响主线程的情况下，逐⼀把拷⻉的数据写成操作，记⼊重写⽇志。<br />“<strong>两处⽇志</strong>”⼜是什么呢？因为主线程未阻塞，仍然可以处理新来的操作。此时，如果有写操作，第⼀处⽇志就是指正在使⽤的AOF⽇志，Redis会<strong>把这个操作写到它的缓冲区</strong>。这样⼀来，即使宕机了，这个AOF⽇志的操作仍然是⻬全的，可以⽤于恢复。 ⽽第⼆处⽇志，就是指新的AOF重写⽇志。这个操作也会被写到重写⽇志的缓冲区。这样，重写⽇志也不会丢失最新的操作。等到拷⻉数据的所有操作记录重写完成后，重写⽇志记录的这些最新操作也会写⼊新的 AOF⽂件，以保证数据库最新状态的记录。此时，我们就可以⽤新的AOF⽂件替代旧⽂件了。</p><img src="/images/image-20210827142154245.png" alt="image-20210827142154245" style="zoom:50%;" /><p>每次AOF重写时，Redis会先执⾏⼀个内存拷⻉，⽤于重写；然后使⽤两个⽇志保证在重写过程中，新写⼊的数据不会丢失。⽽且因为Redis采⽤额外的线程进⾏数据重写，所以，这个过程并不会阻塞主线程。</p><h3 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题：</h3><ol><li>AOF⽇志重写的时候，是由bgrewriteaof⼦进程来完成的，不⽤主线程参与，我们今天说的⾮阻塞也是指 ⼦进程的执⾏不阻塞主线程。但是，你觉得，这个重写过程有没有其他潜在的阻塞⻛险呢？如果有的 话，会在哪⾥阻塞？</li><li><ol start="2"><li>AOF重写也有⼀个重写⽇志，为什么它不共享使⽤AOF本⾝的⽇志呢？</li></ol></li></ol><p>问题1回答：如果⼦进程写⼊事件过⻓，并且这段事件，会导致AOF重写⽇志，积累过多，当新的AOF⽂件完成后，还是需要写⼊⼤量AOF重写⽇志⾥的内容，可能会导致阻塞。</p><p>问题2回答：⽗⼦两个进程本来就没有需要竞争的数据，⽼师所指的两个⽇志应该是“AOF缓冲区”和&quot;AOF重写缓冲区&quot;，⽽不是磁盘上的AOF⽂件，之所有另外有⼀个&quot;AOF重写缓冲区&quot;，是因为重写期间，主进程AOF还在继续⼯作，还是会同步到旧的AOF⽂件中，同步成功后，“AOF缓冲区”会被清除，会被清除，会被清除！</p><h2 id="rdb-内存快照"><a class="markdownIt-Anchor" href="#rdb-内存快照"></a> RDB-内存快照</h2><p>Redis提供了两个命令来⽣成RDB⽂件，分别是save和bgsave。</p><ul><li>save：在主线程中执⾏，会导致阻塞；</li><li>bgsave：创建⼀个⼦进程，专⻔⽤于写⼊RDB⽂件，避免了主线程的阻塞，这也是Redis RDB⽂件⽣成的 默认配置。</li></ul><p>为了快照⽽暂停写操作，肯定是不能接受的，Redis会借助操作系统提供的写时复制技术 （Copy-On-Write, COW），在执⾏快照的同时，正常处理写操作。 简单来说，bgsave⼦进程是由主线程fork⽣成的，可以共享主线程的所有内存数据。bgsave⼦进程运⾏后，开始读取主线程的内存数据，并把它们写⼊RDB⽂件。</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zulu-笔记01</title>
      <link href="/2021/08/26/springCloud/ribbon/zulu-%E7%AC%94%E8%AE%B001/"/>
      <url>/2021/08/26/springCloud/ribbon/zulu-%E7%AC%94%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​</p>]]></content>
      
      
      <categories>
          
          <category> spring cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zuul </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis-geek-02-高性能IO模型-为什么单线程redis那么快</title>
      <link href="/2021/08/20/redis/redis-geek-02-%E9%AB%98%E6%80%A7%E8%83%BDIO%E6%A8%A1%E5%9E%8B-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8D%95%E7%BA%BF%E7%A8%8Bredis%E9%82%A3%E4%B9%88%E5%BF%AB/"/>
      <url>/2021/08/20/redis/redis-geek-02-%E9%AB%98%E6%80%A7%E8%83%BDIO%E6%A8%A1%E5%9E%8B-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8D%95%E7%BA%BF%E7%A8%8Bredis%E9%82%A3%E4%B9%88%E5%BF%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="为什么单线程redis那么快"><a class="markdownIt-Anchor" href="#为什么单线程redis那么快"></a> 为什么单线程redis那么快</h2><p>我们通常说redis是单线程的，<strong>主要指redis的网络IO和键值对读写是由一个线程完成的，这也是redis对外提供键值存储服务的主要流程</strong>，但Redis的其他功能，⽐如持久化、 异步删除、集群数据同步等，其实是由额外的线程执⾏的</p><h3 id="redis的单线程设计机制以及多路复用机制"><a class="markdownIt-Anchor" href="#redis的单线程设计机制以及多路复用机制"></a> Redis的单线程设计机制以及多路复⽤机制</h3><h4 id="redis为什么要用单线程"><a class="markdownIt-Anchor" href="#redis为什么要用单线程"></a> redis为什么要用单线程？</h4><h5 id="多线程的开销"><a class="markdownIt-Anchor" href="#多线程的开销"></a> 多线程的开销</h5><p>多线程编程面临共享资源并发访问控制问题，⼀个关键的瓶颈在于，系统中通常会存在被多线程同时访问的共享资源，⽐如⼀个共享的数据结构。当有多个线程要修改这个共享资源时，为了保证共享资源的正确性，就需要有额外的机制进⾏保证，⽽这个额外的机制，就会带来额外的开销。</p><h5 id="redis为什么这么快"><a class="markdownIt-Anchor" href="#redis为什么这么快"></a> redis为什么这么快</h5><ol><li><p>redis的大部分操作在内存中完成，再加上采用了高效的数据结构例如哈希表和跳表</p></li><li><p>redis采用了<strong>多路复用机制</strong>，使其在⽹络IO操作中能并发处理⼤量的客⼾端请求，实现⾼吞吐率。</p></li></ol><h5 id="基于多路复用的高性能io模型"><a class="markdownIt-Anchor" href="#基于多路复用的高性能io模型"></a> 基于多路复用的高性能IO模型</h5><p>在redis只运行单线程的情况下，<strong>该机制允许内核中，同时存在多个监听套接字和已连接套接字</strong>，内核会一直监听这些套接字上的连接请求和数据请求，一旦请求到达，便会交给redis线程处理，这就实现了一个redis线程处理多个IO流的效果</p><img src="/images/image-20210827112243828.png" alt="image-20210827112243828" style="zoom:50%;" /><p>为了在请求到达时能通知到Redis线程，select/epoll提供了<strong>基于事件的回调机制，针对不同的事件调用相应的处理函数</strong>，</p><p>回调机制是怎么⼯作的呢？其实，select/epoll⼀旦监测到FD上有请求到达时，就会触发相应的事件。这些事件会被放进⼀个事件队列，Redis单线程对该事件队列不断进⾏处理。这样⼀来，Redis⽆需⼀直轮询是否有请求实际发⽣，这就可以避免造成CPU资源浪费。同时Redis在对事件队列中的事件进⾏处理时， 会调⽤相应的处理函数，这就实现了基于事件的回调。因为Redis⼀直在对事件队列进⾏处理，所以能及时响应客⼾端请求，提升Redis的响应性能。</p><h3 id="redis单线程处理io请求性能瓶颈主要包括2个方面"><a class="markdownIt-Anchor" href="#redis单线程处理io请求性能瓶颈主要包括2个方面"></a> Redis单线程处理IO请求性能瓶颈主要包括2个⽅⾯：</h3><p><strong>1、任意⼀个请求在server中⼀旦发⽣耗时，都会影响整个server的性能，也就是说后⾯的请求都要等前⾯这个耗时请求处理完成，⾃⼰才能被处理到。耗时的操作包括以下⼏种：</strong></p><ul><li><p>a、操作bigkey：写⼊⼀个bigkey在分配内存时需要消耗更多的时间，同样删除bigkey释放内存同样会产⽣耗时；</p></li><li><p>b、使⽤复杂度过⾼的命令：例如SORT/SUNION/ZUNIONSTORE，或者O(N)命令，但是N很⼤，例如lrange key 0 -1⼀次查询全量数据；</p></li><li><p>c、⼤量key集中过期：Redis的过期机制也是在主线程中执⾏的，⼤量key集中过期会导致处理⼀个请求时，耗时都在删除过期key，耗时变⻓；</p></li><li><p>d、淘汰策略：淘汰策略也是在主线程执⾏的，当内存超过Redis内存上限后，每次写⼊都需要淘汰⼀些key，也会造成耗时变⻓；</p></li><li><p>e、AOF刷盘开启always机制：每次写⼊都需要把这个操作刷到磁盘，写磁盘的速度远⽐写内存慢，会拖慢Redis的性能；</p></li><li><p>f、主从全量同步⽣成RDB：虽然采⽤fork⼦进程⽣成数据快照，但fork这⼀瞬间也是会阻塞整个线程的， 实例越⼤，阻塞时间越久；</p></li></ul><p><strong>2、并发量⾮常⼤时，单线程读写客⼾端IO数据存在性能瓶颈，虽然采⽤IO多路复⽤机制，但是读写客⼾端数据依旧是同步IO，只能单线程依次读取客⼾端的数据，⽆法利⽤到CPU多核。</strong></p><p>针对问题1，⼀⽅⾯需要业务⼈员去规避，⼀⽅⾯Redis在4.0推出了lazy-free机制，把bigkey释放内存的耗时操作放在了异步线程中执⾏，降低对主线程的影响。</p><p>针对问题2，Redis在6.0推出了多线程，可以在⾼并发场景下利⽤CPU多核多线程读写客⼾端数据，进⼀步提升server性能，当然，只是针对客⼾端的读写是并⾏的，每个命令的真正操作依旧是单线程的。</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis-geek-01-数据结构-一个键值数据库中包含哪些数据结构</title>
      <link href="/2021/08/18/redis/redis-geek-01-%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84-%E4%B8%80%E4%B8%AA%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%8C%85%E5%90%AB%E4%BB%80%E4%B9%88/"/>
      <url>/2021/08/18/redis/redis-geek-01-%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84-%E4%B8%80%E4%B8%AA%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%8C%85%E5%90%AB%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h2><h3 id="redis中包含的数据类型"><a class="markdownIt-Anchor" href="#redis中包含的数据类型"></a> Redis中包含的数据类型</h3><ul><li>String(字符串)、List(列表)、Hash(哈希)、Set(集合)、Sorted Set(有序集合)</li></ul><p><img src="/images/image-20210826101459882.png" alt="image-20210826101459882" /></p><h4 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题：</h4><ol><li><h4 id="这些数据结构都是值的底层实现键和值本身之间用什么结构组织"><a class="markdownIt-Anchor" href="#这些数据结构都是值的底层实现键和值本身之间用什么结构组织"></a> 这些数据结构都是值的底层实现，键和值本⾝之间⽤什么结构组织？</h4><ul><li><p>给哈希表2分配更⼤的空间，例如是当前哈希表1⼤⼩的两倍</p></li><li><p>把哈希表1中的数据重新映射并拷⻉到哈希表2中</p></li><li><p>释放哈希表1的空间</p></li></ul><p>这个过程看似简单，但是第⼆步涉及⼤量的数据拷⻉，如果⼀次性把哈希表1中的数据都迁移完，会造成Redis线程阻塞，⽆法服务其他请求。此时，Redis就⽆法快速访问数据了。 为了避免这个问题，Redis采⽤了<strong>渐进式rehash</strong>。</p><p>简单来说就是在第⼆步拷⻉数据时，Redis仍然正常处理客⼾端请求，每处理⼀个请求时，从哈希表1中的第⼀个索引位置开始，顺带着将这个索引位置上的所有entries拷⻉到哈希表2中；等处理下⼀个请求时，再顺带拷⻉哈希表1中的下⼀个索引位置的entries</p>  <img src="/images/image-20210826151935525.png" alt="image-20210826151935525" style="zoom:50%;" /></li><li><h4 id="为什么集合类型有那么多的底层结构它们都是怎么组织数据的都很快吗"><a class="markdownIt-Anchor" href="#为什么集合类型有那么多的底层结构它们都是怎么组织数据的都很快吗"></a> 为什么集合类型有那么多的底层结构，它们都是怎么组织数据的，都很快吗？</h4><p><strong>集合类型</strong>的底层数据结构主要有5种：<strong>整数数组、双向链表、哈希表、压缩列表和 跳表</strong>。</p><p><strong>压缩列表</strong>实际上类似于⼀个数组，数组中的每⼀个元素都对应保存⼀个数据。和数组不同的是，压缩列表在 表头有三个字段zlbytes、zltail和zllen，分别表⽰列表⻓度、列表尾的偏移量和列表中的entry个数；压缩列 表在表尾还有⼀个zlend，表⽰列表结束。</p><p><img src="/images/image-20210826154149881.png" alt="image-20210826154149881" /></p><p>在压缩列表中，如果我们要查找定位第⼀个元素和最后⼀个元素，可以通过表头三个字段的⻓度直接定位，复杂度是O(1)。⽽查找其他元素时，就没有这么⾼效了，只能逐个查找，此时的复杂度就是O(N)了</p><p><strong>跳表</strong>：有序链表只能逐⼀查找元素，导致操作起来⾮常缓慢，于是就出现了跳表。具体来说，跳表在链表的基础上，增加了多级索引，，通过索引位置的⼏个跳转，实现数据的快速定位，当数据量很⼤时，跳表的查找复杂度就是O(logN)。</p><img src="/images/image-20210826154704451.png" alt="image-20210826154704451" style="zoom:50%;" /><img src="/images/image-20210826155137460.png" alt="image-20210826155137460" style="zoom:40%;" /></li><li><h4 id="什么是简单动态字符串和常用的字符串是一回事吗"><a class="markdownIt-Anchor" href="#什么是简单动态字符串和常用的字符串是一回事吗"></a> 什么是简单动态字符串，和常⽤的字符串是⼀回事吗？</h4></li></ol>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-611. 有效三角形的个数</title>
      <link href="/2021/08/05/leetcode/leetcode-611-%E6%9C%89%E6%95%88%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
      <url>/2021/08/05/leetcode/leetcode-611-%E6%9C%89%E6%95%88%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="611-有效三角形的个数"><a class="markdownIt-Anchor" href="#611-有效三角形的个数"></a> <a href="https://leetcode-cn.com/problems/valid-triangle-number/">611. 有效三角形的个数</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">triangleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 先排序</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="comment">// 只需要a+b&gt;c即可</span></span><br><span class="line">                <span class="keyword">int</span> a = nums[i];</span><br><span class="line">                <span class="keyword">int</span> b = nums[j];</span><br><span class="line">                <span class="comment">// 二分查找j+1~n-1的范围内符合条件的数据,使用二分查找</span></span><br><span class="line">                <span class="keyword">int</span> l = j+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> r = n-<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> k = j;</span><br><span class="line">                <span class="keyword">while</span> (l &lt;= r)&#123;</span><br><span class="line">                    <span class="keyword">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span> ((a+b) &gt; nums[mid])&#123;</span><br><span class="line">                        l = mid + <span class="number">1</span>;</span><br><span class="line">                        k = mid;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        r = mid - <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                ans += k - j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-21. 合并两个有序链表</title>
      <link href="/2021/08/03/leetcode/leetcode-21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/"/>
      <url>/2021/08/03/leetcode/leetcode-21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="21-合并两个有序链表"><a class="markdownIt-Anchor" href="#21-合并两个有序链表"></a> <a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1 == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> l2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(l2 == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> l1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 以l1为主</span></span><br><span class="line">        ListNode cur1 = l1;</span><br><span class="line">        ListNode cur2 = l2;</span><br><span class="line">        ListNode root = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">        ListNode cur = root;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur1 != <span class="keyword">null</span> &amp;&amp; cur2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cur1.val &lt;= cur2.val)&#123;</span><br><span class="line">                cur.next = cur1;</span><br><span class="line">                cur = cur.next;</span><br><span class="line">                cur1 = cur1.next;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cur.next = cur2;</span><br><span class="line">                cur = cur.next;</span><br><span class="line">                cur2 = cur2.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历链表还没走完的部分</span></span><br><span class="line">        <span class="keyword">if</span>(cur1 != <span class="keyword">null</span>)&#123;</span><br><span class="line">            cur.next = cur1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(cur2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">            cur.next = cur2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> root.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-443. 压缩字符串</title>
      <link href="/2021/07/23/leetcode/leetcode-443-%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2021/07/23/leetcode/leetcode-443-%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="443-压缩字符串"><a class="markdownIt-Anchor" href="#443-压缩字符串"></a> <a href="https://leetcode-cn.com/problems/string-compression/">443. 压缩字符串</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compress</span><span class="params">(<span class="keyword">char</span>[] chars)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = chars.length;</span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch = chars[i];</span><br><span class="line">            <span class="keyword">if</span>(ch == chars[i-<span class="number">1</span>])&#123;</span><br><span class="line">                union(i, i-<span class="number">1</span>, parent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        sb.append(chars[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> pre = find(i-<span class="number">1</span>, parent);</span><br><span class="line">            <span class="keyword">int</span> p1 = find(i, parent);</span><br><span class="line">            <span class="keyword">if</span>(pre == p1)&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(count != <span class="number">1</span>)&#123;</span><br><span class="line">                    sb.append(count +<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    count = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                sb.append(chars[i] +<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(count != <span class="number">1</span>)&#123;</span><br><span class="line">            sb.append(count +<span class="string">&quot;&quot;</span>);</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sb.length(); i++)&#123;</span><br><span class="line">            chars[i] = sb.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.length();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span>[] parent)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(k != parent[k])&#123;</span><br><span class="line">            parent[k] = find(parent[k], parent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span>[] parent)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(i, parent);</span><br><span class="line">        <span class="keyword">int</span> y = find(j, parent);</span><br><span class="line">        <span class="keyword">if</span>(x != y)&#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-128. 最长连续序列</title>
      <link href="/2021/07/23/leetcode/leetcode-128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/"/>
      <url>/2021/07/23/leetcode/leetcode-128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="128-最长连续序列"><a class="markdownIt-Anchor" href="#128-最长连续序列"></a> <a href="https://leetcode-cn.com/problems/longest-consecutive-sequence/">128. 最长连续序列</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestConsecutive</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 并查集</span></span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        </span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// 初始化并查集</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(nums[i]))&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(nums[i], i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(map.get(num) == i)&#123;</span><br><span class="line">                <span class="comment">// 只处理map中包含的index的角标进行去重</span></span><br><span class="line">                <span class="keyword">if</span>(map.containsKey(num-<span class="number">1</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> idx = map.get(num-<span class="number">1</span>);</span><br><span class="line">                    uion(i, idx, parent);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(map.containsKey(num+<span class="number">1</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> idx = map.get(num+<span class="number">1</span>);</span><br><span class="line">                    uion(i, idx, parent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历查找并查集中最多的集合</span></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        Map&lt;Integer, Integer&gt; countMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> p = find(i, parent);</span><br><span class="line">            <span class="keyword">int</span> count = countMap.getOrDefault(p, <span class="number">0</span>) + <span class="number">1</span>;</span><br><span class="line">            countMap.put(p, count);</span><br><span class="line">            ans = Math.max(ans, count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span>[] parent)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(k != parent[k])&#123;</span><br><span class="line">            parent[k] = find(parent[k], parent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uion</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span>[] parent)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(i, parent);</span><br><span class="line">        <span class="keyword">int</span> y = find(j, parent);</span><br><span class="line">        <span class="keyword">if</span>(x != y)&#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1893. 检查是否区域内所有整数都被覆盖</title>
      <link href="/2021/07/23/leetcode/leetcode-1893-%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%8C%BA%E5%9F%9F%E5%86%85%E6%89%80%E6%9C%89%E6%95%B4%E6%95%B0%E9%83%BD%E8%A2%AB%E8%A6%86%E7%9B%96/"/>
      <url>/2021/07/23/leetcode/leetcode-1893-%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%8C%BA%E5%9F%9F%E5%86%85%E6%89%80%E6%9C%89%E6%95%B4%E6%95%B0%E9%83%BD%E8%A2%AB%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1893-检查是否区域内所有整数都被覆盖"><a class="markdownIt-Anchor" href="#1893-检查是否区域内所有整数都被覆盖"></a> <a href="https://leetcode-cn.com/problems/check-if-all-the-integers-in-a-range-are-covered/">1893. 检查是否区域内所有整数都被覆盖</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCovered</span><span class="params">(<span class="keyword">int</span>[][] ranges, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] arr : ranges)&#123;</span><br><span class="line">            <span class="keyword">int</span> l = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> r = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(left &gt;= l &amp;&amp; left&lt;= r)&#123;</span><br><span class="line">                <span class="keyword">if</span>(r &gt;= right)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(isCovered(ranges, r+<span class="number">1</span>, right))&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1049. 最后一块石头的重量 II</title>
      <link href="/2021/07/21/leetcode/leetcode-1049-%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F-II/"/>
      <url>/2021/07/21/leetcode/leetcode-1049-%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1049-最后一块石头的重量-ii"><a class="markdownIt-Anchor" href="#1049-最后一块石头的重量-ii"></a> <a href="https://leetcode-cn.com/problems/last-stone-weight-ii/">1049. 最后一块石头的重量 II</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastStoneWeightII</span><span class="params">(<span class="keyword">int</span>[] stones)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = stones.length;</span><br><span class="line">        <span class="comment">// 总重量</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            sum += stones[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 想要返回石头的重量最小，则需要能达到的被摧毁的最大，最理想的结果是为0，假设为0是能达到的情况</span></span><br><span class="line">        <span class="keyword">int</span> neg = sum/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n+<span class="number">1</span>][neg+<span class="number">1</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= neg; j++)&#123;</span><br><span class="line">                dp[i][j] = dp[i-<span class="number">1</span>][j];</span><br><span class="line">                <span class="keyword">if</span>(j &gt;= stones[i-<span class="number">1</span>])&#123;</span><br><span class="line">                    dp[i][j] = dp[i-<span class="number">1</span>][j] || dp[i-<span class="number">1</span>][j-stones[i-<span class="number">1</span>]];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = neg; j &gt;= <span class="number">0</span>; j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[n][j])&#123;</span><br><span class="line">                <span class="keyword">return</span> sum - <span class="number">2</span>*j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-剑指 Offer 52. 两个链表的第一个公共节点</title>
      <link href="/2021/07/21/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-52-%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E8%8A%82%E7%82%B9/"/>
      <url>/2021/07/21/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-52-%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="剑指-offer-52-两个链表的第一个公共节点"><a class="markdownIt-Anchor" href="#剑指-offer-52-两个链表的第一个公共节点"></a> <a href="https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/">剑指 Offer 52. 两个链表的第一个公共节点</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123;</span></span><br><span class="line"><span class="comment"> *         val = x;</span></span><br><span class="line"><span class="comment"> *         next = null;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">getIntersectionNode</span><span class="params">(ListNode headA, ListNode headB)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(headA == <span class="keyword">null</span> || headB == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode pA = headA;</span><br><span class="line">        ListNode pB = headB;</span><br><span class="line">        <span class="keyword">while</span>(pA != pB)&#123;</span><br><span class="line">            pA = pA == <span class="keyword">null</span> ? headB : pA.next;</span><br><span class="line">            pB = pB == <span class="keyword">null</span> ? headA : pB.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pA;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-494. 目标和</title>
      <link href="/2021/07/20/leetcode/leetcode-494-%E7%9B%AE%E6%A0%87%E5%92%8C/"/>
      <url>/2021/07/20/leetcode/leetcode-494-%E7%9B%AE%E6%A0%87%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="494-目标和"><a class="markdownIt-Anchor" href="#494-目标和"></a> <a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findTargetSumWays</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)&#123;</span><br><span class="line">            sum += num;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// neg必须是能被2除的</span></span><br><span class="line">        <span class="keyword">if</span>((sum - target)&lt;<span class="number">0</span> || (sum - target)%<span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> neg = (sum - target)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][neg+<span class="number">1</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= neg; j++)&#123;</span><br><span class="line">                dp[i][j] = dp[i-<span class="number">1</span>][j];</span><br><span class="line">                <span class="keyword">if</span>(j &gt;= nums[i-<span class="number">1</span>])&#123;</span><br><span class="line">                    dp[i][j] = dp[i-<span class="number">1</span>][j] + dp[i-<span class="number">1</span>][j-nums[i-<span class="number">1</span>]];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n][neg];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ribbon笔记-01</title>
      <link href="/2021/07/12/springCloud/ribbon/ribbon%E7%AC%94%E8%AE%B0-01/"/>
      <url>/2021/07/12/springCloud/ribbon/ribbon%E7%AC%94%E8%AE%B0-01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> spring cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ribbon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 17.10. 主要元素</title>
      <link href="/2021/07/09/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-10-%E4%B8%BB%E8%A6%81%E5%85%83%E7%B4%A0/"/>
      <url>/2021/07/09/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-10-%E4%B8%BB%E8%A6%81%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="面试题-1710-主要元素"><a class="markdownIt-Anchor" href="#面试题-1710-主要元素"></a> <a href="https://leetcode-cn.com/problems/find-majority-element-lcci/">面试题 17.10. 主要元素</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(count == <span class="number">0</span>)&#123;</span><br><span class="line">                ans = nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] != ans)&#123;</span><br><span class="line">                count--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] == ans)&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt*<span class="number">2</span> &gt; nums.length ? ans : -<span class="number">1</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mathType转latex-使用java调用go</title>
      <link href="/2021/06/29/work/mathType%E8%BD%AClatex-%E4%BD%BF%E7%94%A8java%E8%B0%83%E7%94%A8go/"/>
      <url>/2021/06/29/work/mathType%E8%BD%AClatex-%E4%BD%BF%E7%94%A8java%E8%B0%83%E7%94%A8go/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="mathtype转latex-java调用go转mathtype"><a class="markdownIt-Anchor" href="#mathtype转latex-java调用go转mathtype"></a> mathType转latex-java调用go转mathType</h2><h3 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h3><p>​教育行业常使用mathType作为公式编辑器，当解析word资源转为线上资源时，常用java word poi提取word数据，但其中mathType只能被识别为图片，不能正常解析为可编辑公式，此时往往部署另一套C#程序解析word，使用windows部署C#解析word存在解析缓慢、程序易卡死，大多数java开发人员不熟悉C#无法快速迭代的通病，此时亟需使用java解析mathType，从而完全替代C#版本的word解析。</p><p>​mathType是一个第三方的数学公式插件，生成的是一个带有公式矢量图ole对象插入到文档中，.net使用mathType提供的C#包解析ole对象，但使用java程序无法直接解析，.net依赖于windows环境，无法部署到K8S容器中，本文基于java word poi的基础上提出java + go处理mathType转化为latex的解决方案。</p><h3 id="方案探索"><a class="markdownIt-Anchor" href="#方案探索"></a> 方案探索</h3><p>​目前无较好直接解析mathType的java程序，但反观其它语言却存在解析mathType的解决方案，github中一款由作者zhexiao基于go程序解析mathType的二进制文件为latex程序，此程序直接解析mathType的二进制文件为latex，正好弥补java解析mathType中存在的不足。假想能部署一套go程序，使用基于http请求调用go程序转mathType转latex，将latex公式嵌入word解析中，实现java调用go解析mathType为latex公式似乎是替换java无法直接解析mathType的执行方案。</p><p>​首先部署golang环境，拉取mathType解析latex程序https://github.com/zhexiao/mtef-go运行程序，运行作者示例，然后执行一下命名</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span> -f test/oleObject1.bin</span><br></pre></td></tr></table></figure><p>​得到编译结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ \frac &#123; -b±\sqrt[] &#123; b ^ &#123; 2 &#125; -4ac &#125; &#125; &#123; 2a &#125; $$</span><br></pre></td></tr></table></figure><p>​此时证明java + go处理mathType转化为latex方案的可行性，接下来就是如何将word中mathType中的二进制文件提取出来，观察以下mathType在word中的xml结构，o:OLEObject代表一个公式，ProgID=&quot;Equation.DSMT4&quot;表示为MathType类型，r:id=&quot;rId6&quot;可作为该二进制文件的唯一id</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml-fragment</span> <span class="attr">xmlns:wpc</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas&quot;</span> <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span> <span class="attr">xmlns:o</span>=<span class="string">&quot;urn:schemas-microsoft-com:office:office&quot;</span> <span class="attr">xmlns:r</span>=<span class="string">&quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships&quot;</span> <span class="attr">xmlns:m</span>=<span class="string">&quot;http://schemas.openxmlformats.org/officeDocument/2006/math&quot;</span> <span class="attr">xmlns:v</span>=<span class="string">&quot;urn:schemas-microsoft-com:vml&quot;</span> <span class="attr">xmlns:wp14</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing&quot;</span> <span class="attr">xmlns:wp</span>=<span class="string">&quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&quot;</span> <span class="attr">xmlns:w</span>=<span class="string">&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;</span> <span class="attr">xmlns:w14</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordml&quot;</span> <span class="attr">xmlns:w10</span>=<span class="string">&quot;urn:schemas-microsoft-com:office:word&quot;</span> <span class="attr">xmlns:w15</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2012/wordml&quot;</span> <span class="attr">xmlns:wpg</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordprocessingGroup&quot;</span> <span class="attr">xmlns:wpi</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordprocessingInk&quot;</span> <span class="attr">xmlns:wne</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2006/wordml&quot;</span> <span class="attr">xmlns:wps</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordprocessingShape&quot;</span> <span class="attr">xmlns:wpsCustomData</span>=<span class="string">&quot;http://www.wps.cn/officeDocument/2013/wpsCustomData&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:rFonts</span> <span class="attr">w:ascii</span>=<span class="string">&quot;Times New Roman&quot;</span> <span class="attr">w:hAnsi</span>=<span class="string">&quot;Times New Roman&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:position</span> <span class="attr">w:val</span>=<span class="string">&quot;-10&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:object</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v:shape</span> <span class="attr">id</span>=<span class="string">&quot;_x0000_i1025&quot;</span> <span class="attr">o:spt</span>=<span class="string">&quot;75&quot;</span> <span class="attr">type</span>=<span class="string">&quot;#_x0000_t75&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height:15pt;width:6.75pt;&quot;</span> <span class="attr">o:ole</span>=<span class="string">&quot;t&quot;</span> <span class="attr">filled</span>=<span class="string">&quot;f&quot;</span> <span class="attr">o:preferrelative</span>=<span class="string">&quot;t&quot;</span> <span class="attr">stroked</span>=<span class="string">&quot;f&quot;</span> <span class="attr">coordsize</span>=<span class="string">&quot;21600,21600&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v:path</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v:fill</span> <span class="attr">on</span>=<span class="string">&quot;f&quot;</span> <span class="attr">focussize</span>=<span class="string">&quot;0,0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v:stroke</span> <span class="attr">on</span>=<span class="string">&quot;f&quot;</span> <span class="attr">joinstyle</span>=<span class="string">&quot;miter&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v:imagedata</span> <span class="attr">r:id</span>=<span class="string">&quot;rId7&quot;</span> <span class="attr">o:title</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">o:lock</span> <span class="attr">v:ext</span>=<span class="string">&quot;edit&quot;</span> <span class="attr">aspectratio</span>=<span class="string">&quot;t&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w10:wrap</span> <span class="attr">type</span>=<span class="string">&quot;none&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w10:anchorlock</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">v:shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">o:OLEObject</span> <span class="attr">Type</span>=<span class="string">&quot;Embed&quot;</span> <span class="attr">ProgID</span>=<span class="string">&quot;Equation.DSMT4&quot;</span> <span class="attr">ShapeID</span>=<span class="string">&quot;_x0000_i1025&quot;</span> <span class="attr">DrawAspect</span>=<span class="string">&quot;Content&quot;</span> <span class="attr">ObjectID</span>=<span class="string">&quot;_1468075725&quot;</span> <span class="attr">r:id</span>=<span class="string">&quot;rId6&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">o:LockedField</span>&gt;</span>false<span class="tag">&lt;/<span class="name">o:LockedField</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">o:OLEObject</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">w:object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml-fragment</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​java word poi获取mathType二进制文件，用r:id属性映射每个二进制文件为Map结构，方便替换mathType节点，由于word.getPartById(binRid)获取到的是inputStream，go程序接收的参数是二进制文件，需要将二进制文件写入文件供go程序调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Map&lt;String, String&gt; <span class="title">getMath</span><span class="params">(XWPFRun run, Node runNode)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = Maps.newHashMap();</span><br><span class="line">  <span class="comment">// 获取mathType OLEObject节点</span></span><br><span class="line">        Node binNode = getChildNode(runNode, <span class="string">&quot;o:OLEObject&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (binNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">        XWPFDocument word = run.getDocument();</span><br><span class="line">        NamedNodeMap binAttrs = binNode.getAttributes();</span><br><span class="line">        <span class="comment">// 公式二进制文件在Word中的ID</span></span><br><span class="line">        String binRid = binAttrs.getNamedItem(<span class="string">&quot;r:id&quot;</span>).getNodeValue();</span><br><span class="line">        <span class="comment">// 获取二进制文件</span></span><br><span class="line">        PackagePart binPart = word.getPartById(binRid);</span><br><span class="line">        String path = <span class="string">&quot;oleObject-&quot;</span> + binRid + <span class="string">&quot;.bin&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(path))&#123;</span><br><span class="line">            <span class="keyword">if</span> (!map.containsKey(binRid)) &#123;</span><br><span class="line">                ByteStreams.copy(binPart.getInputStream(), fileOutputStream);</span><br><span class="line">              <span class="comment">// 调用go程序执行MathType转latex</span></span><br><span class="line">                String latex = MathTypeToLatex.mathTypeTransformer.Convert(<span class="keyword">new</span> GoString.ByValue(path));</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isNotBlank(latex)) &#123;</span><br><span class="line">                    log.info(<span class="string">&quot;getMath-&gt;latex转换成功,latex:&#123;&#125;&quot;</span>, latex);</span><br><span class="line">                    map.put(binRid, latex);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;getMath-&gt;mathType转latex出现错误:&#123;&#125;&quot;</span>, e);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            Files.delete(Paths.get(path));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">getChildNode</span><span class="params">(Node node, String nodeName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!node.hasChildNodes()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        NodeList childNodes = node.getChildNodes();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; childNodes.getLength(); i++) &#123;</span><br><span class="line">            Node childNode = childNodes.item(i);</span><br><span class="line">            <span class="keyword">if</span> (nodeName.equals(childNode.getNodeName())) &#123;</span><br><span class="line">                <span class="keyword">return</span> childNode;</span><br><span class="line">            &#125;</span><br><span class="line">            childNode = getChildNode(childNode, nodeName);</span><br><span class="line">            <span class="keyword">if</span> (childNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> childNode;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​程序中MathTypeToLatex.mathTypeTransformer.Convert(new GoString.ByValue(path))是java调用go程序，此时发现每个mathType二进制文件java通过http调用go解析成latex耗时，此时需将go语言交叉编译为.so文件使用java jni调用，减少程序HTTP请求调用</p><h3 id="go交叉编译java可执行so文件"><a class="markdownIt-Anchor" href="#go交叉编译java可执行so文件"></a> go交叉编译java可执行.so文件</h3><p>​交叉编译环境准备，如果不存在gcc环境，则安装gcc环境</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure><p>​提取go转mateType程序为latex程序代码MathTypeConvert.go，需要编译成动态库，也要有main函数，上面的<code>import &quot;C&quot;</code>一定要有 而且一定要有注释，java JNI调用的是C(C++)，方法上面需要有//export 注释</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// +build linux,amd64,go1.15,!cgo</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;container/list&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/binary&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/extrame/ole2&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//export Convert</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Convert</span><span class="params">(filepath <span class="keyword">string</span>)</span> *<span class="title">C</span>.<span class="title">char</span></span> &#123;</span><br><span class="line">buffer, err := ioutil.ReadFile(filepath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Print(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reader := bytes.NewReader(buffer)</span><br><span class="line">mtef, err := Open(reader)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">latex := mtef.Translate()</span><br><span class="line"><span class="keyword">return</span> C.CString(latex)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> SpecialChar = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;!&quot;</span>: <span class="string">&quot;\\!&quot;</span>,</span><br><span class="line"><span class="string">&quot;#&quot;</span>: <span class="string">&quot;\\#&quot;</span>,</span><br><span class="line"><span class="string">&quot;$&quot;</span>: <span class="string">&quot;\\$&quot;</span>,</span><br><span class="line"><span class="string">&quot;%&quot;</span>: <span class="string">&quot;\\%&quot;</span>,</span><br><span class="line"><span class="string">&quot;&amp;&quot;</span>: <span class="string">&quot;\\&amp;&quot;</span>,</span><br><span class="line"><span class="string">&quot;:&quot;</span>: <span class="string">&quot;\\:&quot;</span>,</span><br><span class="line"><span class="string">&quot;;&quot;</span>: <span class="string">&quot;\\;&quot;</span>,</span><br><span class="line"><span class="string">&quot;_&quot;</span>: <span class="string">&quot;\\_&quot;</span>,</span><br><span class="line"><span class="string">&quot;&#123;&quot;</span>: <span class="string">&quot;\\&#123;&quot;</span>,</span><br><span class="line"><span class="string">&quot;|&quot;</span>: <span class="string">&quot;\\|&quot;</span>,</span><br><span class="line"><span class="string">&quot;&#125;&quot;</span>: <span class="string">&quot;\\&#125;&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Chars = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;char/0x0020&quot;</span>:          <span class="string">&quot; &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0021&quot;</span>:          <span class="string">&quot;!&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0022&quot;</span>:          <span class="string">&quot;&#x27;&#x27;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0023/mathmode&quot;</span>: <span class="string">&quot;\\@#&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0024/mathmode&quot;</span>: <span class="string">&quot;\\$&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0025/mathmode&quot;</span>: <span class="string">&quot;%&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0026/mathmode&quot;</span>: <span class="string">&quot;\\And &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0027/mathmode&quot;</span>: <span class="string">&quot;&#x27;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0028&quot;</span>:          <span class="string">&quot;(&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0029&quot;</span>:          <span class="string">&quot;)&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x002a&quot;</span>:          <span class="string">&quot;*&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x002b&quot;</span>:          <span class="string">&quot;+&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x002c&quot;</span>:          <span class="string">&quot;,&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x002d&quot;</span>:          <span class="string">&quot;-&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x002e&quot;</span>:          <span class="string">&quot;.&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x002f&quot;</span>:          <span class="string">&quot;/&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0030&quot;</span>:          <span class="string">&quot;0&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0031&quot;</span>:          <span class="string">&quot;1&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0032&quot;</span>:          <span class="string">&quot;2&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0033&quot;</span>:          <span class="string">&quot;3&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0034&quot;</span>:          <span class="string">&quot;4&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0035&quot;</span>:          <span class="string">&quot;5&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0036&quot;</span>:          <span class="string">&quot;6&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0037&quot;</span>:          <span class="string">&quot;7&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0038&quot;</span>:          <span class="string">&quot;8&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0039&quot;</span>:          <span class="string">&quot;9&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003a&quot;</span>:          <span class="string">&quot;:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003b&quot;</span>:          <span class="string">&quot;;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003c/mathmode&quot;</span>: <span class="string">&quot; &lt; &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003d&quot;</span>:          <span class="string">&quot;=&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003e/mathmode&quot;</span>: <span class="string">&quot;&gt;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003f&quot;</span>:          <span class="string">&quot;?&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0041&quot;</span>:          <span class="string">&quot;A&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0042&quot;</span>:          <span class="string">&quot;B&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0043&quot;</span>:          <span class="string">&quot;C&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0044&quot;</span>:          <span class="string">&quot;D&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0045&quot;</span>:          <span class="string">&quot;E&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0046&quot;</span>:          <span class="string">&quot;F&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0047&quot;</span>:          <span class="string">&quot;G&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0048&quot;</span>:          <span class="string">&quot;H&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0049&quot;</span>:          <span class="string">&quot;I&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x004a&quot;</span>:          <span class="string">&quot;J&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x004b&quot;</span>:          <span class="string">&quot;K&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x004c&quot;</span>:          <span class="string">&quot;L&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x004d&quot;</span>:          <span class="string">&quot;M&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x004e&quot;</span>:          <span class="string">&quot;N&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x004f&quot;</span>:          <span class="string">&quot;O&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0050&quot;</span>:          <span class="string">&quot;P&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0051&quot;</span>:          <span class="string">&quot;Q&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0052&quot;</span>:          <span class="string">&quot;R&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0053&quot;</span>:          <span class="string">&quot;S&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0054&quot;</span>:          <span class="string">&quot;T&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0055&quot;</span>:          <span class="string">&quot;U&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0056&quot;</span>:          <span class="string">&quot;V&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0057&quot;</span>:          <span class="string">&quot;W&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0058&quot;</span>:          <span class="string">&quot;X&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0059&quot;</span>:          <span class="string">&quot;Y&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x005a&quot;</span>:          <span class="string">&quot;Z&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x005b/mathmode&quot;</span>: <span class="string">&quot;[&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x005c/mathmode&quot;</span>: <span class="string">&quot;\\backslash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x005d/mathmode&quot;</span>: <span class="string">&quot;]&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x005e/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x005f/mathmode&quot;</span>: <span class="string">&quot;\\_&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0060/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0061&quot;</span>:          <span class="string">&quot;a&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0062&quot;</span>:          <span class="string">&quot;b&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0063&quot;</span>:          <span class="string">&quot;c&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0064&quot;</span>:          <span class="string">&quot;d&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0065&quot;</span>:          <span class="string">&quot;e&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0066&quot;</span>:          <span class="string">&quot;f&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0067&quot;</span>:          <span class="string">&quot;g&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0068&quot;</span>:          <span class="string">&quot;h&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0069&quot;</span>:          <span class="string">&quot;i&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x006a&quot;</span>:          <span class="string">&quot;j&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x006b&quot;</span>:          <span class="string">&quot;k&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x006c&quot;</span>:          <span class="string">&quot;l&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x006d&quot;</span>:          <span class="string">&quot;m&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x006e&quot;</span>:          <span class="string">&quot;n&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x006f&quot;</span>:          <span class="string">&quot;o&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0070&quot;</span>:          <span class="string">&quot;p&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0071&quot;</span>:          <span class="string">&quot;q&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0072&quot;</span>:          <span class="string">&quot;r&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0073&quot;</span>:          <span class="string">&quot;s&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0074&quot;</span>:          <span class="string">&quot;t&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0075&quot;</span>:          <span class="string">&quot;u&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0076&quot;</span>:          <span class="string">&quot;v&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0077&quot;</span>:          <span class="string">&quot;w&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0078&quot;</span>:          <span class="string">&quot;x&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0079&quot;</span>:          <span class="string">&quot;y&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x007a&quot;</span>:          <span class="string">&quot;z&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x007b/mathmode&quot;</span>: <span class="string">&quot;\\&#123;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x007c/mathmode&quot;</span>: <span class="string">&quot;|&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x007d/mathmode&quot;</span>: <span class="string">&quot;\\&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x007e/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a0/mathmode&quot;</span>: <span class="string">&quot;~&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a1/mathmode&quot;</span>: <span class="string">&quot;\\text&#123;�&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a1/textmode&quot;</span>: <span class="string">&quot;�&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a2/mathmode&quot;</span>: <span class="string">&quot;\\text&#123;�&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a2/textmode&quot;</span>: <span class="string">&quot;�&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a3/mathmode&quot;</span>: <span class="string">&quot;\\text&#123;�&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a3/textmode&quot;</span>: <span class="string">&quot;�&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a4/mathmode&quot;</span>: <span class="string">&quot;\\text&#123;�&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a4/textmode&quot;</span>: <span class="string">&quot;�&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a5/mathmode&quot;</span>: <span class="string">&quot;\\text&#123;�&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a5/textmode&quot;</span>: <span class="string">&quot;�&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a6/mathmode&quot;</span>: <span class="string">&quot;\\text&#123;�&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a6/textmode&quot;</span>: <span class="string">&quot;�&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a7/mathmode&quot;</span>: <span class="string">&quot;\\S &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00a8/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00aa/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\text&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ab/mathmode&quot;</span>: <span class="string">&quot;\\ll &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ac/mathmode&quot;</span>: <span class="string">&quot;\\neg &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00af/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b0/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\circ &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b1/mathmode&quot;</span>: <span class="string">&quot;\\pm &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b2/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\text&#123;2&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b3/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\text&#123;3&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b4/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b5/mathmode&quot;</span>: <span class="string">&quot;\\mu &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b6/mathmode&quot;</span>: <span class="string">&quot;\\P &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b7/mathmode&quot;</span>: <span class="string">&quot;\\cdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00b9/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\text&#123;1&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ba/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\text&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00bb/mathmode&quot;</span>: <span class="string">&quot;\\gg &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00bc/mathmode&quot;</span>: <span class="string">&quot;&#123;\\scriptscriptstyle 1\\!/\\!&#123; &#125;_4&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00bd/mathmode&quot;</span>: <span class="string">&quot;&#123;\\scriptscriptstyle 1\\!/\\!&#123; &#125;_2&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00be/mathmode&quot;</span>: <span class="string">&quot;&#123;\\scriptscriptstyle 3\\!/\\!&#123; &#125;_4&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c0/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c1/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c2/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c3/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c4/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c5/mathmode&quot;</span>: <span class="string">&quot;&#123;\\AA&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c8/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00c9/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ca/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00cb/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00cc/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00cd/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ce/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00cf/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d1/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d2/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d3/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d4/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d5/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d6/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d7/mathmode&quot;</span>: <span class="string">&quot;\\times &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d8/mathmode&quot;</span>: <span class="string">&quot;\\O &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00d9/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00da/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00db/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00dc/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00dd/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;Y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e0/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e1/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e2/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e3/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e4/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e8/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00e9/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ea/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00eb/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ec/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ed/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ee/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ef/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f0/mathmode&quot;</span>: <span class="string">&quot;\\eth &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f1/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;n&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f2/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f3/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f4/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f5/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f6/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f7/mathmode&quot;</span>: <span class="string">&quot;\\div &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00f9/mathmode&quot;</span>: <span class="string">&quot;\\grave&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00fa/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00fb/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00fc/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00fd/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x00ff/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0100/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0101/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0102/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0103/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0106/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0107/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;c&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0108/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0109/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;c&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x010a/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x010b/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;c&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x010c/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x010d/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;c&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x010e/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;D&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x010f/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;d&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0112/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0113/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0114/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0115/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0116/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0117/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x011a/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x011b/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x011c/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;G&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x011d/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;g&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x011e/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;G&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x011f/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;g&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0120/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;G&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0121/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;g&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0124/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0125/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;h&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0127/mathmode&quot;</span>: <span class="string">&quot;\\hbar &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0128/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0129/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x012a/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x012b/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x012c/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x012d/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0130/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0131/mathmode&quot;</span>: <span class="string">&quot;\\imath &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0134/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;J&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0135/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;j&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0139/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;L&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x013a/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;l&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x013d/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;L&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x013e/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;l&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x013f/mathmode&quot;</span>: <span class="string">&quot;\\mathrm&#123;L&#125;\\!\\!\\cdot&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0140/mathmode&quot;</span>: <span class="string">&quot;\\mathrm&#123;l&#125;\\cdot&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0143/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0144/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;n&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0147/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0148/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;n&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x014c/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x014d/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x014e/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x014f/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0154/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0155/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;r&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0158/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0159/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;r&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x015a/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;S&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x015b/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;s&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x015c/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;S&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x015d/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;s&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0160/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;S&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0161/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;s&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0164/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;T&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0165/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;t&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0168/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0169/mathmode&quot;</span>: <span class="string">&quot;\\tilde&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x016a/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x016b/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x016c/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x016d/mathmode&quot;</span>: <span class="string">&quot;\\breve&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x016e/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\circ&#125;&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x016f/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\circ&#125;&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0174/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;W&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0175/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;w&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0176/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;Y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0177/mathmode&quot;</span>: <span class="string">&quot;\\hat&#123;y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0178/mathmode&quot;</span>: <span class="string">&quot;\\ddot&#123;Y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0179/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x017a/mathmode&quot;</span>: <span class="string">&quot;\\acute&#123;z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x017b/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x017c/mathmode&quot;</span>: <span class="string">&quot;\\dot&#123;z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x017d/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x017e/mathmode&quot;</span>: <span class="string">&quot;\\check&#123;z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0391/mathmode&quot;</span>: <span class="string">&quot;\\Alpha &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0392/mathmode&quot;</span>: <span class="string">&quot;\\Beta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0393/mathmode&quot;</span>: <span class="string">&quot;\\Gamma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0394/mathmode&quot;</span>: <span class="string">&quot;\\Delta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0395/mathmode&quot;</span>: <span class="string">&quot;\\Epsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0396/mathmode&quot;</span>: <span class="string">&quot;\\Zeta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0397/mathmode&quot;</span>: <span class="string">&quot;\\Eta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0398/mathmode&quot;</span>: <span class="string">&quot;\\Theta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0399/mathmode&quot;</span>: <span class="string">&quot;\\Iota &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039a/mathmode&quot;</span>: <span class="string">&quot;\\Kappa &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039b/mathmode&quot;</span>: <span class="string">&quot;\\Lambda &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039c/mathmode&quot;</span>: <span class="string">&quot;\\Mu &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039d/mathmode&quot;</span>: <span class="string">&quot;\\Nu &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039e/mathmode&quot;</span>: <span class="string">&quot;\\Xi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039f/mathmode&quot;</span>: <span class="string">&quot;&#123;\\mathrm O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x039f/textmode&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a0/mathmode&quot;</span>: <span class="string">&quot;\\Pi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a1/mathmode&quot;</span>: <span class="string">&quot;\\Rho &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a3/mathmode&quot;</span>: <span class="string">&quot;\\Sigma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a4/mathmode&quot;</span>: <span class="string">&quot;\\Tau &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a5/mathmode&quot;</span>: <span class="string">&quot;\\Upsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a6/mathmode&quot;</span>: <span class="string">&quot;\\Phi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a7/mathmode&quot;</span>: <span class="string">&quot;\\Chi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a8/mathmode&quot;</span>: <span class="string">&quot;\\Psi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03a9/mathmode&quot;</span>: <span class="string">&quot;\\Omega &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b1/mathmode&quot;</span>: <span class="string">&quot;\\alpha &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b2/mathmode&quot;</span>: <span class="string">&quot;\\beta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b3/mathmode&quot;</span>: <span class="string">&quot;\\gamma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b4/mathmode&quot;</span>: <span class="string">&quot;\\delta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b5/mathmode&quot;</span>: <span class="string">&quot;\\varepsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b6/mathmode&quot;</span>: <span class="string">&quot;\\zeta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b7/mathmode&quot;</span>: <span class="string">&quot;\\eta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b8/mathmode&quot;</span>: <span class="string">&quot;\\theta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03b9/mathmode&quot;</span>: <span class="string">&quot;\\iota &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03ba/mathmode&quot;</span>: <span class="string">&quot;\\kappa &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03bb/mathmode&quot;</span>: <span class="string">&quot;\\lambda &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03bc/mathmode&quot;</span>: <span class="string">&quot;\\mu &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03bd/mathmode&quot;</span>: <span class="string">&quot;\\nu &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03be/mathmode&quot;</span>: <span class="string">&quot;\\xi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03bf&quot;</span>:          <span class="string">&quot;o&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c0/mathmode&quot;</span>: <span class="string">&quot;\\pi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c1/mathmode&quot;</span>: <span class="string">&quot;\\rho &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c2/mathmode&quot;</span>: <span class="string">&quot;\\varsigma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c3/mathmode&quot;</span>: <span class="string">&quot;\\sigma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c4/mathmode&quot;</span>: <span class="string">&quot;\\tau &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c5/mathmode&quot;</span>: <span class="string">&quot;\\upsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c6/mathmode&quot;</span>: <span class="string">&quot;\\varphi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c7/mathmode&quot;</span>: <span class="string">&quot;\\chi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c8/mathmode&quot;</span>: <span class="string">&quot;\\psi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03c9/mathmode&quot;</span>: <span class="string">&quot;\\omega &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03d1/mathmode&quot;</span>: <span class="string">&quot;\\vartheta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03d2/mathmode&quot;</span>: <span class="string">&quot;\\Upsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03d5/mathmode&quot;</span>: <span class="string">&quot;\\phi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03d6/mathmode&quot;</span>: <span class="string">&quot;\\varpi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03db/mathmode&quot;</span>: <span class="string">&quot;\\varsigma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03dc/mathmode&quot;</span>: <span class="string">&quot;\\digamma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03f0/mathmode&quot;</span>: <span class="string">&quot;\\varkappa &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03f1/mathmode&quot;</span>: <span class="string">&quot;\\varrho &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03f5/mathmode&quot;</span>: <span class="string">&quot;\\epsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x03f6/mathmode&quot;</span>: <span class="string">&quot;\\backepsilon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2010/textmode&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2013/textmode&quot;</span>: <span class="string">&quot;--&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2014/textmode&quot;</span>: <span class="string">&quot;---&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2016/mathmode&quot;</span>: <span class="string">&quot;\\|&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2020/mathmode&quot;</span>: <span class="string">&quot;\\dagger &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2021/mathmode&quot;</span>: <span class="string">&quot;\\ddagger &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2022/mathmode&quot;</span>: <span class="string">&quot;\\bullet &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2026/mathmode&quot;</span>: <span class="string">&quot;\\ldots &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2032/mathmode&quot;</span>: <span class="string">&quot;\\prime &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2033/mathmode&quot;</span>: <span class="string">&quot;\\prime\\prime &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2034/mathmode&quot;</span>: <span class="string">&quot;\\prime\\prime\\prime &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2035/mathmode&quot;</span>: <span class="string">&quot;\\backprime &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2036/mathmode&quot;</span>: <span class="string">&quot;\\backprime\\backprime &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2037/mathmode&quot;</span>: <span class="string">&quot;\\backprime\\backprime\\backprime &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x203e/mathmode&quot;</span>: <span class="string">&quot;\\bar&#123;\\ &#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x203f/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;_\\smile &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2040/mathmode&quot;</span>: <span class="string">&quot;&#123;&#125;^\\frown &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2044&quot;</span>:          <span class="string">&quot;/&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a1/mathmode&quot;</span>: <span class="string">&quot;\\Colon &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a2/mathmode&quot;</span>: <span class="string">&quot;\\cruzeiro &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a3/mathmode&quot;</span>: <span class="string">&quot;\\franc &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a4/mathmode&quot;</span>: <span class="string">&quot;\\lira &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a5/mathmode&quot;</span>: <span class="string">&quot;\\mill &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a6/mathmode&quot;</span>: <span class="string">&quot;\\naira &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a7/mathmode&quot;</span>: <span class="string">&quot;\\peseta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a8/mathmode&quot;</span>: <span class="string">&quot;\\rupee &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20a9/mathmode&quot;</span>: <span class="string">&quot;\\won &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20aa/mathmode&quot;</span>: <span class="string">&quot;\\newsheqel &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20ab/mathmode&quot;</span>: <span class="string">&quot;\\dong &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20ac/mathmode&quot;</span>: <span class="string">&quot;\\euro &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20ad/mathmode&quot;</span>: <span class="string">&quot;\\kip &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20ae/mathmode&quot;</span>: <span class="string">&quot;\\tugrik &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20af/mathmode&quot;</span>: <span class="string">&quot;\\drachma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20b0/mathmode&quot;</span>: <span class="string">&quot;\\germanpenny &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20b1/mathmode&quot;</span>: <span class="string">&quot;\\peso &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20b2/mathmode&quot;</span>: <span class="string">&quot;\\guarani &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20b3/mathmode&quot;</span>: <span class="string">&quot;\\austral &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20b4/mathmode&quot;</span>: <span class="string">&quot;\\hryvnia &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x20b5/mathmode&quot;</span>: <span class="string">&quot;\\cedi &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2102/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2107/mathmode&quot;</span>: <span class="string">&quot;\\gamma &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x210a&quot;</span>:          <span class="string">&quot;g&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x210b/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x210c/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x210d/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x210e/mathmode&quot;</span>: <span class="string">&quot;h&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x210f/mathmode&quot;</span>: <span class="string">&quot;\\hbar &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2110/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2111/mathmode&quot;</span>: <span class="string">&quot;\\Im &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2112/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;L&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2113/mathmode&quot;</span>: <span class="string">&quot;\\ell &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2115/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2118/mathmode&quot;</span>: <span class="string">&quot;\\wp &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2119/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;P&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x211a/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;Q&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x211b/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x211c/mathmode&quot;</span>: <span class="string">&quot;\\Re &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x211d/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2124/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2126/mathmode&quot;</span>: <span class="string">&quot;\\Omega &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2127/mathmode&quot;</span>: <span class="string">&quot;\\mho &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2128/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;X&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x212c/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;B&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x212d/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2130/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2131/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;F&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2132/mathmode&quot;</span>: <span class="string">&quot;\\Finv &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2133/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;M&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2135/mathmode&quot;</span>: <span class="string">&quot;\\aleph &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2136/mathmode&quot;</span>: <span class="string">&quot;\\beth &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2137/mathmode&quot;</span>: <span class="string">&quot;\\gimel &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2138/mathmode&quot;</span>: <span class="string">&quot;\\daleth &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2190/mathmode&quot;</span>: <span class="string">&quot;\\leftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2191/mathmode&quot;</span>: <span class="string">&quot;\\uparrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2192/mathmode&quot;</span>: <span class="string">&quot;\\to &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2193/mathmode&quot;</span>: <span class="string">&quot;\\downarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2194/mathmode&quot;</span>: <span class="string">&quot;\\leftrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2195/mathmode&quot;</span>: <span class="string">&quot;\\updownarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2196/mathmode&quot;</span>: <span class="string">&quot;\\nwarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2197/mathmode&quot;</span>: <span class="string">&quot;\\nearrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2198/mathmode&quot;</span>: <span class="string">&quot;\\searrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2199/mathmode&quot;</span>: <span class="string">&quot;\\swarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x219a/mathmode&quot;</span>: <span class="string">&quot;\\nleftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x219b/mathmode&quot;</span>: <span class="string">&quot;\\nrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x219d/mathmode&quot;</span>: <span class="string">&quot;\\rightsquigarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x219e/mathmode&quot;</span>: <span class="string">&quot;\\twoheadleftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21a0/mathmode&quot;</span>: <span class="string">&quot;\\twoheadrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21a2/mathmode&quot;</span>: <span class="string">&quot;\\leftarrowtail &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21a3/mathmode&quot;</span>: <span class="string">&quot;\\rightarrowtail &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21a6/mathmode&quot;</span>: <span class="string">&quot;\\mapsto &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21a9/mathmode&quot;</span>: <span class="string">&quot;\\hookleftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21aa/mathmode&quot;</span>: <span class="string">&quot;\\hookrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ab/mathmode&quot;</span>: <span class="string">&quot;\\looparrowleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ac/mathmode&quot;</span>: <span class="string">&quot;\\looparrowright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ad/mathmode&quot;</span>: <span class="string">&quot;\\leftrightsquigarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ae/mathmode&quot;</span>: <span class="string">&quot;\\nleftrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21b0/mathmode&quot;</span>: <span class="string">&quot;\\Lsh &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21b1/mathmode&quot;</span>: <span class="string">&quot;\\Rsh &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21b6/mathmode&quot;</span>: <span class="string">&quot;\\curvearrowleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21b7/mathmode&quot;</span>: <span class="string">&quot;\\curvearrowright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ba/mathmode&quot;</span>: <span class="string">&quot;\\circlearrowleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21bb/mathmode&quot;</span>: <span class="string">&quot;\\circlearrowright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21bc/mathmode&quot;</span>: <span class="string">&quot;\\leftharpoonup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21bd/mathmode&quot;</span>: <span class="string">&quot;\\leftharpoondown &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21be/mathmode&quot;</span>: <span class="string">&quot;\\upharpoonright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21bf/mathmode&quot;</span>: <span class="string">&quot;\\upharpoonleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c0/mathmode&quot;</span>: <span class="string">&quot;\\rightharpoonup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c1/mathmode&quot;</span>: <span class="string">&quot;\\rightharpoondown &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c2/mathmode&quot;</span>: <span class="string">&quot;\\downharpoonright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c3/mathmode&quot;</span>: <span class="string">&quot;\\downharpoonleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c4/mathmode&quot;</span>: <span class="string">&quot;\\rightleftarrows &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c5/mathmode&quot;</span>: <span class="string">&quot;\\uparrow\\!\\downarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c6/mathmode&quot;</span>: <span class="string">&quot;\\leftrightarrows &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c7/mathmode&quot;</span>: <span class="string">&quot;\\leftleftarrows &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c8/mathmode&quot;</span>: <span class="string">&quot;\\upuparrows &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21c9/mathmode&quot;</span>: <span class="string">&quot;\\rightrightarrows &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ca/mathmode&quot;</span>: <span class="string">&quot;\\downdownarrows &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21cb/mathmode&quot;</span>: <span class="string">&quot;\\leftrightharpoons &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21cc/mathmode&quot;</span>: <span class="string">&quot;\\rightleftharpoons &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21cd/mathmode&quot;</span>: <span class="string">&quot;\\nLeftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21ce/mathmode&quot;</span>: <span class="string">&quot;\\nLeftrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21cf/mathmode&quot;</span>: <span class="string">&quot;\\nRightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21d0/mathmode&quot;</span>: <span class="string">&quot;\\Leftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21d1/mathmode&quot;</span>: <span class="string">&quot;\\Uparrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21d2/mathmode&quot;</span>: <span class="string">&quot;\\Rightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21d3/mathmode&quot;</span>: <span class="string">&quot;\\Downarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21d4/mathmode&quot;</span>: <span class="string">&quot;\\Leftrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21d5/mathmode&quot;</span>: <span class="string">&quot;\\Updownarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21da/mathmode&quot;</span>: <span class="string">&quot;\\Lleftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21db/mathmode&quot;</span>: <span class="string">&quot;\\Rrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21dd/mathmode&quot;</span>: <span class="string">&quot;\\rightsquigarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21e4/mathmode&quot;</span>: <span class="string">&quot;\\shortmid\\!\\leftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x21e5/mathmode&quot;</span>: <span class="string">&quot;\\shortmid\\!\\rightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2200/mathmode&quot;</span>: <span class="string">&quot;\\forall &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2201/mathmode&quot;</span>: <span class="string">&quot;\\complement &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2202/mathmode&quot;</span>: <span class="string">&quot;\\partial &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2203/mathmode&quot;</span>: <span class="string">&quot;\\exists &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2204/mathmode&quot;</span>: <span class="string">&quot;\\nexists &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2205/mathmode&quot;</span>: <span class="string">&quot;\\varnothing &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2206/mathmode&quot;</span>: <span class="string">&quot;\\Delta &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2207/mathmode&quot;</span>: <span class="string">&quot;\\nabla &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2208/mathmode&quot;</span>: <span class="string">&quot;\\in &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2209/mathmode&quot;</span>: <span class="string">&quot;\\notin &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x220b/mathmode&quot;</span>: <span class="string">&quot;\\ni &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x220c/mathmode&quot;</span>: <span class="string">&quot;\\not\\ni &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x220d/mathmode&quot;</span>: <span class="string">&quot;\\backepsilon  &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x220e/mathmode&quot;</span>: <span class="string">&quot;\\blacksquare &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x220f/mathmode&quot;</span>: <span class="string">&quot;\\prod &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2210/mathmode&quot;</span>: <span class="string">&quot;\\coprod &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2211/mathmode&quot;</span>: <span class="string">&quot;\\sum &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2212&quot;</span>:          <span class="string">&quot;-&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2213/mathmode&quot;</span>: <span class="string">&quot;\\mp &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2214/mathmode&quot;</span>: <span class="string">&quot;\\dotplus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2215&quot;</span>:          <span class="string">&quot;/&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2216/mathmode&quot;</span>: <span class="string">&quot;\\setminus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2217&quot;</span>:          <span class="string">&quot;*&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2218/mathmode&quot;</span>: <span class="string">&quot;\\circ &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2219/mathmode&quot;</span>: <span class="string">&quot;\\bullet &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x221a/mathmode&quot;</span>: <span class="string">&quot;\\surd &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x221b/mathmode&quot;</span>: <span class="string">&quot;\\sqrt[3]&#123; &#125; &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x221c/mathmode&quot;</span>: <span class="string">&quot;\\sqrt[4]&#123; &#125; &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x221d/mathmode&quot;</span>: <span class="string">&quot;\\propto &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x221e/mathmode&quot;</span>: <span class="string">&quot;\\infty &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x221f/mathmode&quot;</span>: <span class="string">&quot;\\perp &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2220/mathmode&quot;</span>: <span class="string">&quot;\\angle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2221/mathmode&quot;</span>: <span class="string">&quot;\\measuredangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2222/mathmode&quot;</span>: <span class="string">&quot;\\sphericalangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2223/mathmode&quot;</span>: <span class="string">&quot;\\mid &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2224/mathmode&quot;</span>: <span class="string">&quot;\\nmid &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2225/mathmode&quot;</span>: <span class="string">&quot;\\parallel &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2226/mathmode&quot;</span>: <span class="string">&quot;\\nparallel &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2227/mathmode&quot;</span>: <span class="string">&quot;\\wedge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2228/mathmode&quot;</span>: <span class="string">&quot;\\vee &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2229/mathmode&quot;</span>: <span class="string">&quot;\\cap &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x222a/mathmode&quot;</span>: <span class="string">&quot;\\cup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x222b/mathmode&quot;</span>: <span class="string">&quot;\\int &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x222c/mathmode&quot;</span>: <span class="string">&quot;\\iint &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x222d/mathmode&quot;</span>: <span class="string">&quot;\\iiint &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x222e/mathmode&quot;</span>: <span class="string">&quot;\\oint &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x222f/mathmode&quot;</span>: <span class="string">&quot;\\mathop&#123;&#123;\\int\\!\\!\\!\\!\\!\\int&#125;\\!\\!\\!\\!\\!\\!\\!\\bigcirc&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2230/mathmode&quot;</span>: <span class="string">&quot;\\mathop&#123;&#123;\\int\\!\\!\\!\\!\\!\\int\\!\\!\\!\\!\\!\\int&#125;\\!\\!\\!\\!\\!\\!\\!\\!\\bigcirc&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2231/mathmode&quot;</span>: <span class="string">&quot;\\mathop&#123;\\int\\!\\!\\!\\!\\!\\!\\!\\curvearrowright&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2232/mathmode&quot;</span>: <span class="string">&quot;\\mathop&#123;\\int\\!\\!\\!\\!\\!\\!\\!\\circlearrowright&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2233/mathmode&quot;</span>: <span class="string">&quot;\\mathop&#123;\\int\\!\\!\\!\\!\\!\\!\\!\\circlearrowleft&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2234/mathmode&quot;</span>: <span class="string">&quot;\\therefore &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2235/mathmode&quot;</span>: <span class="string">&quot;\\because &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2236/mathmode&quot;</span>: <span class="string">&quot;\\,\\!:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2236/textmode&quot;</span>: <span class="string">&quot;:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2237/mathmode&quot;</span>: <span class="string">&quot;\\,\\!:\\,:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2237/textmode&quot;</span>: <span class="string">&quot;::&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2238/mathmode&quot;</span>: <span class="string">&quot;\\dot-&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2239/mathmode&quot;</span>: <span class="string">&quot;\\,-\\!:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x223a/mathmode&quot;</span>: <span class="string">&quot;:\\!\\!\\!-\\!\\!\\!:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x223b/mathmode&quot;</span>: <span class="string">&quot;\\sim\\!\\!\\!:\\,&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x223c/mathmode&quot;</span>: <span class="string">&quot;\\sim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x223d/mathmode&quot;</span>: <span class="string">&quot;\\backsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2240/mathmode&quot;</span>: <span class="string">&quot;\\wr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2241/mathmode&quot;</span>: <span class="string">&quot;\\nsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2242/mathmode&quot;</span>: <span class="string">&quot;\\eqsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2243/mathmode&quot;</span>: <span class="string">&quot;\\simeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2245/mathmode&quot;</span>: <span class="string">&quot;\\cong &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2247/mathmode&quot;</span>: <span class="string">&quot;\\ncong &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2248/mathmode&quot;</span>: <span class="string">&quot;\\approx &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2249/mathmode&quot;</span>: <span class="string">&quot;\\not\\approx &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x224a/mathmode&quot;</span>: <span class="string">&quot;\\approxeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x224d/mathmode&quot;</span>: <span class="string">&quot;\\asymp &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x224e/mathmode&quot;</span>: <span class="string">&quot;\\Bumpeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x224f/mathmode&quot;</span>: <span class="string">&quot;\\bumpeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2250/mathmode&quot;</span>: <span class="string">&quot;\\doteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2251/mathmode&quot;</span>: <span class="string">&quot;\\doteqdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2252/mathmode&quot;</span>: <span class="string">&quot;\\fallingdotseq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2253/mathmode&quot;</span>: <span class="string">&quot;\\risingdotseq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2254/mathmode&quot;</span>: <span class="string">&quot;:=\\,\\!&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2254/textmode&quot;</span>: <span class="string">&quot;:=&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2255/mathmode&quot;</span>: <span class="string">&quot;=:\\,\\!&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2255/textmode&quot;</span>: <span class="string">&quot;=:&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2256/mathmode&quot;</span>: <span class="string">&quot;\\eqcirc &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2257/mathmode&quot;</span>: <span class="string">&quot;\\circeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2258/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\frown&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2259/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\wedge&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x225a/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\vee&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x225b/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\star&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x225c/mathmode&quot;</span>: <span class="string">&quot;\\triangleq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x225d/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\underset&#123;\\mathrm&#123;def&#125;&#125;&#123;&#125;&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x225e/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;\\underset&#123;\\mathrm&#123;m&#125;&#125;&#123;&#125;&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x225f/mathmode&quot;</span>: <span class="string">&quot;\\overset&#123;?&#125;&#123;=&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2260/mathmode&quot;</span>: <span class="string">&quot;\\ne &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2261/mathmode&quot;</span>: <span class="string">&quot;\\equiv &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2262/mathmode&quot;</span>: <span class="string">&quot;\\not\\equiv &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2264/mathmode&quot;</span>: <span class="string">&quot;\\le &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2265/mathmode&quot;</span>: <span class="string">&quot;\\ge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2266/mathmode&quot;</span>: <span class="string">&quot;\\leqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2267/mathmode&quot;</span>: <span class="string">&quot;\\geqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2268/mathmode&quot;</span>: <span class="string">&quot;\\lneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2269/mathmode&quot;</span>: <span class="string">&quot;\\gneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x226a/mathmode&quot;</span>: <span class="string">&quot;\\ll &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x226b/mathmode&quot;</span>: <span class="string">&quot;\\gg &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x226c/mathmode&quot;</span>: <span class="string">&quot;\\between &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x226d/mathmode&quot;</span>: <span class="string">&quot;\\not\\asymp &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x226e/mathmode&quot;</span>: <span class="string">&quot;\\nless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x226f/mathmode&quot;</span>: <span class="string">&quot;\\ngtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2270/mathmode&quot;</span>: <span class="string">&quot;\\nleqslant &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2271/mathmode&quot;</span>: <span class="string">&quot;\\ngeqslant &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2272/mathmode&quot;</span>: <span class="string">&quot;\\lesssim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2273/mathmode&quot;</span>: <span class="string">&quot;\\gtrsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2274/mathmode&quot;</span>: <span class="string">&quot;\\not\\lesssim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2275/mathmode&quot;</span>: <span class="string">&quot;\\not\\gtrsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2276/mathmode&quot;</span>: <span class="string">&quot;\\lessgtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2277/mathmode&quot;</span>: <span class="string">&quot;\\gtrless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2278/mathmode&quot;</span>: <span class="string">&quot;\\not\\lessgtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2279/mathmode&quot;</span>: <span class="string">&quot;\\not\\gtrless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x227a/mathmode&quot;</span>: <span class="string">&quot;\\prec &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x227b/mathmode&quot;</span>: <span class="string">&quot;\\succ &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x227c/mathmode&quot;</span>: <span class="string">&quot;\\preccurlyeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x227d/mathmode&quot;</span>: <span class="string">&quot;\\succcurlyeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x227e/mathmode&quot;</span>: <span class="string">&quot;\\precsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x227f/mathmode&quot;</span>: <span class="string">&quot;\\succsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2280/mathmode&quot;</span>: <span class="string">&quot;\\nprec &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2281/mathmode&quot;</span>: <span class="string">&quot;\\nsucc &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2282/mathmode&quot;</span>: <span class="string">&quot;\\subset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2283/mathmode&quot;</span>: <span class="string">&quot;\\supset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2284/mathmode&quot;</span>: <span class="string">&quot;\\not\\subset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2285/mathmode&quot;</span>: <span class="string">&quot;\\not\\supset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2286/mathmode&quot;</span>: <span class="string">&quot;\\subseteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2287/mathmode&quot;</span>: <span class="string">&quot;\\supseteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2288/mathmode&quot;</span>: <span class="string">&quot;\\nsubseteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2289/mathmode&quot;</span>: <span class="string">&quot;\\nsupseteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x228a/mathmode&quot;</span>: <span class="string">&quot;\\subsetneq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x228b/mathmode&quot;</span>: <span class="string">&quot;\\supsetneq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x228e/mathmode&quot;</span>: <span class="string">&quot;\\uplus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x228f/mathmode&quot;</span>: <span class="string">&quot;\\sqsubset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2290/mathmode&quot;</span>: <span class="string">&quot;\\sqsupset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2291/mathmode&quot;</span>: <span class="string">&quot;\\sqsubseteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2292/mathmode&quot;</span>: <span class="string">&quot;\\sqsupseteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2293/mathmode&quot;</span>: <span class="string">&quot;\\sqcap &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2294/mathmode&quot;</span>: <span class="string">&quot;\\sqcup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2295/mathmode&quot;</span>: <span class="string">&quot;\\oplus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2296/mathmode&quot;</span>: <span class="string">&quot;\\ominus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2297/mathmode&quot;</span>: <span class="string">&quot;\\otimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2298/mathmode&quot;</span>: <span class="string">&quot;\\oslash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2299/mathmode&quot;</span>: <span class="string">&quot;\\odot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x229a/mathmode&quot;</span>: <span class="string">&quot;\\circledcirc &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x229b/mathmode&quot;</span>: <span class="string">&quot;\\circledast &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x229c/mathmode&quot;</span>: <span class="string">&quot;\\,\\bigcirc\\!\\!\\!\\!\\!\\!\\!=&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x229d/mathmode&quot;</span>: <span class="string">&quot;\\circleddash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x229e/mathmode&quot;</span>: <span class="string">&quot;\\boxplus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x229f/mathmode&quot;</span>: <span class="string">&quot;\\boxminus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a0/mathmode&quot;</span>: <span class="string">&quot;\\boxtimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a1/mathmode&quot;</span>: <span class="string">&quot;\\boxdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a2/mathmode&quot;</span>: <span class="string">&quot;\\vdash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a3/mathmode&quot;</span>: <span class="string">&quot;\\dashv &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a4/mathmode&quot;</span>: <span class="string">&quot;\\top &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a5/mathmode&quot;</span>: <span class="string">&quot;\\bot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a6/mathmode&quot;</span>: <span class="string">&quot;\\vdash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a7/mathmode&quot;</span>: <span class="string">&quot;\\models &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a8/mathmode&quot;</span>: <span class="string">&quot;\\vDash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22a9/mathmode&quot;</span>: <span class="string">&quot;\\Vdash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22aa/mathmode&quot;</span>: <span class="string">&quot;\\Vvdash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ab/mathmode&quot;</span>: <span class="string">&quot;\\,\\|\\!\\!\\!=&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ac/mathmode&quot;</span>: <span class="string">&quot;\\nvdash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ad/mathmode&quot;</span>: <span class="string">&quot;\\nvDash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ae/mathmode&quot;</span>: <span class="string">&quot;\\nVdash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22af/mathmode&quot;</span>: <span class="string">&quot;\\nVDash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22b2/mathmode&quot;</span>: <span class="string">&quot;\\triangleleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22b3/mathmode&quot;</span>: <span class="string">&quot;\\triangleright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22b4/mathmode&quot;</span>: <span class="string">&quot;\\trianglelefteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22b5/mathmode&quot;</span>: <span class="string">&quot;\\trianglerighteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22b8/mathmode&quot;</span>: <span class="string">&quot;\\multimap &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ba/mathmode&quot;</span>: <span class="string">&quot;\\intercal &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22bb/mathmode&quot;</span>: <span class="string">&quot;\\veebar &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22bc/mathmode&quot;</span>: <span class="string">&quot;\\barwedge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22bd/mathmode&quot;</span>: <span class="string">&quot;\\veebar &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c0/mathmode&quot;</span>: <span class="string">&quot;\\bigwedge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c1/mathmode&quot;</span>: <span class="string">&quot;\\bigvee &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c2/mathmode&quot;</span>: <span class="string">&quot;\\bigcap &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c3/mathmode&quot;</span>: <span class="string">&quot;\\bigcup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c4/mathmode&quot;</span>: <span class="string">&quot;\\diamond &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c5/mathmode&quot;</span>: <span class="string">&quot;\\cdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c6/mathmode&quot;</span>: <span class="string">&quot;\\star &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c7/mathmode&quot;</span>: <span class="string">&quot;\\divideontimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c8/mathmode&quot;</span>: <span class="string">&quot;\\bowtie &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22c9/mathmode&quot;</span>: <span class="string">&quot;\\ltimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ca/mathmode&quot;</span>: <span class="string">&quot;\\rtimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22cb/mathmode&quot;</span>: <span class="string">&quot;\\leftthreetimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22cc/mathmode&quot;</span>: <span class="string">&quot;\\rightthreetimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ce/mathmode&quot;</span>: <span class="string">&quot;\\curlyvee &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22cf/mathmode&quot;</span>: <span class="string">&quot;\\curlywedge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d0/mathmode&quot;</span>: <span class="string">&quot;\\Subset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d1/mathmode&quot;</span>: <span class="string">&quot;\\Supset &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d2/mathmode&quot;</span>: <span class="string">&quot;\\Cap &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d3/mathmode&quot;</span>: <span class="string">&quot;\\Cup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d4/mathmode&quot;</span>: <span class="string">&quot;\\pitchfork &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d6/mathmode&quot;</span>: <span class="string">&quot;\\lessdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d7/mathmode&quot;</span>: <span class="string">&quot;\\gtrdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d8/mathmode&quot;</span>: <span class="string">&quot;\\lll &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22d9/mathmode&quot;</span>: <span class="string">&quot;\\ggg &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22da/mathmode&quot;</span>: <span class="string">&quot;\\lesseqgtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22db/mathmode&quot;</span>: <span class="string">&quot;\\gtreqless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22dc/mathmode&quot;</span>: <span class="string">&quot;\\eqslantless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22dd/mathmode&quot;</span>: <span class="string">&quot;\\eqslantgtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22de/mathmode&quot;</span>: <span class="string">&quot;\\curlyeqprec &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22df/mathmode&quot;</span>: <span class="string">&quot;\\curlyeqsucc &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22e0/mathmode&quot;</span>: <span class="string">&quot;\\npreceq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22e1/mathmode&quot;</span>: <span class="string">&quot;\\nsucceq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22e6/mathmode&quot;</span>: <span class="string">&quot;\\lnsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22e7/mathmode&quot;</span>: <span class="string">&quot;\\gnsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22e8/mathmode&quot;</span>: <span class="string">&quot;\\precnsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22e9/mathmode&quot;</span>: <span class="string">&quot;\\succnsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ea/mathmode&quot;</span>: <span class="string">&quot;\\ntriangleleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22eb/mathmode&quot;</span>: <span class="string">&quot;\\ntriangleright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ec/mathmode&quot;</span>: <span class="string">&quot;\\ntrianglelefteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ed/mathmode&quot;</span>: <span class="string">&quot;\\ntrianglerighteq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ee/mathmode&quot;</span>: <span class="string">&quot;\\vdots &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22ef/mathmode&quot;</span>: <span class="string">&quot;\\cdots &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x22f1/mathmode&quot;</span>: <span class="string">&quot;\\ddots &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2300/mathmode&quot;</span>: <span class="string">&quot;\\varnothing &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2306/mathmode&quot;</span>: <span class="string">&quot;\\doublebarwedge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2308/mathmode&quot;</span>: <span class="string">&quot;\\lceil &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2309/mathmode&quot;</span>: <span class="string">&quot;\\rceil &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x230a/mathmode&quot;</span>: <span class="string">&quot;\\lfloor &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x230b/mathmode&quot;</span>: <span class="string">&quot;\\rfloor &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x231c/mathmode&quot;</span>: <span class="string">&quot;\\ulcorner &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x231d/mathmode&quot;</span>: <span class="string">&quot;\\urcorner &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x231e/mathmode&quot;</span>: <span class="string">&quot;\\llcorner &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x231f/mathmode&quot;</span>: <span class="string">&quot;\\lrcorner &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2322/mathmode&quot;</span>: <span class="string">&quot;\\frown &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2323/mathmode&quot;</span>: <span class="string">&quot;\\smile &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2329/mathmode&quot;</span>: <span class="string">&quot;\\langle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x232a/mathmode&quot;</span>: <span class="string">&quot;\\rangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2329&quot;</span>:          <span class="string">&quot;\\langle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x232a&quot;</span>:          <span class="string">&quot;\\rangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2353/mathmode&quot;</span>: <span class="string">&quot;\\Box\\!\\!\\!\\!\\wedge&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2370/mathmode&quot;</span>: <span class="string">&quot;\\Box\\!\\!\\!\\!?&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2423/mathmode&quot;</span>: <span class="string">&quot;\\textvisiblespace &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x24c8/mathmode&quot;</span>: <span class="string">&quot;\\circledS &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25a0/mathmode&quot;</span>: <span class="string">&quot;\\blacksquare &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25a1/mathmode&quot;</span>: <span class="string">&quot;\\square &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25b2/mathmode&quot;</span>: <span class="string">&quot;\\blacktriangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25b3/mathmode&quot;</span>: <span class="string">&quot;\\vartriangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25b6/mathmode&quot;</span>: <span class="string">&quot;\\blacktriangleright &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25bc/mathmode&quot;</span>: <span class="string">&quot;\\blacktriangledown &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25bd/mathmode&quot;</span>: <span class="string">&quot;\\triangledown &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25c0/mathmode&quot;</span>: <span class="string">&quot;\\blacktriangleleft &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25ca/mathmode&quot;</span>: <span class="string">&quot;\\lozenge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x25cb/mathmode&quot;</span>: <span class="string">&quot;\\bigcirc &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2605/mathmode&quot;</span>: <span class="string">&quot;\\bigstar &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2660/mathmode&quot;</span>: <span class="string">&quot;\\spadesuit &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2661/mathmode&quot;</span>: <span class="string">&quot;\\heartsuit &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2662/mathmode&quot;</span>: <span class="string">&quot;\\diamondsuit &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2663/mathmode&quot;</span>: <span class="string">&quot;\\clubsuit &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2666/mathmode&quot;</span>: <span class="string">&quot;\\blacklozenge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x266d/mathmode&quot;</span>: <span class="string">&quot;\\flat &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x266e/mathmode&quot;</span>: <span class="string">&quot;\\natural &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x266f/mathmode&quot;</span>: <span class="string">&quot;\\sharp &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2713/mathmode&quot;</span>: <span class="string">&quot;\\checkmark &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2715/mathmode&quot;</span>: <span class="string">&quot;\\times &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27e6/mathmode&quot;</span>: <span class="string">&quot;[\\![&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27e7/mathmode&quot;</span>: <span class="string">&quot;]\\!]&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27e8/mathmode&quot;</span>: <span class="string">&quot;\\langle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27e9/mathmode&quot;</span>: <span class="string">&quot;\\rangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27f5/mathmode&quot;</span>: <span class="string">&quot;\\longleftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27f6/mathmode&quot;</span>: <span class="string">&quot;\\longrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27f7/mathmode&quot;</span>: <span class="string">&quot;\\longleftrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27f8/mathmode&quot;</span>: <span class="string">&quot;\\Longleftarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27f9/mathmode&quot;</span>: <span class="string">&quot;\\Longrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27fa/mathmode&quot;</span>: <span class="string">&quot;\\Longleftrightarrow &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x27fc/mathmode&quot;</span>: <span class="string">&quot;\\longmapsto &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x29eb/mathmode&quot;</span>: <span class="string">&quot;\\blacklozenge &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x29f8/mathmode&quot;</span>: <span class="string">&quot;\\Big /&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x29f9/mathmode&quot;</span>: <span class="string">&quot;\\Big\\backslash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2a00/mathmode&quot;</span>: <span class="string">&quot;\\bigodot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2a01/mathmode&quot;</span>: <span class="string">&quot;\\bigoplus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2a02/mathmode&quot;</span>: <span class="string">&quot;\\bigotimes &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2a04/mathmode&quot;</span>: <span class="string">&quot;\\biguplus &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2a06/mathmode&quot;</span>: <span class="string">&quot;\\bigsqcup &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2a0c/mathmode&quot;</span>: <span class="string">&quot;\\iiiint &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x3008/mathmode&quot;</span>: <span class="string">&quot;\\langle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x3009/mathmode&quot;</span>: <span class="string">&quot;\\rangle &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x301a/mathmode&quot;</span>: <span class="string">&quot;[\\![&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x301b/mathmode&quot;</span>: <span class="string">&quot;]\\!]&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe90b/mathmode&quot;</span>: <span class="string">&quot;\\supseteqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe90c/mathmode&quot;</span>: <span class="string">&quot;\\subseteqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe922/mathmode&quot;</span>: <span class="string">&quot;\\lesseqqgtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe92d/mathmode&quot;</span>: <span class="string">&quot;\\gtreqqless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe92e/mathmode&quot;</span>: <span class="string">&quot;\\shortmid &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe92f/mathmode&quot;</span>: <span class="string">&quot;\\shortparallel &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe930/mathmode&quot;</span>: <span class="string">&quot;\\leqslant &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe931/mathmode&quot;</span>: <span class="string">&quot;\\geqslant &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe932/mathmode&quot;</span>: <span class="string">&quot;\\lessapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe933/mathmode&quot;</span>: <span class="string">&quot;\\gtrapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe938/mathmode&quot;</span>: <span class="string">&quot;\\preceq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe939/mathmode&quot;</span>: <span class="string">&quot;\\succeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe93a/mathmode&quot;</span>: <span class="string">&quot;\\precapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe93b/mathmode&quot;</span>: <span class="string">&quot;\\succapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe981/mathmode&quot;</span>: <span class="string">&quot;\\circleddash &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xe98f/mathmode&quot;</span>: <span class="string">&quot;\\centerdot &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea06/mathmode&quot;</span>: <span class="string">&quot;\\nleq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea07/mathmode&quot;</span>: <span class="string">&quot;\\ngeq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea0b/mathmode&quot;</span>: <span class="string">&quot;\\nsupseteqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea0c/mathmode&quot;</span>: <span class="string">&quot;\\nsubseteqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea0e/mathmode&quot;</span>: <span class="string">&quot;\\not\\eqslantgtr &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea0f/mathmode&quot;</span>: <span class="string">&quot;\\not\\eqsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea10/mathmode&quot;</span>: <span class="string">&quot;\\not\\eqslantless &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea11/mathmode&quot;</span>: <span class="string">&quot;\\nsim &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea2e/mathmode&quot;</span>: <span class="string">&quot;\\nshortmid &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea2f/mathmode&quot;</span>: <span class="string">&quot;\\nshortparallel &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea32/mathmode&quot;</span>: <span class="string">&quot;\\lnapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea33/mathmode&quot;</span>: <span class="string">&quot;\\gnapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea34/mathmode&quot;</span>: <span class="string">&quot;\\lneq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea35/mathmode&quot;</span>: <span class="string">&quot;\\gneq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea38/mathmode&quot;</span>: <span class="string">&quot;\\npreceq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea39/mathmode&quot;</span>: <span class="string">&quot;\\nsucceq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea3a/mathmode&quot;</span>: <span class="string">&quot;\\precnapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea3b/mathmode&quot;</span>: <span class="string">&quot;\\succnapprox &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea40/mathmode&quot;</span>: <span class="string">&quot;\\precneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea41/mathmode&quot;</span>: <span class="string">&quot;\\succneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea42/mathmode&quot;</span>: <span class="string">&quot;\\varsubsetneq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea43/mathmode&quot;</span>: <span class="string">&quot;\\varsupsetneq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea44/mathmode&quot;</span>: <span class="string">&quot;\\subsetneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea45/mathmode&quot;</span>: <span class="string">&quot;\\supsetneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea46/mathmode&quot;</span>: <span class="string">&quot;\\varsubsetneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xea47/mathmode&quot;</span>: <span class="string">&quot;\\varsupsetneqq &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xeb01/mathmode&quot;</span>: <span class="string">&quot;\\overrightarrow&#123;\\scriptscriptstyle\\leftarrow&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xeb02/mathmode&quot;</span>: <span class="string">&quot;\\stackrel&#123;\\scriptscriptstyle\\to&#125;&#123;\\leftarrow&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed01/mathmode&quot;</span>: <span class="string">&quot;\\Game &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed02/mathmode&quot;</span>: <span class="string">&quot;\\jmath &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed10&quot;</span>:          <span class="string">&quot; d &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed11&quot;</span>:          <span class="string">&quot; e &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed12&quot;</span>:          <span class="string">&quot; i &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed13&quot;</span>:          <span class="string">&quot; j &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xed16&quot;</span>:          <span class="string">&quot; D &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef00/mathmode&quot;</span>: <span class="string">&quot; &amp; &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef01&quot;</span>:          <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x200b&quot;</span>:          <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef02/mathmode&quot;</span>: <span class="string">&quot;\\,&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2009/mathmode&quot;</span>: <span class="string">&quot;\\,&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef03/mathmode&quot;</span>: <span class="string">&quot;\\;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x205f/mathmode&quot;</span>: <span class="string">&quot;\\;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef04/mathmode&quot;</span>: <span class="string">&quot;\\ &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2004/mathmode&quot;</span>: <span class="string">&quot;\\ &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef05/mathmode&quot;</span>: <span class="string">&quot;\\quad &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x2003/mathmode&quot;</span>: <span class="string">&quot;\\quad &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef06/mathmode&quot;</span>: <span class="string">&quot;\\qquad &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xef22/mathmode&quot;</span>: <span class="string">&quot;\\!&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf000/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf001/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;B&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf002/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf003/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;D&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf004/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf005/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;F&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf006/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;G&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf007/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf008/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf009/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;J&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf00a/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;K&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf00b/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;L&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf00c/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;M&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf00d/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf00e/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf00f/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;P&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf010/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;Q&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf011/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf012/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;S&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf013/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;T&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf014/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf015/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;V&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf016/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;W&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf017/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;X&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf018/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;Y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf019/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf01a/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;a&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf01b/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;b&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf01c/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;c&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf01d/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;d&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf01e/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;e&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf01f/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;f&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf020/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;g&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf021/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;h&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf022/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;i&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf023/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;j&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf024/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;k&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf025/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;l&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf026/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;m&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf027/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;n&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf028/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;o&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf029/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;p&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf02a/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;q&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf02b/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;r&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf02c/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;s&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf02d/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;t&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf02e/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;u&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf02f/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;v&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf030/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;w&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf031/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;x&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf032/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf033/mathmode&quot;</span>: <span class="string">&quot;\\mathfrak&#123;z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf080/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf081/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;B&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf082/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf083/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;D&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf084/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf085/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;F&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf086/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;G&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf087/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf088/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf089/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;J&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf08a/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;K&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf08b/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;L&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf08c/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;M&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf08d/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf08e/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf08f/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;P&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf090/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;Q&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf091/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf092/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;S&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf093/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;T&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf094/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf095/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;V&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf096/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;W&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf097/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;X&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf098/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;Y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf099/mathmode&quot;</span>: <span class="string">&quot;\\mathbb&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf0a4/mathmode&quot;</span>: <span class="string">&quot;\\Bbbk &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf100/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;A&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf101/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;B&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf102/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;C&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf103/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;D&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf104/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;E&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf105/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;F&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf106/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;G&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf107/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;H&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf108/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;I&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf109/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;J&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf10a/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;K&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf10b/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;L&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf10c/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;M&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf10d/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;N&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf10e/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;O&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf10f/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;P&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf110/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;Q&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf111/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;R&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf112/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;S&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf113/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;T&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf114/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;U&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf115/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;V&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf116/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;W&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf117/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;X&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf118/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;Y&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xf119/mathmode&quot;</span>: <span class="string">&quot;\\mathcal&#123;Z&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xec07&quot;</span>:          <span class="string">&quot;|&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0xec08&quot;</span>:          <span class="string">&quot;|&quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x003c&quot;</span>:          <span class="string">&quot; &lt; &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x0302&quot;</span>:          <span class="string">&quot;\\widehat &quot;</span>,</span><br><span class="line"><span class="string">&quot;char/0x86e0&quot;</span>:          <span class="string">&quot;\\prime &quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> oleCbHdr = <span class="keyword">uint16</span>(<span class="number">28</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// [MTEFv5](https://docs.wiris.com/en/mathtype/mathtype_desktop/mathtype-sdk/mtef5)</span></span><br><span class="line"><span class="keyword">type</span> MTEFv5 <span class="keyword">struct</span> &#123;</span><br><span class="line">mMtefVer     <span class="keyword">uint8</span></span><br><span class="line">mPlatform    <span class="keyword">uint8</span></span><br><span class="line">mProduct     <span class="keyword">uint8</span></span><br><span class="line">mVersion     <span class="keyword">uint8</span></span><br><span class="line">mVersionSub  <span class="keyword">uint8</span></span><br><span class="line">mApplication <span class="keyword">string</span></span><br><span class="line">mInline      <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line">reader io.ReadSeeker</span><br><span class="line"></span><br><span class="line">ast   *MtAST</span><br><span class="line">nodes []*MtAST</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否合法，顺利解析</span></span><br><span class="line">Valid <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readRecord</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">读取body的每一行数据并保存到数组里</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//默认设置为合法的，除非遇到不可解析数据</span></span><br><span class="line">m.Valid = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Header</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;m.mMtefVer)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;m.mPlatform)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;m.mProduct)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;m.mVersion)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;m.mVersionSub)</span><br><span class="line">m.mApplication, _ = m.readNullTerminatedString()</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;m.mInline)</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(m.mMtefVer, m.mPlatform, m.mProduct, m.mVersion, m.mVersionSub)</span></span><br><span class="line"><span class="comment">//fmt.Println(m.mInline)</span></span><br><span class="line"><span class="comment">//fmt.Println(m.reader)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Body</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">record := RecordType(<span class="number">0</span>)</span><br><span class="line">err = binary.Read(m.reader, binary.LittleEndian, &amp;record)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据future定义，&gt;=100的后面会跟一个字节，这个字节代表需要跳过的长度</span></span><br><span class="line"><span class="comment">//For now, readers can assume that an unsigned integer follows the record type and is the number of bytes following it in the record</span></span><br><span class="line"><span class="comment">//This makes it easy for software that reads MTEF to skip these records.</span></span><br><span class="line"><span class="keyword">if</span> record &gt;= FUTURE &#123;</span><br><span class="line"><span class="keyword">var</span> skipFutureLength <span class="keyword">uint8</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;skipFutureLength)</span><br><span class="line"></span><br><span class="line">_, _ = m.reader.Seek(<span class="keyword">int64</span>(skipFutureLength), io.SeekCurrent)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//debug 使用</span></span><br><span class="line"><span class="comment">//fmt.Println(record)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> record &#123;</span><br><span class="line"><span class="keyword">case</span> END:</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;END, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> LINE:</span><br><span class="line">line := <span class="built_in">new</span>(MtLine)</span><br><span class="line">_ = m.readLine(line)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;LINE, line, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> CHAR:</span><br><span class="line">char := <span class="built_in">new</span>(MtChar)</span><br><span class="line">_ = m.readChar(char)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;CHAR, char, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> TMPL:</span><br><span class="line">tmpl := <span class="built_in">new</span>(MtTmpl)</span><br><span class="line">_ = m.readTMPL(tmpl)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;TMPL, tmpl, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> PILE:</span><br><span class="line">pile := <span class="built_in">new</span>(MtPile)</span><br><span class="line">_ = m.readPile(pile)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;PILE, pile, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> MATRIX:</span><br><span class="line">matrix := <span class="built_in">new</span>(MtMatrix)</span><br><span class="line">_ = m.readMatrix(matrix)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;MATRIX, matrix, <span class="literal">nil</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配矩阵数据下面的2个nil</span></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;LINE, <span class="built_in">new</span>(MtLine), <span class="literal">nil</span>&#125;)</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;LINE, <span class="built_in">new</span>(MtLine), <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> EMBELL:</span><br><span class="line">embell := <span class="built_in">new</span>(MtEmbellRd)</span><br><span class="line">_ = m.readEmbell(embell)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;tag: EMBELL, value: embell, children: <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> FONT_STYLE_DEF:</span><br><span class="line">fsDef := <span class="built_in">new</span>(MtfontStyleDef)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;fsDef.fontDefIndex)</span><br><span class="line">fsDef.name, _ = m.readNullTerminatedString()</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取字节，但是不关心数据，注释</span></span><br><span class="line"><span class="comment">//m.nodes = append(m.nodes, &amp;MtAST&#123;FONT_STYLE_DEF, fsDef, nil&#125;)</span></span><br><span class="line"><span class="keyword">case</span> SIZE:</span><br><span class="line">mtSize := <span class="built_in">new</span>(MtSize)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;mtSize.lsize)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;mtSize.dsize)</span><br><span class="line"><span class="keyword">case</span> SUB:</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;SUB, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> SUB2:</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;SUB2, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> SYM:</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;SYM, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> SUBSYM:</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;SUBSYM, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> FONT_DEF:</span><br><span class="line">fdef := <span class="built_in">new</span>(MtfontDef)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;fdef.encDefIndex)</span><br><span class="line">fdef.name, _ = m.readNullTerminatedString()</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;FONT_DEF, fdef, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> COLOR:</span><br><span class="line">cIndex := <span class="built_in">new</span>(MtColorDefIndex)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;cIndex.index)</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取字节，但是不关心数据，注释</span></span><br><span class="line"><span class="comment">//m.nodes = append(m.nodes, &amp;MtAST&#123;tag: COLOR, value: cIndex, children: nil&#125;)</span></span><br><span class="line"><span class="keyword">case</span> COLOR_DEF:</span><br><span class="line">cDef := <span class="built_in">new</span>(MtColorDef)</span><br><span class="line">_ = m.readColorDef(cDef)</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取字节，但是不关心数据，注释</span></span><br><span class="line"><span class="comment">//m.nodes = append(m.nodes, &amp;MtAST&#123;tag: COLOR_DEF, value: cDef, children: nil&#125;)</span></span><br><span class="line"><span class="keyword">case</span> FULL:</span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;FULL, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> EQN_PREFS:</span><br><span class="line">prefs := <span class="built_in">new</span>(MtEqnPrefs)</span><br><span class="line">_ = m.readEqnPrefs(prefs)</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;EQN_PREFS, prefs, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">case</span> ENCODING_DEF:</span><br><span class="line">enc, _ := m.readNullTerminatedString()</span><br><span class="line"></span><br><span class="line">m.nodes = <span class="built_in">append</span>(m.nodes, &amp;MtAST&#123;ENCODING_DEF, enc, <span class="literal">nil</span>&#125;)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">m.Valid = <span class="literal">false</span></span><br><span class="line">log.Println(<span class="string">&quot;FUTURE RECORD&quot;</span>, record)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readNullTerminatedString</span><span class="params">()</span> <span class="params">(s <span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">buf, p := bytes.Buffer&#123;&#125;, []<span class="keyword">byte</span>&#123;<span class="number">0</span>&#125;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">_, err = m.reader.Read(p)</span><br><span class="line"><span class="keyword">if</span> p[<span class="number">0</span>] == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">buf.WriteByte(p[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String(), err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readLine</span><span class="params">(line *MtLine)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">err = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptNudge == MtefOptNudge&amp;options &#123;</span><br><span class="line">line.nudgeX, line.nudgeY, _ = m.readNudge()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> MtefOptLineLspace == MtefOptLineLspace&amp;options &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;line.lineSpace)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//RULER解析</span></span><br><span class="line"><span class="keyword">if</span> mtefOPT_LP_RULER == mtefOPT_LP_RULER&amp;options &#123;</span><br><span class="line"><span class="keyword">var</span> nStops <span class="keyword">uint8</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;nStops)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tabList []<span class="keyword">uint8</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">uint8</span>(<span class="number">0</span>); i &lt; nStops; i++ &#123;</span><br><span class="line"><span class="keyword">var</span> stopVal <span class="keyword">uint8</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;stopVal)</span><br><span class="line">tabList = <span class="built_in">append</span>(tabList, stopVal)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tabOffset <span class="keyword">uint16</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;tabOffset)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptLineNull == MtefOptLineNull&amp;options &#123;</span><br><span class="line">line.null = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readDimensionArrays</span><span class="params">(size <span class="keyword">int64</span>)</span> <span class="params">(array []<span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line"><span class="keyword">var</span> tmpStr = <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line"><span class="keyword">var</span> count = <span class="keyword">int64</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fx = <span class="function"><span class="keyword">func</span><span class="params">(x <span class="keyword">uint8</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> flag &#123;</span><br><span class="line"><span class="keyword">switch</span> x &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x00</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteString(<span class="string">&quot;in&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x01</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteString(<span class="string">&quot;cm&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x02</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteString(<span class="string">&quot;pt&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x03</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteString(<span class="string">&quot;pc&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x04</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteString(<span class="string">&quot;%&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;invalid bytes&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> x &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x00</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x01</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x02</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x03</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x04</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x05</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;5&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x06</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;6&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x07</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;7&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x08</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;8&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x09</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0a</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0b</span>:</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">tmpStr.WriteByte(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0f</span>:</span><br><span class="line">flag = <span class="literal">true</span></span><br><span class="line">count += <span class="number">1</span></span><br><span class="line">array = <span class="built_in">append</span>(array, tmpStr.String())</span><br><span class="line">tmpStr.Reset()</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;invalid bytes&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> count &gt;= size &#123;</span><br><span class="line"><span class="comment">//fmt.Println(&quot;break with size=&quot;, size)</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">ch := <span class="keyword">uint8</span>(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;ch)</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(&quot;ch=&quot;, ch)</span></span><br><span class="line"></span><br><span class="line">hi := (ch &amp; <span class="number">0xf0</span>) / <span class="number">16</span></span><br><span class="line">lo := ch &amp; <span class="number">0x0f</span></span><br><span class="line">fx(hi)</span><br><span class="line">fx(lo)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> array, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readEqnPrefs</span><span class="params">(eqnPrefs *MtEqnPrefs)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := <span class="keyword">uint8</span>(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="comment">//sizes</span></span><br><span class="line">size := <span class="keyword">uint8</span>(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;size)</span><br><span class="line">eqnPrefs.sizes, _ = m.readDimensionArrays(<span class="keyword">int64</span>(size))</span><br><span class="line"></span><br><span class="line"><span class="comment">//spaces</span></span><br><span class="line">size = <span class="number">0</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;size)</span><br><span class="line">eqnPrefs.spaces, _ = m.readDimensionArrays(<span class="keyword">int64</span>(size))</span><br><span class="line"></span><br><span class="line"><span class="comment">//styles</span></span><br><span class="line">size = <span class="number">0</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;size)</span><br><span class="line">styles := <span class="built_in">make</span>([]<span class="keyword">byte</span>, size)</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">uint8</span>(<span class="number">0</span>); i &lt; size; i++ &#123;</span><br><span class="line">c := <span class="keyword">uint8</span>(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;c)</span><br><span class="line"><span class="keyword">if</span> c == <span class="number">0</span> &#123;</span><br><span class="line">styles = <span class="built_in">append</span>(styles, <span class="number">0</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;c)</span><br><span class="line">styles = <span class="built_in">append</span>(styles, c)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">eqnPrefs.styles = styles</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readChar</span><span class="params">(char *MtChar)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptNudge == MtefOptNudge&amp;options &#123;</span><br><span class="line">char.nudgeX, char.nudgeY, _ = m.readNudge()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;char.typeface)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptCharEncNoMtcode != MtefOptCharEncNoMtcode&amp;options &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;char.mtcode)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> MtefOptCharEncChar8 == MtefOptCharEncChar8&amp;options &#123;</span><br><span class="line"><span class="comment">//todo 强行设置值，有BUG。。。。。</span></span><br><span class="line"><span class="comment">//if char.mtcode &gt;= 34528 &#123;</span></span><br><span class="line"><span class="comment">//_ = binary.Read(m.reader, binary.LittleEndian, &amp;char.bits16)</span></span><br><span class="line"><span class="comment">//&#125;else &#123;</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;char.bits8)</span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> MtefOptCharEncChar16 == MtefOptCharEncChar16&amp;options &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;char.bits16)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(char)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readNudge</span><span class="params">()</span> <span class="params">(nudgeX <span class="keyword">int16</span>, nudgeY <span class="keyword">int16</span>, err error)</span></span> &#123;</span><br><span class="line">b1 := <span class="number">0</span></span><br><span class="line">b2 := <span class="number">0</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;b1)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;b2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> b1 == <span class="number">128</span> || b2 == <span class="number">128</span> &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;nudgeX)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;nudgeY)</span><br><span class="line"><span class="keyword">return</span> nudgeX, nudgeY, err</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">nudgeX = <span class="keyword">int16</span>(b1)</span><br><span class="line">nudgeY = <span class="keyword">int16</span>(b2)</span><br><span class="line"><span class="keyword">return</span> nudgeX, nudgeY, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readTMPL</span><span class="params">(tmpl *MtTmpl)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptNudge == MtefOptNudge&amp;options &#123;</span><br><span class="line">tmpl.nudgeX, tmpl.nudgeY, _ = m.readNudge()</span><br><span class="line">&#125;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;tmpl.selector)</span><br><span class="line"></span><br><span class="line"><span class="comment">// variation, 1 or 2 bytes</span></span><br><span class="line">byte1 := <span class="keyword">uint8</span>(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;byte1)</span><br><span class="line"><span class="keyword">if</span> <span class="number">0x80</span> == byte1&amp;<span class="number">0x80</span> &#123;</span><br><span class="line">byte2 := <span class="keyword">uint8</span>(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;byte2)</span><br><span class="line">tmpl.variation = (<span class="keyword">uint16</span>(byte1) &amp; <span class="number">0x7F</span>) | (<span class="keyword">uint16</span>(byte2) &lt;&lt; <span class="number">8</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">tmpl.variation = <span class="keyword">uint16</span>(byte1)</span><br><span class="line">&#125;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;tmpl.options)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readPile</span><span class="params">(pile *MtPile)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptNudge == MtefOptNudge&amp;options &#123;</span><br><span class="line">pile.nudgeX, pile.nudgeY, _ = m.readNudge()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取halign和valign</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;pile.halign)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;pile.valign)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readMatrix</span><span class="params">(matrix *MtMatrix)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptNudge == MtefOptNudge&amp;options &#123;</span><br><span class="line">matrix.nudgeX, matrix.nudgeY, _ = m.readNudge()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取valign和h_just、v_just</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;matrix.valign)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;matrix.h_just)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;matrix.v_just)</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取rows和cols</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;matrix.rows)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;matrix.cols)</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Printf(&quot;%v&quot;, matrix)</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readEmbell</span><span class="params">(embell *MtEmbellRd)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> MtefOptNudge == MtefOptNudge&amp;options &#123;</span><br><span class="line">embell.nudgeX, embell.nudgeY, _ = m.readNudge()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取embellishment type</span></span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;embell.embellType)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">readColorDef</span><span class="params">(colorDef *MtColorDef)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">options := OptionType(<span class="number">0</span>)</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;options)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> color <span class="keyword">uint16</span></span><br><span class="line"><span class="keyword">if</span> mtefCOLOR_CMYK == mtefCOLOR_CMYK&amp;options &#123;</span><br><span class="line"><span class="comment">//CMYK，读4个值</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;color)</span><br><span class="line">colorDef.values = <span class="built_in">append</span>(colorDef.values, <span class="keyword">uint8</span>(color))</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//RGB，读3个值</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123;</span><br><span class="line">_ = binary.Read(m.reader, binary.LittleEndian, &amp;color)</span><br><span class="line">colorDef.values = <span class="built_in">append</span>(colorDef.values, <span class="keyword">uint8</span>(color))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> mtefCOLOR_NAME == mtefCOLOR_NAME&amp;options &#123;</span><br><span class="line">colorDef.name, _ = m.readNullTerminatedString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">Translate</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">latexStr, err := m.makeLatex(m.ast)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> m.Valid &#123;</span><br><span class="line"><span class="keyword">return</span> latexStr</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">makeAST</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">根据数组生成出栈入栈结构</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">ast := <span class="built_in">new</span>(MtAST)</span><br><span class="line">ast.tag = <span class="number">0xff</span></span><br><span class="line">ast.value = <span class="literal">nil</span></span><br><span class="line">m.ast = ast</span><br><span class="line"></span><br><span class="line">stack := list.New()</span><br><span class="line">stack.PushBack(ast)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, node := <span class="keyword">range</span> m.nodes &#123;</span><br><span class="line"><span class="comment">//debug 可用</span></span><br><span class="line"><span class="comment">//fmt.Printf(&quot;%+v %+v \n&quot;, node.tag, node.value)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> node.tag &#123;</span><br><span class="line"><span class="keyword">case</span> LINE:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">ele := stack.Back()</span><br><span class="line"></span><br><span class="line"><span class="comment">//将对象强制转为MtAST类型</span></span><br><span class="line">parent := ele.Value.(*MtAST)</span><br><span class="line"></span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, node)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !node.value.(*MtLine).null &#123;</span><br><span class="line"><span class="comment">//如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line">stack.PushBack(node)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TMPL:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">ele := stack.Back()</span><br><span class="line"></span><br><span class="line"><span class="comment">//将对象强制转为MtAST类型</span></span><br><span class="line">parent := ele.Value.(*MtAST)</span><br><span class="line"></span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line">stack.PushBack(node)</span><br><span class="line"><span class="keyword">case</span> PILE:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">ele := stack.Back()</span><br><span class="line"></span><br><span class="line"><span class="comment">//将对象强制转为MtAST类型</span></span><br><span class="line">parent := ele.Value.(*MtAST)</span><br><span class="line"></span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line">stack.PushBack(node)</span><br><span class="line"><span class="keyword">case</span> MATRIX:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">ele := stack.Back()</span><br><span class="line"></span><br><span class="line"><span class="comment">//将对象强制转为MtAST类型</span></span><br><span class="line">parent := ele.Value.(*MtAST)</span><br><span class="line"></span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line">stack.PushBack(node)</span><br><span class="line"><span class="keyword">case</span> END:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">ele := stack.Back()</span><br><span class="line">stack.Remove(ele)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> CHAR:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">ele := stack.Back()</span><br><span class="line"></span><br><span class="line"><span class="comment">//将对象强制转为MtAST类型</span></span><br><span class="line">parent := ele.Value.(*MtAST)</span><br><span class="line"></span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, node)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> stack.Len() == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">//never go there</span></span><br><span class="line">ast.children = <span class="built_in">append</span>(ast.children, node)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> EMBELL:</span><br><span class="line"><span class="keyword">if</span> stack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">//读取父节点</span></span><br><span class="line">ele := stack.Back()</span><br><span class="line"></span><br><span class="line"><span class="comment">//并将对象强制转为MtAST类型</span></span><br><span class="line">parent := ele.Value.(*MtAST)</span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, node)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> EmbellType(node.value.(*MtEmbellRd).embellType) &#123;</span><br><span class="line"><span class="comment">//数据结构中，这些数据是在字符后面，但是在latex展示中某些字符需要在字符前面</span></span><br><span class="line"><span class="comment">//比如： $$ \hat y $$</span></span><br><span class="line"><span class="comment">//所以我们需要交换最后2位</span></span><br><span class="line"><span class="keyword">case</span> emb1DOT, embHAT, embOBAR:</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(parent.children) &gt;= <span class="number">2</span> &#123;</span><br><span class="line">embellData := parent.children[<span class="built_in">len</span>(parent.children)<span class="number">-1</span>]</span><br><span class="line">charData := parent.children[<span class="built_in">len</span>(parent.children)<span class="number">-2</span>]</span><br><span class="line">parent.children = parent.children[:<span class="built_in">len</span>(parent.children)<span class="number">-2</span>]</span><br><span class="line"></span><br><span class="line">parent.children = <span class="built_in">append</span>(parent.children, embellData, charData)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line">stack.PushBack(node)</span><br><span class="line"></span><br><span class="line"><span class="comment">//case COLOR_DEF:</span></span><br><span class="line"><span class="comment">///*</span></span><br><span class="line"><span class="comment">//这个数据结构有3或4个（RGB或者CMYK）对应的nil，所以需要循环把每个值都push到栈里面</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//16 &amp;&#123;values:[0 0 0] name:&#125;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">// */</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//colorList := node.value.(*MtColorDef).values</span></span><br><span class="line"><span class="comment">//if len(colorList) &gt; 0 &#123;</span></span><br><span class="line"><span class="comment">////读取每个color的值，然后入栈</span></span><br><span class="line"><span class="comment">//for _, val := range colorList &#123;</span></span><br><span class="line"><span class="comment">////如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line"><span class="comment">//stack.PushBack(val)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//case FONT_STYLE_DEF:</span></span><br><span class="line"><span class="comment">///*</span></span><br><span class="line"><span class="comment">//这个数据结构如下，所以需要配对6个入栈</span></span><br><span class="line"><span class="comment">//8 &amp;&#123;fontDefIndex:1 name:&#125;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//0 &lt;nil&gt;</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//fontIndex := node.value.(*MtfontStyleDef).fontDefIndex</span></span><br><span class="line"><span class="comment">//if fontIndex == 1 &#123;</span></span><br><span class="line"><span class="comment">//for i := 0; i &lt; 6; i++ &#123;</span></span><br><span class="line"><span class="comment">////如果与0 &lt;nil&gt; 匹配，则需要入栈</span></span><br><span class="line"><span class="comment">//stack.PushBack(0)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m.ast.debug(0)</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *MTEFv5)</span> <span class="title">makeLatex</span><span class="params">(ast *MtAST)</span> <span class="params">(latex <span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">根据出栈入栈结构生成latex字符串</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">buf := <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> ast.tag &#123;</span><br><span class="line"><span class="keyword">case</span> ROOT:</span><br><span class="line">buf.WriteString(<span class="string">&quot;$$ &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> _, _ast := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line">_latex, _ := m.makeLatex(_ast)</span><br><span class="line">buf.WriteString(_latex)</span><br><span class="line">&#125;</span><br><span class="line">buf.WriteString(<span class="string">&quot; $$&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> CHAR:</span><br><span class="line">mtcode := ast.value.(*MtChar).mtcode</span><br><span class="line">typeface := ast.value.(*MtChar).typeface</span><br><span class="line">char := <span class="keyword">string</span>(mtcode)</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成char的一些特殊集</span></span><br><span class="line">hexExtend := <span class="string">&quot;&quot;</span></span><br><span class="line">typefaceFmt := <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">switch</span> typeface - <span class="number">128</span> &#123;</span><br><span class="line"><span class="keyword">case</span> fnMTEXTRA:</span><br><span class="line">hexExtend = <span class="string">&quot;/mathmode&quot;</span></span><br><span class="line"><span class="keyword">case</span> fnSPACE:</span><br><span class="line">hexExtend = <span class="string">&quot;/mathmode&quot;</span></span><br><span class="line"><span class="keyword">case</span> fnTEXT:</span><br><span class="line">typefaceFmt = <span class="string">&quot;&#123; \\rm&#123; %v &#125; &#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成扩展字符的key</span></span><br><span class="line">hexCode := fmt.Sprintf(<span class="string">&quot;%04x&quot;</span>, mtcode)</span><br><span class="line">hexKey := fmt.Sprintf(<span class="string">&quot;char/0x%v%v&quot;</span>, hexCode, hexExtend)</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(char, hexKey)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//首先去找扩展字符</span></span><br><span class="line">sChar, ok := Chars[hexKey]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">char = sChar</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//如果char是特殊symbol，需要转义</span></span><br><span class="line">sChar, ok := SpecialChar[char]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">char = sChar</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//确定字符是否为文本，如果是文本，则需要包一层</span></span><br><span class="line"><span class="keyword">if</span> typefaceFmt != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">char = fmt.Sprintf(typefaceFmt, char)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(char)</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> TMPL:</span><br><span class="line"><span class="comment">//强制类型转换为MtTmpl</span></span><br><span class="line">tmpl := ast.value.(*MtTmpl)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> SelectorType(tmpl.selector) &#123;</span><br><span class="line"><span class="keyword">case</span> tmANGLE:</span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">leftAST := ast.children[<span class="number">1</span>]</span><br><span class="line">rightAST := ast.children[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line">leftSlot, _ := m.makeLatex(leftAST)</span><br><span class="line">rightSlot, _ := m.makeLatex(rightAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, leftStr, rightStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> leftSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">leftStr = fmt.Sprintf(<span class="string">&quot;\\left %v&quot;</span>, leftSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> rightSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">rightStr = fmt.Sprintf(<span class="string">&quot;\\right %v&quot;</span>, rightSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">&quot;%v %v %v&quot;</span>, leftStr, mainStr, rightStr))</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> tmPAREN:</span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">leftAST := ast.children[<span class="number">1</span>]</span><br><span class="line">rightAST := ast.children[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line">leftSlot, _ := m.makeLatex(leftAST)</span><br><span class="line">rightSlot, _ := m.makeLatex(rightAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, leftStr, rightStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> leftSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">leftStr = fmt.Sprintf(<span class="string">&quot;\\left %v&quot;</span>, leftSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> rightSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">rightStr = fmt.Sprintf(<span class="string">&quot;\\right %v&quot;</span>, rightSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">&quot;%v %v %v&quot;</span>, leftStr, mainStr, rightStr))</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmBRACE:</span><br><span class="line"><span class="keyword">var</span> mainSlot, leftSlot, rightSlot <span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> idx, astData := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line"><span class="keyword">if</span> idx == <span class="number">0</span> &#123;</span><br><span class="line">mainSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> idx == <span class="number">1</span> &#123;</span><br><span class="line">leftSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rightSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> rightSlot == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">rightSlot = <span class="string">&quot;.&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rightSlot = <span class="string">&quot; &quot;</span> + rightSlot</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组装公式</span></span><br><span class="line">buf.WriteString(fmt.Sprintf(</span><br><span class="line"><span class="string">&quot;\\left %v \\begin&#123;array&#125;&#123;l&#125; %v \\end&#123;array&#125; \\right%v&quot;</span>,</span><br><span class="line">leftSlot, mainSlot, rightSlot))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmBRACK:</span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">leftAST := ast.children[<span class="number">1</span>]</span><br><span class="line">rightAST := ast.children[<span class="number">2</span>]</span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line"><span class="keyword">if</span> mainSlot == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainSlot = <span class="string">&quot;\\space&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">leftSlot, _ := m.makeLatex(leftAST)</span><br><span class="line">rightSlot, _ := m.makeLatex(rightAST)</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">&quot;\\left%v %v \\right%v&quot;</span>, leftSlot, mainSlot, rightSlot))</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmBAR:</span><br><span class="line"><span class="comment">//读取数据 ParBoxClass</span></span><br><span class="line"><span class="keyword">var</span> mainSlot, leftSlot, rightSlot <span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> idx, astData := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line"><span class="keyword">if</span> idx == <span class="number">0</span> &#123;</span><br><span class="line">mainSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> idx == <span class="number">1</span> &#123;</span><br><span class="line">leftSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rightSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> rightSlot == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">rightSlot = <span class="string">&quot;.&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rightSlot = <span class="string">&quot; &quot;</span> + rightSlot</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, leftStr, rightStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> leftSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">leftStr = fmt.Sprintf(<span class="string">&quot;\\left %v&quot;</span>, leftSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> rightSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">rightStr = fmt.Sprintf(<span class="string">&quot;\\right %v&quot;</span>, rightSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v %v&quot;</span>, leftStr, mainStr, rightStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmINTERVAL:</span><br><span class="line"><span class="comment">//读取数据 ParBoxClass</span></span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">leftAST := ast.children[<span class="number">1</span>]</span><br><span class="line">rightAST := ast.children[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line">leftSlot, _ := m.makeLatex(leftAST)</span><br><span class="line">rightSlot, _ := m.makeLatex(rightAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, leftStr, rightStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> leftSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">leftStr = fmt.Sprintf(<span class="string">&quot;\\left %v&quot;</span>, leftSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> rightSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">rightStr = fmt.Sprintf(<span class="string">&quot;\\right %v&quot;</span>, rightSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v %v&quot;</span>, leftStr, mainStr, rightStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmROOT:</span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">radiAST := ast.children[<span class="number">1</span>]</span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line">radiSlot, _ := m.makeLatex(radiAST)</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">&quot;\\sqrt[%v] &#123; %v &#125;&quot;</span>, radiSlot, mainSlot))</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmFRACT:</span><br><span class="line">numAST := ast.children[<span class="number">0</span>]</span><br><span class="line">denAST := ast.children[<span class="number">1</span>]</span><br><span class="line">numSlot, _ := m.makeLatex(numAST)</span><br><span class="line">denSlot, _ := m.makeLatex(denAST)</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">&quot;\\frac &#123; %v &#125; &#123; %v &#125;&quot;</span>, numSlot, denSlot))</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmARROW:</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">variationsymboldescription</span></span><br><span class="line"><span class="comment">0×0000tvAR_SINGLEsingle arrow</span></span><br><span class="line"><span class="comment">0×0001tvAR_DOUBLEdouble arrow</span></span><br><span class="line"><span class="comment">0×0002tvAR_HARPOONharpoon</span></span><br><span class="line"><span class="comment">0×0004tvAR_TOPtop slot is present</span></span><br><span class="line"><span class="comment">0×0008tvAR_BOTTOMbottom slot is present</span></span><br><span class="line"><span class="comment">0×0010tvAR_LEFTif single, arrow points left</span></span><br><span class="line"><span class="comment">0×0020tvAR_RIGHTif single, arrow points right</span></span><br><span class="line"><span class="comment">0×0010tvAR_LOSif double or harpoon, large over small</span></span><br><span class="line"><span class="comment">0×0020tvAR_SOLif double or harpoon, small over large</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">topAST := ast.children[<span class="number">0</span>]</span><br><span class="line">bottomAST := ast.children[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">topSlot, _ := m.makeLatex(topAST)</span><br><span class="line">bottomSlot, _ := m.makeLatex(bottomAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> topStr, bottomStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> topSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">topStr = fmt.Sprintf(<span class="string">&quot;&#123;\\mathrm&#123; %v &#125;&#125;&quot;</span>, topSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> bottomSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">bottomStr = fmt.Sprintf(<span class="string">&quot;[\\mathrm&#123; %v &#125;]&quot;</span>, bottomSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">variation转码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">variationsMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">uint16</span>]<span class="keyword">string</span>)</span><br><span class="line">variationsMap[<span class="number">0x0000</span>] = <span class="string">&quot;single&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0001</span>] = <span class="string">&quot;double&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0002</span>] = <span class="string">&quot;harpoon&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0004</span>] = <span class="string">&quot;topSlotPresent&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0008</span>] = <span class="string">&quot;bottomSlotPresent&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0010</span>] = <span class="string">&quot;pointLeft&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0020</span>] = <span class="string">&quot;pointRight&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//有序循环</span></span><br><span class="line">variationsCode := []<span class="keyword">uint16</span>&#123;<span class="number">0x0000</span>, <span class="number">0x0001</span>, <span class="number">0x0002</span>, <span class="number">0x0004</span>, <span class="number">0x0008</span>, <span class="number">0x0010</span>, <span class="number">0x0020</span>&#125;</span><br><span class="line"></span><br><span class="line">arrowStyle := <span class="string">&quot;single&quot;</span></span><br><span class="line">latexFmt := <span class="string">&quot;\\x&quot;</span></span><br><span class="line"><span class="keyword">for</span> _, vCode := <span class="keyword">range</span> variationsCode &#123;</span><br><span class="line"><span class="comment">//如果存在掩码</span></span><br><span class="line"><span class="keyword">if</span> vCode&amp;<span class="keyword">uint16</span>(tmpl.variation) != <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">//判断类型，默认是single</span></span><br><span class="line"><span class="keyword">if</span> variationsMap[vCode] == <span class="string">&quot;double&quot;</span> &#123;</span><br><span class="line">arrowStyle = <span class="string">&quot;double&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> variationsMap[vCode] == <span class="string">&quot;harpoon&quot;</span> &#123;</span><br><span class="line">arrowStyle = <span class="string">&quot;harpoon&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> arrowStyle == <span class="string">&quot;single&quot;</span> &amp;&amp; variationsMap[vCode] == <span class="string">&quot;pointLeft&quot;</span> &#123;</span><br><span class="line">latexFmt = latexFmt + <span class="string">&quot;leftarrow&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> arrowStyle == <span class="string">&quot;double&quot;</span> &amp;&amp; variationsMap[vCode] == <span class="string">&quot;pointLeft&quot;</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;not implement double , large over small&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> arrowStyle == <span class="string">&quot;harpoon&quot;</span> &amp;&amp; variationsMap[vCode] == <span class="string">&quot;pointLeft&quot;</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;not implement harpoon, large over small&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> arrowStyle == <span class="string">&quot;single&quot;</span> &amp;&amp; variationsMap[vCode] == <span class="string">&quot;pointRight&quot;</span> &#123;</span><br><span class="line">latexFmt = latexFmt + <span class="string">&quot;rightarrow&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> arrowStyle == <span class="string">&quot;double&quot;</span> &amp;&amp; variationsMap[vCode] == <span class="string">&quot;pointRight&quot;</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;not implement double , small over large&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> arrowStyle == <span class="string">&quot;harpoon&quot;</span> &amp;&amp; variationsMap[vCode] == <span class="string">&quot;pointRight&quot;</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;not implement harpoon, small over large&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">variation转码 END</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v %v&quot;</span>, latexFmt, bottomStr, topStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmUBAR:</span><br><span class="line"><span class="comment">//读取数据</span></span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot; &#123;\\underline&#123; %v &#125;&#125; &quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot; %v &quot;</span>, mainStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmSUM:</span><br><span class="line"><span class="comment">//读取数据 BigOpBoxClass</span></span><br><span class="line"><span class="keyword">var</span> mainSlot, upperSlot, lowerSlot, operatorSlot <span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> idx, astData := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line"><span class="keyword">if</span> idx == <span class="number">0</span> &#123;</span><br><span class="line">mainSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> idx == <span class="number">1</span> &#123;</span><br><span class="line">lowerSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> idx == <span class="number">2</span> &#123;</span><br><span class="line">upperSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">operatorSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, lowerStr, upperStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> lowerSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">lowerStr = fmt.Sprintf(<span class="string">&quot;\\limits_&#123; %v &#125;&quot;</span>, lowerSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> upperSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">upperStr = fmt.Sprintf(<span class="string">&quot;^ %v&quot;</span>, upperSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v %v %v&quot;</span>, operatorSlot, lowerStr, upperStr, mainStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmLIM:</span><br><span class="line"><span class="comment">//读取数据 LimBoxClass</span></span><br><span class="line"><span class="keyword">var</span> mainSlot, lowerSlot, upperSlot <span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> idx, astData := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line"><span class="keyword">if</span> idx == <span class="number">0</span> &#123;</span><br><span class="line">mainSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> idx == <span class="number">1</span> &#123;</span><br><span class="line">lowerSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">upperSlot, _ = m.makeLatex(astData)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, lowerStr, upperStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;\\mathop &#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> lowerSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">lowerStr = fmt.Sprintf(<span class="string">&quot;\\limits_&#123; %v &#125;&quot;</span>, lowerSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> upperSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">upperStr = <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v %v&quot;</span>, mainStr, lowerStr, upperStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmSUP:</span><br><span class="line">subAST := ast.children[<span class="number">0</span>]</span><br><span class="line">supAST := ast.children[<span class="number">1</span>]</span><br><span class="line">subSlot, _ := m.makeLatex(subAST)</span><br><span class="line">supSlot, _ := m.makeLatex(supAST)</span><br><span class="line"></span><br><span class="line">buf.WriteString(<span class="string">&quot; ^ &#123; &quot;</span>)</span><br><span class="line">buf.WriteString(supSlot)</span><br><span class="line">buf.WriteString(<span class="string">&quot; &#125; &quot;</span>)</span><br><span class="line"><span class="keyword">if</span> subSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">buf.WriteString(<span class="string">&quot; &#123; &quot;</span>)</span><br><span class="line">buf.WriteString(subSlot)</span><br><span class="line">buf.WriteString(<span class="string">&quot; &#125; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmSUB:</span><br><span class="line"><span class="comment">//读取下标和上标</span></span><br><span class="line">subAST := ast.children[<span class="number">0</span>]</span><br><span class="line">supAST := ast.children[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">subSlot, _ := m.makeLatex(subAST)</span><br><span class="line">supSlot, _ := m.makeLatex(supAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> subFmt, supFmt <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> subSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">subFmt = fmt.Sprintf(<span class="string">&quot;_&#123; %v &#125;&quot;</span>, subSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> supSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">supFmt = fmt.Sprintf(<span class="string">&quot;^&#123; %v &#125;&quot;</span>, supSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v  %v&quot;</span>, subFmt, supFmt)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmSUBSUP:</span><br><span class="line"><span class="comment">//读取下标和上标</span></span><br><span class="line">subAST := ast.children[<span class="number">0</span>]</span><br><span class="line">supAST := ast.children[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">subSlot, _ := m.makeLatex(subAST)</span><br><span class="line">supSlot, _ := m.makeLatex(supAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> subFmt, supFmt <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> subSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">subFmt = fmt.Sprintf(<span class="string">&quot;_&#123; %v &#125;&quot;</span>, subSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> supSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">supFmt = fmt.Sprintf(<span class="string">&quot;^&#123; %v &#125;&quot;</span>, supSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v  %v&quot;</span>, subFmt, supFmt)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmVEC:</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">variations：</span></span><br><span class="line"><span class="comment">variationsymboldescription</span></span><br><span class="line"><span class="comment">0×0001tvVE_LEFTarrow points left</span></span><br><span class="line"><span class="comment">0×0002tvVE_RIGHTarrow points right</span></span><br><span class="line"><span class="comment">0×0004tvVE_UNDERarrow under slot, else over slot</span></span><br><span class="line"><span class="comment">0×0008tvVE_HARPOONharpoon</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这个转换是通过掩码计算的：</span></span><br><span class="line"><span class="comment">比如variation的值是3，即0000 0000 0000 0011</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">对应的是0×0001和0×0002：</span></span><br><span class="line"><span class="comment">0000 0000 0000 0001</span></span><br><span class="line"><span class="comment">0000 0000 0000 0010</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取数据 HatBoxClass</span></span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">variation转码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">variationsMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">uint16</span>]<span class="keyword">string</span>)</span><br><span class="line">variationsMap[<span class="number">0x0001</span>] = <span class="string">&quot;left&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0002</span>] = <span class="string">&quot;right&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0004</span>] = <span class="string">&quot;tvVE_UNDER&quot;</span></span><br><span class="line">variationsMap[<span class="number">0x0008</span>] = <span class="string">&quot;harpoonup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//有序循环</span></span><br><span class="line">variationsCode := []<span class="keyword">uint16</span>&#123;<span class="number">0x0001</span>, <span class="number">0x0002</span>, <span class="number">0x0004</span>, <span class="number">0x0008</span>&#125;</span><br><span class="line"></span><br><span class="line">topStr := <span class="string">&quot;\\overset\\&quot;</span></span><br><span class="line"><span class="keyword">for</span> _, vCode := <span class="keyword">range</span> variationsCode &#123;</span><br><span class="line"><span class="keyword">if</span> vCode&amp;<span class="keyword">uint16</span>(tmpl.variation) != <span class="number">0</span> &#123;</span><br><span class="line">topStr = topStr + variationsMap[vCode]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果variationCode小于8，则一定不是harpoon,那么默认就使用arrow</span></span><br><span class="line"><span class="keyword">if</span> tmpl.variation &lt; <span class="number">8</span> &#123;</span><br><span class="line">topStr = topStr + <span class="string">&quot;arrow&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">variation转码 END</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v&quot;</span>, topStr, mainStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmHAT:</span><br><span class="line"><span class="comment">//读取数据 HatBoxClass</span></span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">topAST := ast.children[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line">topSlot, _ := m.makeLatex(topAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, topStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> topSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">topStr = fmt.Sprintf(<span class="string">&quot; %v &quot;</span>, topSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v&quot;</span>, topStr, mainStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> tmARC:</span><br><span class="line"><span class="comment">//读取数据 HatBoxClass</span></span><br><span class="line">mainAST := ast.children[<span class="number">0</span>]</span><br><span class="line">topAST := ast.children[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取latex数据</span></span><br><span class="line">mainSlot, _ := m.makeLatex(mainAST)</span><br><span class="line">topSlot, _ := m.makeLatex(topAST)</span><br><span class="line"></span><br><span class="line"><span class="comment">//转成latex代码</span></span><br><span class="line"><span class="keyword">var</span> mainStr, topStr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> mainSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">mainStr = fmt.Sprintf(<span class="string">&quot;&#123; %v &#125;&quot;</span>, mainSlot)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> topSlot != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">topStr = fmt.Sprintf(<span class="string">&quot;\\overset %v&quot;</span>, topSlot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//组成整体公式</span></span><br><span class="line">tmplStr := fmt.Sprintf(<span class="string">&quot;%v %v&quot;</span>, topStr, mainStr)</span><br><span class="line">buf.WriteString(tmplStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">m.Valid = <span class="literal">false</span></span><br><span class="line">log.Println(<span class="string">&quot;TMPL NOT IMPLEMENT&quot;</span>, tmpl.selector, tmpl.variation)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, _ast := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line">_latex, _ := m.makeLatex(_ast)</span><br><span class="line">buf.WriteString(_latex)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> PILE:</span><br><span class="line"><span class="keyword">for</span> idx, _ast := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line">_latex, _ := m.makeLatex(_ast)</span><br><span class="line"></span><br><span class="line"><span class="comment">//多个line字符串数据以 \\ 分割</span></span><br><span class="line"><span class="keyword">if</span> idx &gt; <span class="number">0</span> &#123;</span><br><span class="line">buf.WriteString(<span class="string">&quot; \\\\ &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(_latex)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> MATRIX:</span><br><span class="line">matrixCol := <span class="keyword">int</span>(ast.value.(*MtMatrix).cols)</span><br><span class="line"><span class="keyword">for</span> idx, _ast := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line">_latex, _ := m.makeLatex(_ast)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> idx == <span class="number">0</span> &#123;</span><br><span class="line">buf.WriteString(<span class="string">&quot; \\begin&#123;array&#125; &#123;&#125; &quot;</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(_latex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> idx%matrixCol == <span class="number">0</span> &#123;</span><br><span class="line">buf.WriteString(<span class="string">&quot; \\\\ &quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">buf.WriteString(<span class="string">&quot; &amp; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(<span class="string">&quot; \\end&#123;array&#125; &quot;</span>)</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> LINE:</span><br><span class="line"><span class="keyword">for</span> _, _ast := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line">_latex, _ := m.makeLatex(_ast)</span><br><span class="line">buf.WriteString(_latex)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> EMBELL:</span><br><span class="line">embellType := EmbellType(ast.value.(*MtEmbellRd).embellType)</span><br><span class="line"><span class="keyword">var</span> embellStr <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> embellType &#123;</span><br><span class="line"><span class="keyword">case</span> emb1DOT:</span><br><span class="line">embellStr = <span class="string">&quot; \\dot &quot;</span></span><br><span class="line"><span class="keyword">case</span> emb1PRIME:</span><br><span class="line">embellStr = <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line"><span class="keyword">case</span> emb2PRIME:</span><br><span class="line">embellStr = <span class="string">&quot;&#x27;&#x27;&quot;</span></span><br><span class="line"><span class="keyword">case</span> emb3PRIME:</span><br><span class="line">embellStr = <span class="string">&quot;&#x27;&#x27;&#x27;&quot;</span></span><br><span class="line"><span class="keyword">case</span> embHAT:</span><br><span class="line">embellStr = <span class="string">&quot; \\hat &quot;</span></span><br><span class="line"><span class="keyword">case</span> embOBAR:</span><br><span class="line">embellStr = <span class="string">&quot; \\bar &quot;</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">log.Println(<span class="string">&quot;not implement embell:&quot;</span>, embellType)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf.WriteString(embellStr)</span><br><span class="line"><span class="keyword">return</span> buf.String(), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//[MTEF Storage](https://docs.wiris.com/en/mathtype/mathtype_desktop/mathtype-sdk/mtefstorage)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Open</span><span class="params">(reader io.ReadSeeker)</span> <span class="params">(eqn *MTEFv5, err error)</span></span> &#123;</span><br><span class="line"><span class="comment">//parse `mtef` stream from `ole` object</span></span><br><span class="line">ole, err := ole2.Open(reader, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dir, err := ole.ListDir()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, file := <span class="keyword">range</span> dir &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;Equation Native&quot;</span> == file.Name() &#123;</span><br><span class="line">root := dir[<span class="number">0</span>]</span><br><span class="line">reader := ole.OpenFile(file, root)</span><br><span class="line"></span><br><span class="line">hdrBuffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, oleCbHdr)</span><br><span class="line"><span class="keyword">if</span> _, err := reader.Read(hdrBuffer); err == <span class="literal">nil</span> &#123;</span><br><span class="line">hdrReader := bytes.NewReader(hdrBuffer)</span><br><span class="line"><span class="keyword">var</span> cbHdr = <span class="keyword">uint16</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">var</span> cbSize = <span class="keyword">uint32</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">_ = binary.Read(hdrReader, binary.LittleEndian, &amp;cbHdr)</span><br><span class="line"><span class="keyword">if</span> cbHdr != oleCbHdr &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ignore `version: u32` and `cf: u16`</span></span><br><span class="line">_, _ = hdrReader.Seek(<span class="number">4</span>+<span class="number">2</span>, io.SeekCurrent)</span><br><span class="line">_ = binary.Read(hdrReader, binary.LittleEndian, &amp;cbSize)</span><br><span class="line"></span><br><span class="line"><span class="comment">//body from `cbHdr` to `cbHdr + cbSize`</span></span><br><span class="line">eqnBody := <span class="built_in">make</span>([]<span class="keyword">byte</span>, cbSize)</span><br><span class="line">_, _ = reader.Seek(<span class="keyword">int64</span>(cbHdr), io.SeekStart)</span><br><span class="line">_, _ = reader.Read(eqnBody)</span><br><span class="line"></span><br><span class="line">eqn = <span class="built_in">new</span>(MTEFv5)</span><br><span class="line">eqn.reader = bytes.NewReader(eqnBody)</span><br><span class="line">_ = eqn.readRecord()</span><br><span class="line">_ = eqn.makeAST()</span><br><span class="line"><span class="keyword">return</span> eqn, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RecordType <span class="keyword">uint8</span></span><br><span class="line"><span class="keyword">type</span> OptionType <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">END            RecordType = <span class="number">0</span></span><br><span class="line">LINE           RecordType = <span class="number">1</span></span><br><span class="line">CHAR           RecordType = <span class="number">2</span></span><br><span class="line">TMPL           RecordType = <span class="number">3</span></span><br><span class="line">PILE           RecordType = <span class="number">4</span></span><br><span class="line">MATRIX         RecordType = <span class="number">5</span></span><br><span class="line">EMBELL         RecordType = <span class="number">6</span></span><br><span class="line">RULER          RecordType = <span class="number">7</span></span><br><span class="line">FONT_STYLE_DEF RecordType = <span class="number">8</span></span><br><span class="line">SIZE           RecordType = <span class="number">9</span></span><br><span class="line">FULL           RecordType = <span class="number">10</span></span><br><span class="line">SUB            RecordType = <span class="number">11</span></span><br><span class="line">SUB2           RecordType = <span class="number">12</span></span><br><span class="line">SYM            RecordType = <span class="number">13</span></span><br><span class="line">SUBSYM         RecordType = <span class="number">14</span></span><br><span class="line">COLOR          RecordType = <span class="number">15</span></span><br><span class="line">COLOR_DEF      RecordType = <span class="number">16</span></span><br><span class="line">FONT_DEF       RecordType = <span class="number">17</span></span><br><span class="line">EQN_PREFS      RecordType = <span class="number">18</span></span><br><span class="line">ENCODING_DEF   RecordType = <span class="number">19</span></span><br><span class="line">FUTURE         RecordType = <span class="number">100</span></span><br><span class="line">ROOT           RecordType = <span class="number">255</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">MtefOptNudge           OptionType = <span class="number">0x08</span></span><br><span class="line">MtefOptCharEmbell      OptionType = <span class="number">0x01</span></span><br><span class="line">MtefOptCharFuncStart   OptionType = <span class="number">0x02</span></span><br><span class="line">MtefOptCharEncChar8    OptionType = <span class="number">0x04</span></span><br><span class="line">MtefOptCharEncChar16   OptionType = <span class="number">0x10</span></span><br><span class="line">MtefOptCharEncNoMtcode OptionType = <span class="number">0x20</span></span><br><span class="line">MtefOptLineNull        OptionType = <span class="number">0x01</span></span><br><span class="line">mtefOPT_LP_RULER       OptionType = <span class="number">0x02</span></span><br><span class="line">MtefOptLineLspace      OptionType = <span class="number">0x04</span></span><br><span class="line">MtefOptLpRuler         OptionType = <span class="number">0x02</span></span><br><span class="line">MtefColorCmyk          OptionType = <span class="number">0x01</span></span><br><span class="line">MtefColorSpot          OptionType = <span class="number">0x02</span></span><br><span class="line">MtefColorName          OptionType = <span class="number">0x04</span></span><br><span class="line">mtefCOLOR_CMYK         OptionType = <span class="number">0x01</span></span><br><span class="line">mtefCOLOR_SPOT         OptionType = <span class="number">0x02</span></span><br><span class="line">mtefCOLOR_NAME         OptionType = <span class="number">0x04</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">fnTEXT     <span class="keyword">uint8</span> = <span class="number">1</span></span><br><span class="line">fnFUNCTION <span class="keyword">uint8</span> = <span class="number">2</span></span><br><span class="line">fnVARIABLE <span class="keyword">uint8</span> = <span class="number">3</span></span><br><span class="line">fnLCGREEK  <span class="keyword">uint8</span> = <span class="number">4</span></span><br><span class="line">fnUCGREEK  <span class="keyword">uint8</span> = <span class="number">5</span></span><br><span class="line">fnSYMBOL   <span class="keyword">uint8</span> = <span class="number">6</span></span><br><span class="line">fnVECTOR   <span class="keyword">uint8</span> = <span class="number">7</span></span><br><span class="line">fnNUMBER   <span class="keyword">uint8</span> = <span class="number">8</span></span><br><span class="line">fnUSER1    <span class="keyword">uint8</span> = <span class="number">9</span></span><br><span class="line">fnUSER2    <span class="keyword">uint8</span> = <span class="number">10</span></span><br><span class="line">fnMTEXTRA  <span class="keyword">uint8</span> = <span class="number">11</span></span><br><span class="line">fnTEXT_FE  <span class="keyword">uint8</span> = <span class="number">12</span></span><br><span class="line">fnEXPAND   <span class="keyword">uint8</span> = <span class="number">22</span></span><br><span class="line">fnMARKER   <span class="keyword">uint8</span> = <span class="number">23</span></span><br><span class="line">fnSPACE    <span class="keyword">uint8</span> = <span class="number">24</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtTabStop <span class="keyword">struct</span> &#123;</span><br><span class="line">next   *MtTabStop</span><br><span class="line">_type  <span class="keyword">int16</span></span><br><span class="line">offset <span class="keyword">int16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtRuler <span class="keyword">struct</span> &#123;</span><br><span class="line">nStops      <span class="keyword">int16</span></span><br><span class="line">tabStopList *MtTabStop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtLine <span class="keyword">struct</span> &#123;</span><br><span class="line">nudgeX     <span class="keyword">int16</span></span><br><span class="line">nudgeY     <span class="keyword">int16</span></span><br><span class="line">lineSpace  <span class="keyword">uint8</span></span><br><span class="line">null       <span class="keyword">bool</span></span><br><span class="line">ruler      *MtRuler</span><br><span class="line">objectList *MtObjList</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtEmbell <span class="keyword">struct</span> &#123;</span><br><span class="line">next   *MtEmbell</span><br><span class="line">nudgeX <span class="keyword">int16</span></span><br><span class="line">nudgeY <span class="keyword">int16</span></span><br><span class="line">embell <span class="keyword">uint8</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtChar <span class="keyword">struct</span> &#123;</span><br><span class="line">nudgeX   <span class="keyword">int16</span></span><br><span class="line">nudgeY   <span class="keyword">int16</span></span><br><span class="line">options  <span class="keyword">uint8</span></span><br><span class="line">typeface <span class="keyword">uint8</span></span><br><span class="line"><span class="comment">//16-bit integer MTCode value</span></span><br><span class="line">mtcode <span class="keyword">uint16</span></span><br><span class="line"><span class="comment">//8-bit font position</span></span><br><span class="line">bits8 <span class="keyword">uint8</span></span><br><span class="line"><span class="comment">//16-bit integer font position</span></span><br><span class="line">bits16         <span class="keyword">uint16</span></span><br><span class="line">embellishments *MtEmbell</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtEqnPrefs <span class="keyword">struct</span> &#123;</span><br><span class="line">sizes  []<span class="keyword">string</span></span><br><span class="line">spaces []<span class="keyword">string</span></span><br><span class="line">styles []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtSize <span class="keyword">struct</span> &#123;</span><br><span class="line">lsize <span class="keyword">uint8</span></span><br><span class="line">dsize <span class="keyword">uint8</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtfontStyleDef <span class="keyword">struct</span> &#123;</span><br><span class="line">fontDefIndex <span class="keyword">uint8</span></span><br><span class="line">name         <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtfontDef <span class="keyword">struct</span> &#123;</span><br><span class="line">encDefIndex <span class="keyword">uint8</span></span><br><span class="line">name        <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtColorDefIndex <span class="keyword">struct</span> &#123;</span><br><span class="line">index <span class="keyword">uint8</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtColorDef <span class="keyword">struct</span> &#123;</span><br><span class="line">values []<span class="keyword">uint8</span></span><br><span class="line">name   <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtObjList <span class="keyword">struct</span> &#123;</span><br><span class="line">next   *MtObjList</span><br><span class="line">tag    RecordType</span><br><span class="line">objPtr []MtObject</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtTmpl <span class="keyword">struct</span> &#123;</span><br><span class="line">nudgeX     <span class="keyword">int16</span></span><br><span class="line">nudgeY     <span class="keyword">int16</span></span><br><span class="line">selector   <span class="keyword">uint8</span></span><br><span class="line">variation  <span class="keyword">uint16</span></span><br><span class="line">options    <span class="keyword">uint8</span></span><br><span class="line">objectList *MtObjList</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtPile <span class="keyword">struct</span> &#123;</span><br><span class="line">nudgeX <span class="keyword">int16</span></span><br><span class="line">nudgeY <span class="keyword">int16</span></span><br><span class="line">halign <span class="keyword">uint8</span></span><br><span class="line">valign <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//ruler可以不读，不影响后面字节错位，因为这个是一个完整的额外record数据</span></span><br><span class="line">ruler *MtRuler</span><br><span class="line"></span><br><span class="line"><span class="comment">//objectList可以不读，不影响后面字节错位，因为这个是一个完整的额外record数据</span></span><br><span class="line">objectList *MtObjList</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtMatrix <span class="keyword">struct</span> &#123;</span><br><span class="line">nudgeX <span class="keyword">int16</span></span><br><span class="line">nudgeY <span class="keyword">int16</span></span><br><span class="line">valign <span class="keyword">uint8</span></span><br><span class="line">h_just <span class="keyword">uint8</span></span><br><span class="line">v_just <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line">rows <span class="keyword">uint8</span></span><br><span class="line">cols <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//row_parts uint8</span></span><br><span class="line"><span class="comment">//col_parts uint8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//objectList可以不读，不影响后面字节错位，因为这个是一个完整的额外record数据</span></span><br><span class="line">objectList *MtObjList</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtEmbellRd <span class="keyword">struct</span> &#123;</span><br><span class="line">options    <span class="keyword">uint8</span></span><br><span class="line">nudgeX     <span class="keyword">int16</span></span><br><span class="line">nudgeY     <span class="keyword">int16</span></span><br><span class="line">embellType <span class="keyword">uint8</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtAST <span class="keyword">struct</span> &#123;</span><br><span class="line">tag      RecordType</span><br><span class="line">value    MtObject</span><br><span class="line">children []*MtAST</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MtObject <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ast *MtAST)</span> <span class="title">debug</span><span class="params">(indent <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;&gt; %#v MtAST %#v\n&quot;</span>, indent, ast)</span><br><span class="line">indent += <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> _, ele := <span class="keyword">range</span> ast.children &#123;</span><br><span class="line">ele.debug(indent)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SelectorType <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Template selectors and variations:</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line"><span class="comment">//Fences (parentheses, etc.):</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmANGLE   SelectorType = <span class="number">0</span> <span class="comment">//angle bracketsParBoxClass</span></span><br><span class="line">tmPAREN   SelectorType = <span class="number">1</span> <span class="comment">//parenthesesParBoxClass</span></span><br><span class="line">tmBRACE   SelectorType = <span class="number">2</span> <span class="comment">//braces (curly brackets)ParBoxClass</span></span><br><span class="line">tmBRACK   SelectorType = <span class="number">3</span> <span class="comment">//square bracketsParBoxClass</span></span><br><span class="line">tmBAR     SelectorType = <span class="number">4</span> <span class="comment">//vertical barsParBoxClass</span></span><br><span class="line">tmDBAR    SelectorType = <span class="number">5</span> <span class="comment">//double vertical barsParBoxClass</span></span><br><span class="line">tmFLOOR   SelectorType = <span class="number">6</span> <span class="comment">//floor bracketsParBoxClass</span></span><br><span class="line">tmCEILING SelectorType = <span class="number">7</span> <span class="comment">//ceiling bracketsParBoxClass</span></span><br><span class="line">tmOBRACK  SelectorType = <span class="number">8</span> <span class="comment">//open (white) bracketsParBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariation bitssymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvFENCE_Lleft fence is present</span></span><br><span class="line"><span class="comment">//0×0002tvFENCE_Rright fence is present</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Intervals:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmINTERVAL SelectorType = <span class="number">9</span> <span class="comment">//unmatched brackets and parenthesesParBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariation bitssymboldescription</span></span><br><span class="line"><span class="comment">//0×0000tvINTV_LEFT_LPleft fence is left parenthesis</span></span><br><span class="line"><span class="comment">//0×0001tvINTV_LEFT_RPleft fence is right parenthesis</span></span><br><span class="line"><span class="comment">//0×0002tvINTV_LEFT_LBleft fence is left bracket</span></span><br><span class="line"><span class="comment">//0×0003tvINTV_LEFT_RBleft fence is right bracket</span></span><br><span class="line"><span class="comment">//0×0000tvINTV_RIGHT_LPright fence is left parenthesis</span></span><br><span class="line"><span class="comment">//0×0010tvINTV_RIGHT_RPright fence is right parenthesis</span></span><br><span class="line"><span class="comment">//0×0020tvINTV_RIGHT_LBright fence is left bracket</span></span><br><span class="line"><span class="comment">//0×0030tvINTV_RIGHT_RBright fence is right bracket</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Radicals (square and nth roots):</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmROOT SelectorType = <span class="number">10</span> <span class="comment">//radicalRootBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0tvROOT_SQsquare root</span></span><br><span class="line"><span class="comment">//1tvROOT_NTHnth root</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Fractions:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmFRACT SelectorType = <span class="number">11</span> <span class="comment">//fractions</span></span><br><span class="line"><span class="comment">//variationsvariation bitssymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvFR_SMALLsubscript-size slots (piece fraction)</span></span><br><span class="line"><span class="comment">//0×0002tvFR_SLASHfraction bar is a slash</span></span><br><span class="line"><span class="comment">//0×0004tvFR_BASEnum. and denom. are baseline aligned</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Over and Underbars:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmUBAR SelectorType = <span class="number">12</span> <span class="comment">//underbarBarBoxClass</span></span><br><span class="line">tmOBAR SelectorType = <span class="number">13</span> <span class="comment">//overbarBarBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariation bitssymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvBAR_DOUBLEbar is doubled, else single</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Arrows:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmARROW SelectorType = <span class="number">14</span> <span class="comment">//arrowArroBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0000tvAR_SINGLEsingle arrow</span></span><br><span class="line"><span class="comment">//0×0001tvAR_DOUBLEdouble arrow</span></span><br><span class="line"><span class="comment">//0×0002tvAR_HARPOONharpoon</span></span><br><span class="line"><span class="comment">//0×0004tvAR_TOPtop slot is present</span></span><br><span class="line"><span class="comment">//0×0008tvAR_BOTTOMbottom slot is present</span></span><br><span class="line"><span class="comment">//0×0010tvAR_LEFTif single, arrow points left</span></span><br><span class="line"><span class="comment">//0×0020tvAR_RIGHTif single, arrow points right</span></span><br><span class="line"><span class="comment">//0×0010tvAR_LOSif double or harpoon, large over small</span></span><br><span class="line"><span class="comment">//0×0020tvAR_SOLif double or harpoon, small over large</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Integrals (see Limit Variations):</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmINTEG SelectorType = <span class="number">15</span> <span class="comment">//integralBigOpBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvINT_1single integral sign</span></span><br><span class="line"><span class="comment">//0×0002tvINT_2double integral sign</span></span><br><span class="line"><span class="comment">//0×0003tvINT_3triple integral sign</span></span><br><span class="line"><span class="comment">//0×0004tvINT_LOOPhas loop w/o arrows</span></span><br><span class="line"><span class="comment">//0×0008tvINT_CW_LOOPhas clockwise loop</span></span><br><span class="line"><span class="comment">//0×000CtvINT_CCW_LOOPhas counter-clockwise loop</span></span><br><span class="line"><span class="comment">//0×0100tvINT_EXPANDintegral signs expand</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Sums, products, coproducts, unions, intersections, etc. (see Limit Variations):</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmSUM    SelectorType = <span class="number">16</span> <span class="comment">//sumBigOpBoxClass</span></span><br><span class="line">tmPROD   SelectorType = <span class="number">17</span> <span class="comment">//productBigOpBoxClass</span></span><br><span class="line">tmCOPROD SelectorType = <span class="number">18</span> <span class="comment">//coproductBigOpBoxClass</span></span><br><span class="line">tmUNION  SelectorType = <span class="number">19</span> <span class="comment">//unionBigOpBoxClass</span></span><br><span class="line">tmINTER  SelectorType = <span class="number">20</span> <span class="comment">//intersectionBigOpBoxClass</span></span><br><span class="line">tmINTOP  SelectorType = <span class="number">21</span> <span class="comment">//integral-style big operatorBigOpBoxClass</span></span><br><span class="line">tmSUMOP  SelectorType = <span class="number">22</span> <span class="comment">//summation-style big operatorBigOpBoxClass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Limits (see Limit Variations):</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmLIM SelectorType = <span class="number">23</span> <span class="comment">//limitsLimBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0tvSUBARsingle underbar</span></span><br><span class="line"><span class="comment">//1tvDUBARdouble underbar</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Horizontal braces and brackets:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmHBRACE SelectorType = <span class="number">24</span> <span class="comment">//horizontal braceHFenceBoxClass</span></span><br><span class="line">tmHBRACK SelectorType = <span class="number">25</span> <span class="comment">//horizontal bracketHFenceBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvHB_TOPslot is on the top, else on the bottom</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Long division:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmLDIV SelectorType = <span class="number">26</span> <span class="comment">//long divisionLDivBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvLD_UPPERupper slot is present</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Subscripts and superscripts:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmSUB    SelectorType = <span class="number">27</span> <span class="comment">//subscriptScrBoxClass</span></span><br><span class="line">tmSUP    SelectorType = <span class="number">28</span> <span class="comment">//superscriptScrBoxClass</span></span><br><span class="line">tmSUBSUP SelectorType = <span class="number">29</span> <span class="comment">//subscript and superscriptScrBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvSU_PRECEDESscript precedes scripted item,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//else follows</span></span><br><span class="line"><span class="comment">//Dirac bra-ket notation:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmDIRAC SelectorType = <span class="number">30</span> <span class="comment">//bra-ket notationDiracBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvDI_LEFTleft part is present</span></span><br><span class="line"><span class="comment">//0×0002tvDI_RIGHTright part is present</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Vectors:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmVEC SelectorType = <span class="number">31</span> <span class="comment">//vectorHatBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvVE_LEFTarrow points left</span></span><br><span class="line"><span class="comment">//0×0002tvVE_RIGHTarrow points right</span></span><br><span class="line"><span class="comment">//0×0004tvVE_UNDERarrow under slot, else over slot</span></span><br><span class="line"><span class="comment">//0×0008tvVE_HARPOONharpoon</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Hats, arcs, tilde, joint status:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmTILDE   SelectorType = <span class="number">32</span> <span class="comment">//tilde over charactersHatBoxClass</span></span><br><span class="line">tmHAT     SelectorType = <span class="number">33</span> <span class="comment">//hat over charactersHatBoxClass</span></span><br><span class="line">tmARC     SelectorType = <span class="number">34</span> <span class="comment">//arc over charactersHatBoxClass</span></span><br><span class="line">tmJSTATUS SelectorType = <span class="number">35</span> <span class="comment">//joint status constructHatBoxClass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Overstrikes (cross-outs):</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmSTRIKE SelectorType = <span class="number">36</span> <span class="comment">//overstrike (cross-out)StrikeBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvST_HORIZline is horizontal, else slashes</span></span><br><span class="line"><span class="comment">//0×0002tvST_UPif slashes, slash from lower-left to upper-right is present</span></span><br><span class="line"><span class="comment">//0×0004tvST_DOWNif slashes, slash from upper-left to lower-right is present</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Boxes:</span></span><br><span class="line"><span class="comment">//selectorsymboldescriptionclass</span></span><br><span class="line">tmBOX SelectorType = <span class="number">37</span> <span class="comment">//boxTBoxBoxClass</span></span><br><span class="line"><span class="comment">//variationsvariationsymboldescription</span></span><br><span class="line"><span class="comment">//0×0001tvBX_ROUNDcorners are round, else square</span></span><br><span class="line"><span class="comment">//0×0002tvBX_LEFTleft side is present</span></span><br><span class="line"><span class="comment">//0×0004tvBX_RIGHTright side is present</span></span><br><span class="line"><span class="comment">//0×0008tvBX_TOPtop side is present</span></span><br><span class="line"><span class="comment">//0×0010tvBX_BOTTOMbottom side is present</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> EmbellType <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">emb1DOT      EmbellType = <span class="number">2</span></span><br><span class="line">emb2DOT      EmbellType = <span class="number">3</span></span><br><span class="line">emb3DOT      EmbellType = <span class="number">4</span></span><br><span class="line">emb1PRIME    EmbellType = <span class="number">5</span></span><br><span class="line">emb2PRIME    EmbellType = <span class="number">6</span></span><br><span class="line">embBPRIME    EmbellType = <span class="number">7</span></span><br><span class="line">embTILDE     EmbellType = <span class="number">8</span></span><br><span class="line">embHAT       EmbellType = <span class="number">9</span></span><br><span class="line">embNOT       EmbellType = <span class="number">10</span></span><br><span class="line">embRARROW    EmbellType = <span class="number">11</span></span><br><span class="line">embLARROW    EmbellType = <span class="number">12</span></span><br><span class="line">embBARROW    EmbellType = <span class="number">13</span></span><br><span class="line">embR1ARROW   EmbellType = <span class="number">14</span></span><br><span class="line">embL1ARROW   EmbellType = <span class="number">15</span></span><br><span class="line">embMBAR      EmbellType = <span class="number">16</span></span><br><span class="line">embOBAR      EmbellType = <span class="number">17</span></span><br><span class="line">emb3PRIME    EmbellType = <span class="number">18</span></span><br><span class="line">embFROWN     EmbellType = <span class="number">19</span></span><br><span class="line">embSMILE     EmbellType = <span class="number">20</span></span><br><span class="line">embX_BARS    EmbellType = <span class="number">21</span></span><br><span class="line">embUP_BAR    EmbellType = <span class="number">22</span></span><br><span class="line">embDOWN_BAR  EmbellType = <span class="number">23</span></span><br><span class="line">emb4DOT      EmbellType = <span class="number">24</span></span><br><span class="line">embU_1DOT    EmbellType = <span class="number">25</span></span><br><span class="line">embU_2DOT    EmbellType = <span class="number">26</span></span><br><span class="line">embU_3DOT    EmbellType = <span class="number">27</span></span><br><span class="line">embU_4DOT    EmbellType = <span class="number">28</span></span><br><span class="line">embU_BAR     EmbellType = <span class="number">29</span></span><br><span class="line">embU_TILDE   EmbellType = <span class="number">30</span></span><br><span class="line">embU_FROWN   EmbellType = <span class="number">31</span></span><br><span class="line">embU_SMILE   EmbellType = <span class="number">32</span></span><br><span class="line">embU_RARROW  EmbellType = <span class="number">33</span></span><br><span class="line">embU_LARROW  EmbellType = <span class="number">34</span></span><br><span class="line">embU_BARROW  EmbellType = <span class="number">35</span></span><br><span class="line">embU_R1ARROW EmbellType = <span class="number">36</span></span><br><span class="line">embU_L1ARROW EmbellType = <span class="number">37</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​在此go文件目录下执行编译MathTypeConvert.go程序命令</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> build -buildmode=c-shared -o bin/MathTypeConvert-mac.so MathTypeConvert.<span class="keyword">go</span> </span><br></pre></td></tr></table></figure><p>​此时得到如下两个文件，<a href="http://MathTypeConvert-mac.so">MathTypeConvert-mac.so</a>、MathTypeConvert-mac.h，这两个文件只能在mac环境下运行，如果需要部署到linux环境，见Mac编译linux环境步骤</p><p><img src="/images/image-20210630113638025.png" alt="image-20210630113638025" /></p><h3 id="windows编译windows可运行so文件"><a class="markdownIt-Anchor" href="#windows编译windows可运行so文件"></a> windows编译windows可运行.so文件</h3><p>​windows上部署好golang环境，安装好gcc编译库，执行一下命令，<a href="http://xn--rcrp04a.so">得到.so</a>、.h文件，本文不再赘述</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -buildmode&#x3D;c-shared -o bin&#x2F;MathTypeConvert-mac.so MathTypeConvert.go </span><br></pre></td></tr></table></figure><h3 id="mac-m1编译linux可运行so文件"><a class="markdownIt-Anchor" href="#mac-m1编译linux可运行so文件"></a> Mac m1编译linux可运行.so文件</h3><p>​如果是mac m1架构需要安装交叉编译linux的环境</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># brew 安装编译环境</span><br><span class="line">brew tap messense/macos-cross-toolchains</span><br><span class="line">brew install x86_64-unknown-linux-gnu</span><br><span class="line">brew install x86_64-unknown-linux-gnu</span><br></pre></td></tr></table></figure><p>​更新path到.zshrc文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">打开环境变量文件</span></span><br><span class="line">vi .zshrc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">添加linux编译环境</span></span><br><span class="line">export CC_x86_64_unknown_linux_gnu=x86_64-unknown-linux-gnu-gcc</span><br><span class="line">export CXX_x86_64_unknown_linux_gnu=x86_64-unknown-linux-gnu-g++</span><br><span class="line">export AR_x86_64_unknown_linux_gnu=x86_64-unknown-linux-gnu-ar</span><br><span class="line">export CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=x86_64-unknown-linux-gnu-gcc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">更新.zshrc</span></span><br><span class="line">source .zshrc</span><br></pre></td></tr></table></figure><p>​进入MathTypeConvert.go父目录执行编译命令</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CGO_ENABLED=<span class="number">1</span> GOOS=linux GOARCH=amd64 CC=x86_64-unknown-linux-gnu-gcc CC_FOR_TARGET=x86_64-unknown-linux-gnu-gcc <span class="keyword">go</span> build -buildmode=c-shared -o bin/MathTypeConvert.so MathTypeConvert.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><p>​此时将得到linux环境下运行的库文件，<a href="http://MathTypeConvert.so">MathTypeConvert.so</a>、MathTypeConvert.h，这两个文件是linux环境下可运行文件</p><p><img src="/images/image-20210630114242543.png" alt="image-20210630114242543" /></p><h3 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h3><p>​此时可供java JNI调用的so、.h库文件已经存在，java已解析出mathType的二进制文件，接下来就是使用java调用so、.h库文件代码</p><p>java工程 pom引入JNI</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;jna&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;5.8.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>由于go程序接受字符串是goString类型，而java传参的是String类型，此处需要进行一次转换，新建GoString.java文件，此文件在调用传参时体现作用String latex = MathTypeToLatex.mathTypeTransformer.Convert(new GoString.ByValue(path))</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spark.teaching.word.to.question.util.math;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.jna.Structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> : liu heng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> :</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> : 2021-06-26 11:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoString</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String str;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span> length;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GoString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GoString</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.str = str;</span><br><span class="line">        <span class="keyword">this</span>.length = str.length();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; fields = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        fields.add(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        fields.add(<span class="string">&quot;length&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> fields;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByValue</span> <span class="keyword">extends</span> <span class="title">GoString</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByValue</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ByValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ByValue</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">GoString</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ByReference</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ByReference</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​新建mathType转换latex程序运行类MathTypeToLatex.java、及MathTypeConfig.java，<a href="http://MathTypeConfig.xn--java-3h5f8qj9usw8epjwb2rm.so">MathTypeConfig.java主要用于加载.so</a>、.h文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spark.teaching.word.to.question.util.math;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.io.ByteStreams;</span><br><span class="line"><span class="keyword">import</span> com.sun.jna.Library;</span><br><span class="line"><span class="keyword">import</span> com.sun.jna.Native;</span><br><span class="line"><span class="keyword">import</span> com.sun.jna.Structure;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> : liu heng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> : mathType转latex</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> : 2021-06-26 14:38</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MathTypeToLatex</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(MathTypeToLatex.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MathTypeTransformer mathTypeTransformer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String lib;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String os = System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase();</span><br><span class="line">            String mathLibSoName;</span><br><span class="line">            String mathLibHName;</span><br><span class="line">            <span class="keyword">if</span> (os.contains(<span class="string">&quot;mac&quot;</span>)) &#123;</span><br><span class="line">                <span class="comment">// mac平台</span></span><br><span class="line">                mathLibSoName = <span class="string">&quot;MathTypeConvert-mac.so&quot;</span>;</span><br><span class="line">                mathLibHName = <span class="string">&quot;MathTypeConvert-mac.h&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (os.contains(<span class="string">&quot;windows&quot;</span>) || os.contains(<span class="string">&quot;Windows&quot;</span>)) &#123;</span><br><span class="line">                <span class="comment">// windows平台</span></span><br><span class="line">                mathLibSoName = <span class="string">&quot;MathTypeConvert-win.so&quot;</span>;</span><br><span class="line">                mathLibHName = <span class="string">&quot;MathTypeConvert-win.h&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// linux平台</span></span><br><span class="line">                mathLibSoName = <span class="string">&quot;MathTypeConvert.so&quot;</span>;</span><br><span class="line">                mathLibHName = <span class="string">&quot;MathTypeConvert.h&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lib = loadLib(<span class="string">&quot;mathLib&quot;</span>, mathLibSoName);</span><br><span class="line">            loadLib(<span class="string">&quot;mathLib&quot;</span>, mathLibHName);</span><br><span class="line">            LOGGER.info(<span class="string">&quot;MathTypeToLatex-&gt;从jar包中读取数据&quot;</span>);</span><br><span class="line">            LOGGER.info(<span class="string">&quot;MathTypeToLatex-&gt;lib:&#123;&#125;&quot;</span>, lib);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOGGER.warn(<span class="string">&quot;MathTypeToLatex-&gt;发生异常:&#123;&#125;&quot;</span>, e.toString());</span><br><span class="line">            lib = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadMathTypeConvert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            LOGGER.info(<span class="string">&quot;loadMathTypeConvert-&gt;开始加载mathType转换库&quot;</span>);</span><br><span class="line">            mathTypeTransformer = Native.load(lib, MathTypeTransformer.class);</span><br><span class="line">            LOGGER.info(<span class="string">&quot;loadMathTypeConvert-&gt;加载mathType转换库成功:&#123;&#125;&quot;</span>, mathTypeTransformer);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOGGER.info(<span class="string">&quot;loadMathTypeConvert-&gt;加载mathType转换库失败:&#123;&#125;&quot;</span>, e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">loadLib</span><span class="params">(String path, String name)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InputStream in = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// path 是自定义路径，name 是so 文件名</span></span><br><span class="line">            String binPath = MathTypeToLatex.class.getClassLoader().getResource(&quot;bin&quot;).getFile();</span><br><span class="line">            String lib = binPath + <span class="string">&quot;/MathTypeConvert.so&quot;</span>;</span><br><span class="line">            in = MathTypeToLatex.class.getResourceAsStream(&quot;/bin/&quot; + name);</span><br><span class="line">            LOGGER.info(<span class="string">&quot;MathTypeToLatex-&gt;lib:&#123;&#125;,文件流是否存在:&#123;&#125;&quot;</span>, lib, in != <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (in == <span class="keyword">null</span>) &#123;</span><br><span class="line">                in = <span class="keyword">new</span> FileInputStream(lib);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 临时文件路径</span></span><br><span class="line">            String tmpPath = System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + <span class="string">&quot;/&quot;</span> + path;</span><br><span class="line">            <span class="comment">// 创建新文件</span></span><br><span class="line">            File fileOutDic = <span class="keyword">new</span> File(tmpPath);</span><br><span class="line">            <span class="keyword">if</span> (!fileOutDic.exists()) &#123;</span><br><span class="line">                fileOutDic.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            File fileOut = <span class="keyword">new</span> File(tmpPath + name);</span><br><span class="line">            <span class="keyword">if</span> (!fileOut.exists()) &#123;</span><br><span class="line">                fileOut.createNewFile();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            OutputStream out = <span class="keyword">new</span> FileOutputStream(fileOut);</span><br><span class="line">            ByteStreams.copy(in, out);</span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line">            <span class="comment">// 调用load 方法加载</span></span><br><span class="line">            <span class="keyword">return</span> fileOut.getAbsolutePath();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">&quot;loadLib-&gt;加载so 库失败!&#123;&#125;&quot;</span>, e.toString());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">                in.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MathTypeTransformer</span> <span class="keyword">extends</span> <span class="title">Library</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * mathType转latex</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function">String <span class="title">Convert</span><span class="params">(Structure.ByValue filePath)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 测试运行，oleObject-rId6.bin为测试文件，您可以更改为自己的mathType二进制文件，将一份含有MathType的word,更改为.zip结尾解压，在word目录下的embeddings文件中可以找到</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">&quot;MathTypeToLatex-&gt;Java says: about to call Go ..&quot;</span>);</span><br><span class="line">        <span class="keyword">new</span> MathTypeToLatex().loadMathTypeConvert();</span><br><span class="line">        String binPath = MathTypeToLatex.class.getClassLoader().getResource(&quot;bin&quot;).getFile();</span><br><span class="line">        binPath = binPath + <span class="string">&quot;/oleObject-rId6.bin&quot;</span>;</span><br><span class="line">        String total = mathTypeTransformer.Convert(<span class="keyword">new</span> GoString.ByValue(binPath));</span><br><span class="line">        LOGGER.info(<span class="string">&quot;MathTypeToLatex-&gt;Java says: result is &#123;&#125;&quot;</span>, total);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spark.teaching.word.to.question.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.spark.teaching.word.to.question.util.math.MathTypeToLatex;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> : liu heng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> :</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> : 2021-06-27 11:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MathTypeConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MathTypeToLatex <span class="title">getMathTypeToLatex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MathTypeToLatex mathTypeToLatex = <span class="keyword">new</span> MathTypeToLatex();</span><br><span class="line">        mathTypeToLatex.loadMathTypeConvert();</span><br><span class="line">        <span class="keyword">return</span> mathTypeToLatex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行MathTypeToLatex.java中的main函数，得到如下结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java says: result is $$ -1\frac &#123; 3 &#125; &#123; 5 &#125; $$</span><br></pre></td></tr></table></figure><p><strong>恭喜您，相信您看到这里已经成功的执行转mathType为latex公式</strong></p><h3 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h3><ul><li>基于go语言解析mathType为latex-<a href="https://github.com/zhexiao/mtef-go">https://github.com/zhexiao/mtef-go</a></li><li>java调用golang生成动态库-<a href="https://studygolang.com/articles/13646">https://studygolang.com/articles/13646</a></li><li>mac m1交叉编译linux环境.so库-<a href="https://github.com/messense/homebrew-macos-cross-toolchains">https://github.com/messense/homebrew-macos-cross-toolchains</a></li><li>java使用poi读写word中的公式-<a href="https://blog.csdn.net/qq_18219457/article/details/98963136">https://blog.csdn.net/qq_18219457/article/details/98963136</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mathType </tag>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-852. 山脉数组的峰顶索引</title>
      <link href="/2021/06/16/leetcode/leetcode-852-%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E7%9A%84%E5%B3%B0%E9%A1%B6%E7%B4%A2%E5%BC%95/"/>
      <url>/2021/06/16/leetcode/leetcode-852-%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E7%9A%84%E5%B3%B0%E9%A1%B6%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="852-山脉数组的峰顶索引"><a class="markdownIt-Anchor" href="#852-山脉数组的峰顶索引"></a> <a href="https://leetcode-cn.com/problems/peak-index-in-a-mountain-array/">852. 山脉数组的峰顶索引</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">peakIndexInMountainArray</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 二分查找</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = arr.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (i + j)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(arr[mid] &gt; arr[mid-<span class="number">1</span>] &amp;&amp; arr[mid] &gt; arr[mid+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&gt;arr[mid-<span class="number">1</span>])&#123;</span><br><span class="line">                i = mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&lt;arr[mid-<span class="number">1</span>])&#123;</span><br><span class="line">                j = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-814. 二叉树剪枝</title>
      <link href="/2021/06/04/leetcode/leetcode-814-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%89%AA%E6%9E%9D/"/>
      <url>/2021/06/04/leetcode/leetcode-814-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%89%AA%E6%9E%9D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="814-二叉树剪枝"><a class="markdownIt-Anchor" href="#814-二叉树剪枝"></a> <a href="https://leetcode-cn.com/problems/binary-tree-pruning/">814. 二叉树剪枝</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">pruneTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dfs(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            root.left = dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            root.right = dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.val == <span class="number">0</span> &amp;&amp; root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>)&#123;</span><br><span class="line">            root = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-543. 二叉树的直径</title>
      <link href="/2021/06/04/leetcode/leetcode-543-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/"/>
      <url>/2021/06/04/leetcode/leetcode-543-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="543-二叉树的直径"><a class="markdownIt-Anchor" href="#543-二叉树的直径"></a> <a href="https://leetcode-cn.com/problems/diameter-of-binary-tree/">543. 二叉树的直径</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">diameterOfBinaryTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//左边能达到的最大长度+右边能达到的最大长度</span></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            left = Math.max(left, <span class="number">1</span> + dfs(root.left));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            right = Math.max(right, <span class="number">1</span> + dfs(root.right));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        max = Math.max(max, left + right);</span><br><span class="line">        <span class="keyword">return</span> Math.max(left, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-523. 连续的子数组和</title>
      <link href="/2021/06/03/leetcode/leetcode-523-%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/"/>
      <url>/2021/06/03/leetcode/leetcode-523-%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="523-连续的子数组和"><a class="markdownIt-Anchor" href="#523-连续的子数组和"></a> <a href="https://leetcode-cn.com/problems/continuous-subarray-sum/">523. 连续的子数组和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkSubarraySum</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] s = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            s[i] = s[i-<span class="number">1</span>] + nums[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i+<span class="number">1</span>]%k == <span class="number">0</span> &amp;&amp; i &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(map.containsKey(s[i+<span class="number">1</span>]%k))&#123;</span><br><span class="line">                <span class="keyword">int</span> x = map.get(s[i+<span class="number">1</span>]%k);</span><br><span class="line">                <span class="keyword">if</span>(i - x &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                map.put(s[i+<span class="number">1</span>]%k, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-525. 连续数组</title>
      <link href="/2021/06/03/leetcode/leetcode-525-%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84/"/>
      <url>/2021/06/03/leetcode/leetcode-525-%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="525-连续数组"><a class="markdownIt-Anchor" href="#525-连续数组"></a> <a href="https://leetcode-cn.com/problems/contiguous-array/">525. 连续数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMaxLength</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] s = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i-<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">                s[i] = s[i-<span class="number">1</span>] -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                s[i] = s[i-<span class="number">1</span>] + nums[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i+<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">                ans = Math.max(ans, i+<span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(map.containsKey(s[i+<span class="number">1</span>]))&#123;</span><br><span class="line">                ans = Math.max(ans, i - map.get(s[i+<span class="number">1</span>]));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                map.put(s[i+<span class="number">1</span>], i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透视http协议-03http报文</title>
      <link href="/2021/05/31/tcp-ip/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE-03http%E6%8A%A5%E6%96%87/"/>
      <url>/2021/05/31/tcp-ip/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE-03http%E6%8A%A5%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="http报文"><a class="markdownIt-Anchor" href="#http报文"></a> HTTP报文</h1><p><strong>HTTP 协议的请求报文和响应报文的结构基本相同，由三大部分组成：</strong></p><ol><li>起始行（start line）：描述请求或响应的基本信息；</li><li>头部字段集合（header）：使用 key-value 形式更详细地说明报文；</li><li>消息正文（entity）：实际传输的数据，它不一定是纯文本，可以是图片、视频等二进制数据。</li></ol>]]></content>
      
      
      <categories>
          
          <category> tcp-ip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
            <tag> tcp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-342. 4的幂</title>
      <link href="/2021/05/31/leetcode/leetcode-342-4%E7%9A%84%E5%B9%82/"/>
      <url>/2021/05/31/leetcode/leetcode-342-4%E7%9A%84%E5%B9%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="342-4的幂"><a class="markdownIt-Anchor" href="#342-4的幂"></a> <a href="https://leetcode-cn.com/problems/power-of-four/">342. 4的幂</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfFour</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 位运算</span></span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((n&amp;<span class="number">1</span>) != <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> tmp = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(tmp == <span class="number">0</span> &amp;&amp; cnt % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷-P3386 【模板】二分图最大匹配</title>
      <link href="/2021/05/20/acwing/%E6%B4%9B%E8%B0%B7-P3386-%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/"/>
      <url>/2021/05/20/acwing/%E6%B4%9B%E8%B0%B7-P3386-%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.luogu.com.cn/problem/P3386">二分图的最大分配</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Map&lt;Integer, List&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] link = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">boolean</span>[] st = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> e = sc.nextInt();</span><br><span class="line">        link = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[m+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; e; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            List&lt;Integer&gt; list = map.getOrDefault(a, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">            <span class="keyword">if</span> (!list.contains(b))&#123;</span><br><span class="line">                list.add(b);</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(a, list);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 二分图最大分配</span></span><br><span class="line">        System.out.println(distribute());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">distribute</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, List&lt;Integer&gt;&gt; entry : map.entrySet())&#123;</span><br><span class="line">            <span class="keyword">if</span>(dfs(entry.getKey()))&#123;</span><br><span class="line">                Arrays.fill(st, <span class="keyword">false</span>);</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = map.get(a);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> b = list.get(i);</span><br><span class="line">            <span class="keyword">if</span> (st[b])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            st[b] = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(link[b] == <span class="number">0</span> || dfs(link[b]))&#123;</span><br><span class="line">                link[b] = a;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 匈牙利算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-785. 判断二分图</title>
      <link href="/2021/05/19/leetcode/leetcode-785-%E5%88%A4%E6%96%AD%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
      <url>/2021/05/19/leetcode/leetcode-785-%E5%88%A4%E6%96%AD%E4%BA%8C%E5%88%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="785-判断二分图"><a class="markdownIt-Anchor" href="#785-判断二分图"></a> <a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBipartite</span><span class="params">(<span class="keyword">int</span>[][] graph)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 二分图、染色法判别</span></span><br><span class="line">        <span class="keyword">int</span> n = graph.length;</span><br><span class="line">        <span class="keyword">int</span>[] color = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将每个节点都染色一遍</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(color[i] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//如果该节点没有被染色</span></span><br><span class="line">                color[i] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!dfs(i, <span class="number">0</span>, graph, color))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> k, <span class="keyword">int</span>[][] graph, <span class="keyword">int</span>[] color)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt; graph[cur].length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> next = graph[cur][i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(color[next] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 没有被染色</span></span><br><span class="line">                color[next] = <span class="number">3</span> - color[cur];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(color[next] == color[cur])&#123;</span><br><span class="line">                <span class="comment">// 染色冲突</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 已经被染色并且不冲突</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!dfs(next, <span class="number">0</span>, graph, color))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1734. 解码异或后的排列</title>
      <link href="/2021/05/12/leetcode/leetcode-1734-%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%8E%92%E5%88%97/"/>
      <url>/2021/05/12/leetcode/leetcode-1734-%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%8E%92%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1734-解码异或后的排列"><a class="markdownIt-Anchor" href="#1734-解码异或后的排列"></a> <a href="https://leetcode-cn.com/problems/decode-xored-permutation/">1734. 解码异或后的排列</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] decode(<span class="keyword">int</span>[] encoded) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = encoded.length;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n+<span class="number">1</span>; i ++)&#123;</span><br><span class="line">            total ^= i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i = i + <span class="number">2</span>)&#123;</span><br><span class="line">            tmp ^= encoded[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        arr[<span class="number">0</span>] = total ^ tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            arr[i] = arr[i-<span class="number">1</span>] ^ encoded[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1310. 子数组异或查询</title>
      <link href="/2021/05/12/leetcode/leetcode-1310-%E5%AD%90%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2/"/>
      <url>/2021/05/12/leetcode/leetcode-1310-%E5%AD%90%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1310-子数组异或查询"><a class="markdownIt-Anchor" href="#1310-子数组异或查询"></a> <a href="https://leetcode-cn.com/problems/xor-queries-of-a-subarray/">1310. 子数组异或查询</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] xorQueries(<span class="keyword">int</span>[] arr, <span class="keyword">int</span>[][] queries) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = arr.length;</span><br><span class="line">        <span class="keyword">int</span>[] s = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            s[i] = s[i-<span class="number">1</span>] ^ arr[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[queries.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; queries.length ; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span>[] tmp = queries[i];</span><br><span class="line">            <span class="keyword">int</span> a = tmp[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = tmp[<span class="number">1</span>];</span><br><span class="line">            ans[i] = s[b+<span class="number">1</span>] ^ s[a];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud-01 eureka</title>
      <link href="/2021/05/10/springCloud/eureka/spring-cloud-01-eureka/"/>
      <url>/2021/05/10/springCloud/eureka/spring-cloud-01-eureka/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="eureka源码笔记"><a class="markdownIt-Anchor" href="#eureka源码笔记"></a> eureka源码笔记</h2><h3 id="eureka初始化的整体流程"><a class="markdownIt-Anchor" href="#eureka初始化的整体流程"></a> <strong>eureka初始化的整体流程</strong></h3>]]></content>
      
      
      <categories>
          
          <category> spring cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eureka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1720. 解码异或后的数组</title>
      <link href="/2021/05/06/leetcode/leetcode-1720-%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84/"/>
      <url>/2021/05/06/leetcode/leetcode-1720-%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1720-解码异或后的数组"><a class="markdownIt-Anchor" href="#1720-解码异或后的数组"></a> <a href="https://leetcode-cn.com/problems/decode-xored-array/">1720. 解码异或后的数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] decode(<span class="keyword">int</span>[] encoded, <span class="keyword">int</span> first) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = encoded.length;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        arr[<span class="number">0</span>] = first;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> k = encoded[i];</span><br><span class="line">            <span class="keyword">int</span> j = arr[i];</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(k!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> x;</span><br><span class="line">                <span class="keyword">int</span> a = (k &amp; <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">int</span> b = (j &amp; <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(a == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(b == <span class="number">0</span>)&#123;</span><br><span class="line">                        x = <span class="number">1</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        x = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(b == <span class="number">0</span>)&#123;</span><br><span class="line">                        x = <span class="number">0</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        x = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                ans = ans | x &lt;&lt; cnt;</span><br><span class="line">                cnt++;</span><br><span class="line">                k = k &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                j = j &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j != <span class="number">0</span>)&#123;</span><br><span class="line">                ans = ans | (j &lt;&lt; cnt);</span><br><span class="line">            &#125;</span><br><span class="line">            arr[i+<span class="number">1</span>] = ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-938. 二叉搜索树的范围和</title>
      <link href="/2021/04/27/leetcode/leetcode-938-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E8%8C%83%E5%9B%B4%E5%92%8C/"/>
      <url>/2021/04/27/leetcode/leetcode-938-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E8%8C%83%E5%9B%B4%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="938-二叉搜索树的范围和"><a class="markdownIt-Anchor" href="#938-二叉搜索树的范围和"></a> <a href="https://leetcode-cn.com/problems/range-sum-of-bst/">938. 二叉搜索树的范围和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rangeSumBST</span><span class="params">(TreeNode root, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</span><br><span class="line">        dfs(root, low, high);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(root.left, low, high);</span><br><span class="line">        <span class="keyword">if</span>(root.val &gt;=low &amp;&amp; root.val &lt;= high)&#123;</span><br><span class="line">            ans += root.val;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(root.right, low, high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git笔记-关联远程仓库</title>
      <link href="/2021/04/26/git/git%E7%AC%94%E8%AE%B0-%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
      <url>/2021/04/26/git/git%E7%AC%94%E8%AE%B0-%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>git关联远程项目步骤：</p><p>git init</p><p>git remote add origin <a href="https://gitee.com/ZhongHuaShiShan/eshop.git">https://gitee.com/ZhongHuaShiShan/eshop.git</a></p><p>git fetch origin</p><p>git branch --set-upstream-to=origin/master master</p><p>git pull origin master --allow-unrelated-histories</p><p>git push -u origin master</p><p>git暂存：</p><p>git stash --暂存代码</p><p>git stash list  --查看暂存</p><p>git stash apply --恢复暂存</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1011. 在 D 天内送达包裹的能力</title>
      <link href="/2021/04/26/leetcode/leetcode-1011-%E5%9C%A8-D-%E5%A4%A9%E5%86%85%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
      <url>/2021/04/26/leetcode/leetcode-1011-%E5%9C%A8-D-%E5%A4%A9%E5%86%85%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1011-在-d-天内送达包裹的能力"><a class="markdownIt-Anchor" href="#1011-在-d-天内送达包裹的能力"></a> <a href="https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days/">1011. 在 D 天内送达包裹的能力</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">shipWithinDays</span><span class="params">(<span class="keyword">int</span>[] weights, <span class="keyword">int</span> D)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> binarySearch(<span class="number">0</span>, Integer.MAX_VALUE, weights, D);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>[] weights, <span class="keyword">int</span> D)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = l + (r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(isValid(mid, weights, D))&#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(<span class="keyword">int</span> ans, <span class="keyword">int</span>[] weights, <span class="keyword">int</span> D)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> day = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> w2 = ans+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w : weights)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ans - w2 &gt;= w)&#123;</span><br><span class="line">                w2+=w;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(w &lt;= ans)&#123;</span><br><span class="line">                w2 = w;</span><br><span class="line">                day ++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(day &lt;= D)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-897. 递增顺序搜索树</title>
      <link href="/2021/04/25/leetcode/leetcode-897-%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
      <url>/2021/04/25/leetcode/leetcode-897-%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%90%9C%E7%B4%A2%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="897-递增顺序搜索树"><a class="markdownIt-Anchor" href="#897-递增顺序搜索树"></a> <a href="https://leetcode-cn.com/problems/increasing-order-search-tree/">897. 递增顺序搜索树</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    TreeNode r = <span class="keyword">new</span> TreeNode();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">increasingBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        TreeNode res = r;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">return</span> res.right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(root.left);</span><br><span class="line">        TreeNode tmp = <span class="keyword">new</span> TreeNode(root.val);</span><br><span class="line">        r.right = tmp;</span><br><span class="line">        r = tmp;</span><br><span class="line"></span><br><span class="line">        dfs(root.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>377. 组合总和 Ⅳ</title>
      <link href="/2021/04/24/leetcode/leetcode-377-%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-%E2%85%A3/"/>
      <url>/2021/04/24/leetcode/leetcode-377-%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-%E2%85%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="377-组合总和-iv"><a class="markdownIt-Anchor" href="#377-组合总和-iv"></a> <a href="https://leetcode-cn.com/problems/combination-sum-iv/">377. 组合总和 Ⅳ</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[target+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)&#123;</span><br><span class="line">            <span class="keyword">if</span>(num &lt;= target)&#123;</span><br><span class="line">                dp[num] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= target; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i - num &gt;=<span class="number">0</span> )&#123;</span><br><span class="line">                    count += dp[i - num];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i] = Math.max(dp[i], count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[target];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>363. 矩形区域不超过 K 的最大数值和</title>
      <link href="/2021/04/22/leetcode/leetcode-363-%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87-K-%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/"/>
      <url>/2021/04/22/leetcode/leetcode-363-%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87-K-%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="363-矩形区域不超过-k-的最大数值和"><a class="markdownIt-Anchor" href="#363-矩形区域不超过-k-的最大数值和"></a> <a href="https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/">363. 矩形区域不超过 K 的最大数值和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSumSubmatrix</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> row = matrix.length;</span><br><span class="line">        <span class="keyword">int</span> columns = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[row+<span class="number">1</span>][columns+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>] = matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= row; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= columns; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l &lt;= i; l++) &#123;</span><br><span class="line">                    ans += matrix[l-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                dp[i][j] = dp[i][j-<span class="number">1</span>] + ans;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> res = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; columns ; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i2 = i + <span class="number">1</span>; i2 &lt;= row; i2++) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j2 = j + <span class="number">1</span>; j2 &lt;= columns; j2++) &#123;</span><br><span class="line">                        <span class="keyword">int</span> val = dp[i2][j2] - dp[i][j2] - dp[i2][j] + dp[i][j];</span><br><span class="line">                        <span class="keyword">if</span> (val &lt;= k) &#123;</span><br><span class="line">                            res = Math.max(res, val);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-91. 解码方法</title>
      <link href="/2021/04/21/leetcode/leetcode-91-%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95/"/>
      <url>/2021/04/21/leetcode/leetcode-91-%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="91-解码方法"><a class="markdownIt-Anchor" href="#91-解码方法"></a> <a href="https://leetcode-cn.com/problems/decode-ways/">91. 解码方法</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numDecodings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        <span class="keyword">if</span> (s.startsWith(<span class="string">&quot;0&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> dp[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (s.charAt(<span class="number">1</span>) == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (Integer.valueOf(s.substring(<span class="number">0</span>, <span class="number">2</span>)) &gt; <span class="number">26</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                dp[<span class="number">2</span>] = dp[<span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (Integer.valueOf(s.substring(<span class="number">0</span>, <span class="number">2</span>)) &gt; <span class="number">26</span>) &#123;</span><br><span class="line">                    dp[<span class="number">2</span>] = dp[<span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[<span class="number">2</span>] = dp[<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                String str = s.substring(j - <span class="number">2</span>, j);</span><br><span class="line">                <span class="keyword">if</span> (s.charAt(j - <span class="number">1</span>) == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (Integer.valueOf(str) &lt;= <span class="number">26</span> &amp;&amp; !str.startsWith(<span class="string">&quot;0&quot;</span>)) &#123;</span><br><span class="line">                        dp[j] = Math.max(dp[j], dp[j - <span class="number">2</span>]);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.startsWith(<span class="string">&quot;0&quot;</span>) || Integer.valueOf(str) &gt; <span class="number">26</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.charAt(j - <span class="number">1</span>) != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                    dp[j] = Math.max(dp[j], dp[j - <span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">if</span> (Integer.valueOf(str) &lt;= <span class="number">26</span> &amp;&amp; !str.startsWith(<span class="string">&quot;0&quot;</span>)) &#123;</span><br><span class="line">                        dp[j] = Math.max(dp[j], dp[j - <span class="number">2</span>] + dp[j - <span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> dp[n];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-216.组合总和III</title>
      <link href="/2021/04/19/leetcode/leetcode-216%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8CIII/"/>
      <url>/2021/04/19/leetcode/leetcode-216%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8CIII/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/combination-sum-iii/">leetcode-216.组合总和III</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum3(<span class="keyword">int</span> k, <span class="keyword">int</span> n) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        dfs(arr, <span class="number">0</span>, k, n);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> begin, <span class="keyword">int</span> k, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> &amp;&amp; k == <span class="number">0</span>)&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(ans));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (k &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = begin; i &lt; arr.length; i++) &#123;</span><br><span class="line">            ans.add(arr[i]);</span><br><span class="line">            dfs(arr, i + <span class="number">1</span>, k - <span class="number">1</span>, n - arr[i]);</span><br><span class="line">            ans.remove(ans.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-332.重新安排行程</title>
      <link href="/2021/04/19/leetcode/leetcode-332%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E8%A1%8C%E7%A8%8B/"/>
      <url>/2021/04/19/leetcode/leetcode-332%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E8%A1%8C%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/reconstruct-itinerary/">leetcode-332.重新安排行程</a></p><p><strong>原始思路</strong> <em><strong>---------------------------没做过–超时了,看完图再做！！！！！！！！！</strong></em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;List&lt;String&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;String&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">//记录起始位置</span></span><br><span class="line">    List&lt;String&gt; strs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">findItinerary</span><span class="params">(List&lt;List&lt;String&gt;&gt; tickets)</span> </span>&#123;</span><br><span class="line">        strs.add(<span class="string">&quot;JFK&quot;</span>);</span><br><span class="line">        dfs(<span class="number">0</span>, tickets, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        Collections.sort(result, <span class="keyword">new</span> Comparator&lt;List&lt;String&gt;&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(List&lt;String&gt; o1, List&lt;String&gt; o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; o1.size(); i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!o1.get(i).equals(o2.get(i)))&#123;</span><br><span class="line">                        <span class="keyword">return</span> o1.get(i).compareTo(o2.get(i));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result.get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> begin, List&lt;List&lt;String&gt;&gt; tickets, List&lt;String&gt; preTicket)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (begin &gt;= tickets.size())&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (strs.size() == tickets.size() + <span class="number">1</span>)&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;String&gt;(strs));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = begin; i &lt; tickets.size(); i++)&#123;</span><br><span class="line">            <span class="comment">//如果后面的全部正确也不满足,则return</span></span><br><span class="line">            <span class="keyword">if</span>(begin &gt; strs.size())&#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (strs.get(strs.size() - <span class="number">1</span>).equals(tickets.get(i).get(<span class="number">0</span>)))&#123;</span><br><span class="line">                <span class="comment">//已经用过的ticket不能再用</span></span><br><span class="line">                <span class="keyword">if</span> (set.contains(tickets.get(i).toString() + i))&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    set.add(tickets.get(i).toString() + i);</span><br><span class="line">                &#125;</span><br><span class="line">                tmp.add(tickets.get(i).get(<span class="number">0</span>));</span><br><span class="line">                strs.add(tickets.get(i).get(<span class="number">1</span>));</span><br><span class="line">                dfs(begin, tickets, tickets.get(i));</span><br><span class="line">                tmp.remove(tmp.size() -<span class="number">1</span>);</span><br><span class="line">                strs.remove(strs.size() -<span class="number">1</span>);</span><br><span class="line">                set.remove(tickets.get(i).toString() + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-208. 实现 Trie (前缀树)</title>
      <link href="/2021/04/14/leetcode/leetcode-208-%E5%AE%9E%E7%8E%B0-Trie-%E5%89%8D%E7%BC%80%E6%A0%91/"/>
      <url>/2021/04/14/leetcode/leetcode-208-%E5%AE%9E%E7%8E%B0-Trie-%E5%89%8D%E7%BC%80%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="208-实现-trie-前缀树"><a class="markdownIt-Anchor" href="#208-实现-trie-前缀树"></a> <a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Trie[] children;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isEnd;</span><br><span class="line">    <span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Trie</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        children = <span class="keyword">new</span> Trie[<span class="number">26</span>];</span><br><span class="line">        isEnd = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Inserts a word into the trie. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">        Trie node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch = word.charAt(i);</span><br><span class="line">            <span class="keyword">int</span> idx = ch - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (node.children[idx] == <span class="keyword">null</span>) &#123;</span><br><span class="line">                node.children[idx] = <span class="keyword">new</span> Trie();</span><br><span class="line">            &#125;</span><br><span class="line">            node = node.children[idx];</span><br><span class="line">        &#125;</span><br><span class="line">        node.isEnd = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Returns if the word is in the trie. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">search</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">        Trie node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; word.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch = word.charAt(i);</span><br><span class="line">            <span class="keyword">int</span> idx = ch - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (node.children[idx] == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            node = node.children[idx];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> node.isEnd;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Returns if there is any word in the trie that starts with the given prefix. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">startsWith</span><span class="params">(String prefix)</span> </span>&#123;</span><br><span class="line">        Trie node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; prefix.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch = prefix.charAt(i);</span><br><span class="line">            <span class="keyword">int</span> idx = ch - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (node.children[idx] == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            node = node.children[idx];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="/2021/04/13/pattern-design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2021/04/13/pattern-design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="设计模式"><a class="markdownIt-Anchor" href="#设计模式"></a> 设计模式</h2><p>工厂方式模式：</p><p>抽象工厂模式：易于扩展，不符合开闭原则 AbstractFactoryBean</p><p>单例模式：</p><ul><li>饿汉式</li><li>懒汉式</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> pattern design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker笔记</title>
      <link href="/2021/04/13/docker/docker%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/04/13/docker/docker%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="docker笔记"><a class="markdownIt-Anchor" href="#docker笔记"></a> docker笔记</h1>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-783. 二叉搜索树节点最小距离</title>
      <link href="/2021/04/13/leetcode/leetcode-783-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%8A%82%E7%82%B9%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB/"/>
      <url>/2021/04/13/leetcode/leetcode-783-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%8A%82%E7%82%B9%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="783-二叉搜索树节点最小距离"><a class="markdownIt-Anchor" href="#783-二叉搜索树节点最小距离"></a> <a href="https://leetcode-cn.com/problems/minimum-distance-between-bst-nodes/">783. 二叉搜索树节点最小距离</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = Integer.MAX_VALUE;</span><br><span class="line">    List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDiffInBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">            ans = Math.min(ans, list.get(i) - list.get(i-<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans == Integer.MAX_VALUE ? <span class="number">0</span> : ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        list.add(root.val);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-95. 费解的开关</title>
      <link href="/2021/04/12/acwing/acwing-95-%E8%B4%B9%E8%A7%A3%E7%9A%84%E5%BC%80%E5%85%B3/"/>
      <url>/2021/04/12/acwing/acwing-95-%E8%B4%B9%E8%A7%A3%E7%9A%84%E5%BC%80%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/97/">acwing-95. 费解的开关</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[][] backup = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)&#123;</span><br><span class="line">                String str = sc.next();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; str.length(); j++)&#123;</span><br><span class="line">                    arr[k][j] = Integer.valueOf(str.charAt(j)+<span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 方法调用</span></span><br><span class="line">            System.out.println(work(arr));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span>[][] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = Integer.MAX_VALUE &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 遍历第一行的25种状态</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span> &lt;&lt; <span class="number">5</span>; i ++)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//对数组进行备份</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k ++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> q =<span class="number">0</span>; q &lt; <span class="number">5</span>; q++)&#123;</span><br><span class="line">                    backup[k][q] = arr[k][q];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 遍历第一行开关</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)&#123;</span><br><span class="line">                <span class="comment">// 第j位为1代表我们按下了开关</span></span><br><span class="line">                <span class="keyword">if</span>((i &gt;&gt; j &amp; <span class="number">1</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">                    res++;</span><br><span class="line">                    turn(backup, <span class="number">0</span>, j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 遍历剩下的四行开关</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(backup[k][j] == <span class="number">0</span>)&#123;</span><br><span class="line">                        res++;</span><br><span class="line">                        turn(backup, k+<span class="number">1</span>, j);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//遍历最后一个行,看是否已全为1</span></span><br><span class="line">            <span class="keyword">boolean</span> bool = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(backup[<span class="number">4</span>][j] == <span class="number">0</span>)&#123;</span><br><span class="line">                    bool = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(bool)&#123;</span><br><span class="line">                ans = Math.min(ans, res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans &gt; <span class="number">6</span> ? -<span class="number">1</span> : ans;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] dx = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] dy = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span>[][] arr, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = x + dx[k];</span><br><span class="line">            <span class="keyword">int</span> b = y + dy[k];</span><br><span class="line">            <span class="keyword">if</span>(a &gt;= <span class="number">0</span> &amp;&amp; a &lt; <span class="number">5</span> &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt; <span class="number">5</span>)&#123;</span><br><span class="line">                arr[a][b] = arr[a][b] == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-179. 最大数</title>
      <link href="/2021/04/12/leetcode/leetcode-179-%E6%9C%80%E5%A4%A7%E6%95%B0/"/>
      <url>/2021/04/12/leetcode/leetcode-179-%E6%9C%80%E5%A4%A7%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="179-最大数"><a class="markdownIt-Anchor" href="#179-最大数"></a> <a href="https://leetcode-cn.com/problems/largest-number/">179. 最大数</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">largestNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        Queue&lt;Integer&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1,o2)-&gt;&#123;</span><br><span class="line">            String num1 = <span class="string">&quot;&quot;</span> + o1 + o2;</span><br><span class="line">            String num2 = <span class="string">&quot;&quot;</span> + o2 + o1;</span><br><span class="line">            <span class="keyword">return</span> num2.compareTo(num1);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            queue.offer(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            buffer.append(queue.poll());</span><br><span class="line">        &#125;</span><br><span class="line">        String ans = buffer.toString();</span><br><span class="line">        <span class="keyword">if</span>(ans.startsWith(<span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 17.21. 直方图的水量</title>
      <link href="/2021/04/09/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-21-%E7%9B%B4%E6%96%B9%E5%9B%BE%E7%9A%84%E6%B0%B4%E9%87%8F/"/>
      <url>/2021/04/09/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-21-%E7%9B%B4%E6%96%B9%E5%9B%BE%E7%9A%84%E6%B0%B4%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="面试题-1721-直方图的水量"><a class="markdownIt-Anchor" href="#面试题-1721-直方图的水量"></a> <a href="https://leetcode-cn.com/problems/volume-of-histogram-lcci/">面试题 17.21. 直方图的水量</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">trap</span><span class="params">(<span class="keyword">int</span>[] height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = height.length;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化左边最大</span></span><br><span class="line">        <span class="keyword">int</span>[] leftMax = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        leftMax[<span class="number">0</span>] = height[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            leftMax[i] = Math.max(leftMax[i-<span class="number">1</span>], height[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化右边最大</span></span><br><span class="line">        <span class="keyword">int</span>[] rightMax = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        rightMax[n-<span class="number">1</span>] = height[n-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">            rightMax[i] = Math.max(rightMax[i+<span class="number">1</span>], height[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            ans = ans + Math.min(leftMax[i], rightMax[i]) - height[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-154. 寻找旋转排序数组中的最小值 II</title>
      <link href="/2021/04/09/leetcode/leetcode-154-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC-II/"/>
      <url>/2021/04/09/leetcode/leetcode-154-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="154-寻找旋转排序数组中的最小值-ii"><a class="markdownIt-Anchor" href="#154-寻找旋转排序数组中的最小值-ii"></a> <a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">154. 寻找旋转排序数组中的最小值 II</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (i+j)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]&gt;nums[j])&#123;</span><br><span class="line">                i = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == nums[j] &amp;&amp; nums[i] &gt;= nums[j])&#123;</span><br><span class="line">                i = i + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == nums[j] &amp;&amp; nums[i] &lt;nums[j])&#123;</span><br><span class="line">                j = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                j = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-153. 寻找旋转排序数组中的最小值</title>
      <link href="/2021/04/08/leetcode/leetcode-153-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/"/>
      <url>/2021/04/08/leetcode/leetcode-153-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="153-寻找旋转排序数组中的最小值"><a class="markdownIt-Anchor" href="#153-寻找旋转排序数组中的最小值"></a> <a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt;= j)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> mid = (i+j)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; nums[j])&#123;</span><br><span class="line">                i = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                j = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-81. 搜索旋转排序数组 II</title>
      <link href="/2021/04/07/leetcode/leetcode-81-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84-II/"/>
      <url>/2021/04/07/leetcode/leetcode-81-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="81-搜索旋转排序数组-ii"><a class="markdownIt-Anchor" href="#81-搜索旋转排序数组-ii"></a> <a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 比较前后两个数</span></span><br><span class="line">        <span class="keyword">int</span> frist = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> last = nums[nums.length-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(target == frist || target == last)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(target &gt; frist)&#123;</span><br><span class="line">            <span class="comment">// 从左到右查找</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] == target)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] &lt; nums[i-<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(target &lt; last)&#123;</span><br><span class="line">            <span class="comment">// 从右向左查找</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = nums.length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] == target)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] &gt; nums[i+<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-781. 森林中的兔子</title>
      <link href="/2021/04/06/leetcode/leetcode-781-%E6%A3%AE%E6%9E%97%E4%B8%AD%E7%9A%84%E5%85%94%E5%AD%90/"/>
      <url>/2021/04/06/leetcode/leetcode-781-%E6%A3%AE%E6%9E%97%E4%B8%AD%E7%9A%84%E5%85%94%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="781-森林中的兔子"><a class="markdownIt-Anchor" href="#781-森林中的兔子"></a> <a href="https://leetcode-cn.com/problems/rabbits-in-forest/">781. 森林中的兔子</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numRabbits</span><span class="params">(<span class="keyword">int</span>[] answers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(answers.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(answers);</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; answers.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k == <span class="number">0</span>)&#123;</span><br><span class="line">                ans += answers[i] + <span class="number">1</span>;</span><br><span class="line">                k = answers[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(answers[i] == answers[i-<span class="number">1</span>] &amp;&amp; k &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                k--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(answers[i] != answers[i-<span class="number">1</span>])&#123;</span><br><span class="line">                ans += answers[i] + <span class="number">1</span>;</span><br><span class="line">                k = answers[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-80. 删除有序数组中的重复项 II</title>
      <link href="/2021/04/06/leetcode/leetcode-80-%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9-II/"/>
      <url>/2021/04/06/leetcode/leetcode-80-%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="80-删除有序数组中的重复项-ii"><a class="markdownIt-Anchor" href="#80-删除有序数组中的重复项-ii"></a> <a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/">80. 删除有序数组中的重复项 II</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> last = nums[nums.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">2</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] &lt; nums[i-<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nums[i-<span class="number">1</span>] == nums[i] &amp;&amp; nums[i] == nums[i- <span class="number">2</span>])&#123;</span><br><span class="line">                move(nums, i);</span><br><span class="line">                <span class="keyword">if</span>(nums[nums.length - <span class="number">1</span>] == last)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移动数组</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> idx)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = nums[idx];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = idx + <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            nums[i - <span class="number">1</span>] = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        nums[nums.length - <span class="number">1</span>] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-94. 递归实现排列型枚举</title>
      <link href="/2021/04/01/acwing/acwing-94-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8E%92%E5%88%97%E5%9E%8B%E6%9E%9A%E4%B8%BE/"/>
      <url>/2021/04/01/acwing/acwing-94-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8E%92%E5%88%97%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/96/">acwing-94. 递归实现排列型枚举</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> BufferedWriter log = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(System.out));</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = n;</span><br><span class="line">        </span><br><span class="line">        dfs(<span class="number">1</span>, n, m, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(List&lt;Integer&gt; list : res)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">                log.write(String.valueOf(list.get(i)));</span><br><span class="line">                <span class="keyword">if</span>(i != list.size()-<span class="number">1</span>)&#123;</span><br><span class="line">                    log.write(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            log.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        log.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n, <span class="keyword">int</span> m, List&lt;Integer&gt; ans)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ans.size() == m)&#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList&lt;&gt;(ans));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(set.contains(i))&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans.add(i);</span><br><span class="line">            set.add(i);</span><br><span class="line">            dfs(cur, n, m, ans);</span><br><span class="line">            ans.remove(ans.size()-<span class="number">1</span>);</span><br><span class="line">            set.remove(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-93. 递归实现组合型枚举</title>
      <link href="/2021/04/01/acwing/acwing-93-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E7%BB%84%E5%90%88%E5%9E%8B%E6%9E%9A%E4%B8%BE/"/>
      <url>/2021/04/01/acwing/acwing-93-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E7%BB%84%E5%90%88%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/95/">acwing-93. 递归实现组合型枚举</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        dfs(<span class="number">1</span>, n, m, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(List&lt;Integer&gt; list : res)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">                System.out.print(list.get(i));</span><br><span class="line">                <span class="keyword">if</span>(i != list.size()-<span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n, <span class="keyword">int</span> m, List&lt;Integer&gt; ans)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ans.size() == m &amp;&amp; !res.contains(ans))&#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList&lt;&gt;(ans));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i &lt;= n; i++)&#123;</span><br><span class="line">            ans.add(i);</span><br><span class="line">            dfs(i+<span class="number">1</span>, n, m, ans);</span><br><span class="line">            ans.remove(ans.size()-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-92. 递归实现指数型枚举</title>
      <link href="/2021/04/01/acwing/acwing-92-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8C%87%E6%95%B0%E5%9E%8B%E6%9E%9A%E4%B8%BE/"/>
      <url>/2021/04/01/acwing/acwing-92-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8C%87%E6%95%B0%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/94/">acwing-92. 递归实现指数型枚举</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        dfs(<span class="number">1</span>, n, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(List&lt;Integer&gt; list : res)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">                System.out.print(list.get(i));</span><br><span class="line">                <span class="keyword">if</span>(i != list.size()-<span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n, List&lt;Integer&gt; ans)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ans.size() &gt; <span class="number">0</span> &amp;&amp; !res.contains(ans))&#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(ans));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i &lt;= n; i++)&#123;</span><br><span class="line">            ans.add(i);</span><br><span class="line">            dfs(i + <span class="number">1</span>, n, ans);</span><br><span class="line">            ans.remove(ans.size()-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-91. 最短Hamilton路径</title>
      <link href="/2021/04/01/acwing/acwing-91-%E6%9C%80%E7%9F%ADHamilton%E8%B7%AF%E5%BE%84/"/>
      <url>/2021/04/01/acwing/acwing-91-%E6%9C%80%E7%9F%ADHamilton%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/93/">acwing-91. 最短Hamilton路径</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] weight = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 写入数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                weight[i][j] = sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(hamilton(n, weight));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hamilton</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] weight)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义点到点的边距</span></span><br><span class="line">        <span class="keyword">int</span>[][] dist = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>&lt;&lt;n][n];</span><br><span class="line">        <span class="comment">// 初始化边距</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; n); i++)&#123;</span><br><span class="line">            Arrays.fill(dist[i], Integer.MAX_VALUE &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 还没出发则为0</span></span><br><span class="line">        dist[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; n); i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="comment">// 到达j这个点的最短距离</span></span><br><span class="line">                <span class="keyword">if</span>((i&gt;&gt;j &amp; <span class="number">1</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">                        <span class="comment">// 从k这个点走到j这个点</span></span><br><span class="line">                        <span class="keyword">if</span> ((i &gt;&gt; k &amp; <span class="number">1</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">                            dist[i][j] = Math.min(dist[i][j], dist[i-(<span class="number">1</span>&lt;&lt;j)][k] + weight[k][j]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dist[(<span class="number">1</span>&lt;&lt;n) - <span class="number">1</span>][n-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1006. 笨阶乘</title>
      <link href="/2021/04/01/leetcode/leetcode-1006-%E7%AC%A8%E9%98%B6%E4%B9%98/"/>
      <url>/2021/04/01/leetcode/leetcode-1006-%E7%AC%A8%E9%98%B6%E4%B9%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1006-笨阶乘"><a class="markdownIt-Anchor" href="#1006-笨阶乘"></a> <a href="https://leetcode-cn.com/problems/clumsy-factorial/">1006. 笨阶乘</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">clumsy</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> k = N % <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> m = N / <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> bool = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (m &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = Math.floorDiv(N * (N - <span class="number">1</span>), N - <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">int</span> b = N - <span class="number">3</span>;</span><br><span class="line">            ans -= a;</span><br><span class="line">            <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                ans = Math.abs(ans);</span><br><span class="line">                bool = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans += b;</span><br><span class="line"></span><br><span class="line">            N = N - <span class="number">4</span>;</span><br><span class="line">            m--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">3</span>) &#123;</span><br><span class="line">            ans -= k * (k - <span class="number">1</span>)/(k - <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                ans = Math.abs(ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">2</span>) &#123;</span><br><span class="line">            ans -= k * (k - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                ans = Math.abs(ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            ans -= k;</span><br><span class="line">            <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                ans = Math.abs(ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-90. 64位整数乘法</title>
      <link href="/2021/03/31/acwing/acwing-90-64%E4%BD%8D%E6%95%B4%E6%95%B0%E4%B9%98%E6%B3%95/"/>
      <url>/2021/03/31/acwing/acwing-90-64%E4%BD%8D%E6%95%B4%E6%95%B0%E4%B9%98%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/92/">acwing-90. 64位整数乘法</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> a = sc.nextLong();</span><br><span class="line">        <span class="keyword">long</span> b = sc.nextLong();</span><br><span class="line">        <span class="keyword">long</span> p = sc.nextLong();</span><br><span class="line">        System.out.println(multiply(a, b, p));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">multiply</span><span class="params">(<span class="keyword">long</span> a, <span class="keyword">long</span> b, <span class="keyword">long</span> p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> ans = <span class="number">0</span> % p;</span><br><span class="line">        <span class="keyword">while</span>(b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((b&amp;<span class="number">1</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">                ans = (ans + a) % p;</span><br><span class="line">            &#125;</span><br><span class="line">            a = a * <span class="number">2</span> % p;</span><br><span class="line">            b = b &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-190. 颠倒二进制位</title>
      <link href="/2021/03/31/leetcode/leetcode-190-%E9%A2%A0%E5%80%92%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D/"/>
      <url>/2021/03/31/leetcode/leetcode-190-%E9%A2%A0%E5%80%92%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="190-颠倒二进制位"><a class="markdownIt-Anchor" href="#190-颠倒二进制位"></a> <a href="https://leetcode-cn.com/problems/reverse-bits/">190. 颠倒二进制位</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// you need treat n as an unsigned value</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">reverseBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">            ans = ans &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            ans = (n&amp;<span class="number">1</span>) | ans;</span><br><span class="line">            n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-90. 子集 II</title>
      <link href="/2021/03/31/leetcode/leetcode-90-%E5%AD%90%E9%9B%86-II/"/>
      <url>/2021/03/31/leetcode/leetcode-90-%E5%AD%90%E9%9B%86-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="90-子集-ii"><a class="markdownIt-Anchor" href="#90-子集-ii"></a> <a href="https://leetcode-cn.com/problems/subsets-ii/">90. 子集 II</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Set&lt;List&lt;Integer&gt;&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; subsetsWithDup(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        dfs(<span class="number">0</span>, nums, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span>[] nums, List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!set.contains(list))&#123;</span><br><span class="line">            List&lt;Integer&gt; copy = <span class="keyword">new</span> ArrayList&lt;&gt;(list);</span><br><span class="line">            set.add(copy);</span><br><span class="line">            ans.add(copy);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = cur; i &lt; nums.length; i++) &#123;</span><br><span class="line">            list.add(nums[i]);</span><br><span class="line">            dfs(i+<span class="number">1</span>, nums, list);</span><br><span class="line">            list.remove(list.size()-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-89. a^b</title>
      <link href="/2021/03/30/acwing/acwing-89-a-b/"/>
      <url>/2021/03/30/acwing/acwing-89-a-b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/91/">acwing-89. a^b</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> p = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        System.out.println(power(a, b, p));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">long</span> a, <span class="keyword">long</span> b, <span class="keyword">long</span> p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> ans = <span class="number">1</span> % p;</span><br><span class="line">        <span class="keyword">while</span>(b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((b&amp;<span class="number">1</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">                ans = (ans * a) % p;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            a = (a * a) % p;</span><br><span class="line">            b = b &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1046. 最后一块石头的重量</title>
      <link href="/2021/03/30/leetcode/leetcode-1046-%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F/"/>
      <url>/2021/03/30/leetcode/leetcode-1046-%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1046-最后一块石头的重量"><a class="markdownIt-Anchor" href="#1046-最后一块石头的重量"></a> <a href="https://leetcode-cn.com/problems/last-stone-weight/">1046. 最后一块石头的重量</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastStoneWeight</span><span class="params">(<span class="keyword">int</span>[] stones)</span> </span>&#123;</span><br><span class="line">        Queue&lt;Integer&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1,o2)-&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> o2.compareTo(o1);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w :stones)&#123;</span><br><span class="line">            queue.offer(w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (queue.size() &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> w1 = queue.poll();</span><br><span class="line">            <span class="keyword">int</span> w2 = queue.poll();</span><br><span class="line">            <span class="keyword">if</span> (w1 == w2)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> r = Math.abs(w1 - w2);</span><br><span class="line">            queue.offer(r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue.isEmpty() ? <span class="number">0</span> : queue.poll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1190. 反转每对括号间的子串</title>
      <link href="/2021/03/26/leetcode/leetcode-1190-%E5%8F%8D%E8%BD%AC%E6%AF%8F%E5%AF%B9%E6%8B%AC%E5%8F%B7%E9%97%B4%E7%9A%84%E5%AD%90%E4%B8%B2/"/>
      <url>/2021/03/26/leetcode/leetcode-1190-%E5%8F%8D%E8%BD%AC%E6%AF%8F%E5%AF%B9%E6%8B%AC%E5%8F%B7%E9%97%B4%E7%9A%84%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1190-反转每对括号间的子串"><a class="markdownIt-Anchor" href="#1190-反转每对括号间的子串"></a> <a href="https://leetcode-cn.com/problems/reverse-substrings-between-each-pair-of-parentheses/">1190. 反转每对括号间的子串</a></h4><p>优化解法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">reverseParentheses</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            Character ch = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">                StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                <span class="comment">// 此时将栈（括号前的取出</span></span><br><span class="line">                Character tmp;</span><br><span class="line">                <span class="keyword">while</span>((tmp = stack.pop()) != <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">                    sb.append(tmp);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; sb.length(); k++)&#123;</span><br><span class="line">                    stack.push(sb.charAt(k));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                stack.push(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer ans = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            ans.append(stack.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reverse().toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原始解法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">reverseParentheses</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> bool = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.charAt(i) == <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                bool = <span class="keyword">true</span>;</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.charAt(i) == <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">                bool = <span class="keyword">false</span>;</span><br><span class="line">                count--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">0</span> &amp;&amp; s.charAt(i) != <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">                sb.append(s.charAt(i));</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                    <span class="comment">// 入栈</span></span><br><span class="line">                    stack.add(s.charAt(i));</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 将最近的&#x27;(&#x27;上的字符出栈</span></span><br><span class="line">                    String str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">while</span> (!stack.isEmpty() &amp;&amp; stack.peek() != <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                        str = str + stack.pop();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (!stack.isEmpty())&#123;</span><br><span class="line">                        stack.pop();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (stack.isEmpty()) &#123;</span><br><span class="line">                        sb.append(str);</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; str.length(); j++) &#123;</span><br><span class="line">                            stack.add(str.charAt(j));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bool = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-71. 简化路径</title>
      <link href="/2021/03/26/leetcode/leetcode-71-%E7%AE%80%E5%8C%96%E8%B7%AF%E5%BE%84/"/>
      <url>/2021/03/26/leetcode/leetcode-71-%E7%AE%80%E5%8C%96%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="71-简化路径"><a class="markdownIt-Anchor" href="#71-简化路径"></a> <a href="https://leetcode-cn.com/problems/simplify-path/">71. 简化路径</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">simplifyPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        Stack&lt;String&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        String[] arr = path.split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(String s : arr)&#123;</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;.&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;..&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!stack.isEmpty())&#123;</span><br><span class="line">                    stack.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stack.add(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Stack&lt;String&gt; stack2 = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            stack2.add(stack.pop());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (!stack2.isEmpty()) &#123;</span><br><span class="line">            ans += <span class="string">&quot;/&quot;</span> + stack2.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans == <span class="string">&quot;&quot;</span> ? <span class="string">&quot;/&quot;</span> : ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-83. 删除排序链表中的重复元素</title>
      <link href="/2021/03/26/leetcode/leetcode-83-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/"/>
      <url>/2021/03/26/leetcode/leetcode-83-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="83-删除排序链表中的重复元素"><a class="markdownIt-Anchor" href="#83-删除排序链表中的重复元素"></a> <a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/">83. 删除排序链表中的重复元素</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode pre = head;</span><br><span class="line">        <span class="keyword">while</span>(pre!=<span class="keyword">null</span> &amp;&amp; pre.next != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pre.next.val == pre.val)&#123;</span><br><span class="line">                pre.next = pre.next.next;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pre = pre.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-54. 螺旋矩阵</title>
      <link href="/2021/03/19/leetcode/leetcode-54-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/"/>
      <url>/2021/03/19/leetcode/leetcode-54-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="54-螺旋矩阵"><a class="markdownIt-Anchor" href="#54-螺旋矩阵"></a> <a href="https://leetcode-cn.com/problems/spiral-matrix/">54. 螺旋矩阵</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">spiralOrder</span><span class="params">(<span class="keyword">int</span>[][] matrix)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> m = matrix.length;</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="comment">// 定义是否被访问过</span></span><br><span class="line">        <span class="keyword">boolean</span>[][] visit = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">        <span class="comment">// 定义四个方向</span></span><br><span class="line">        <span class="keyword">int</span>[][] direction = <span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,-<span class="number">1</span>&#125;,&#123;-<span class="number">1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">int</span> total = m*n;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 定义行和列</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; total; k++)&#123;</span><br><span class="line">            ans.add(matrix[i][j]);</span><br><span class="line">            visit[i][j] = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">int</span> nextI = i + direction[index][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> nextJ = j + direction[index][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(nextI&lt;<span class="number">0</span>||nextI&gt;=m||nextJ&lt;<span class="number">0</span>||nextJ&gt;=n||visit[nextI][nextJ])&#123;</span><br><span class="line">                index = (index + <span class="number">1</span>)%<span class="number">4</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i = i + direction[index][<span class="number">0</span>];</span><br><span class="line">            j = j + direction[index][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-剑指 Offer 13. 机器人的运动范围</title>
      <link href="/2021/03/19/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-13-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4/"/>
      <url>/2021/03/19/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-13-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="剑指-offer-13-机器人的运动范围"><a class="markdownIt-Anchor" href="#剑指-offer-13-机器人的运动范围"></a> <a href="https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/">剑指 Offer 13. 机器人的运动范围</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">movingCount</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>, m, n, k);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (judge(i, j, m, n, k))&#123;</span><br><span class="line">            <span class="keyword">if</span> (!set.contains(i * n + j))&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                set.add(i * n + j);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            dfs(i + <span class="number">1</span>, j, m, n, k);</span><br><span class="line">            dfs(i, j + <span class="number">1</span>, m, n, k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m || j &lt; <span class="number">0</span> || j &gt;= n) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (getNum(i, j) &gt; k) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNum</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (m != <span class="number">0</span>) &#123;</span><br><span class="line">            num += m % <span class="number">10</span>;</span><br><span class="line">            m = m / <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">            num += n % <span class="number">10</span>;</span><br><span class="line">            n = n / <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-146. LRU 缓存机制</title>
      <link href="/2021/03/12/leetcode/leetcode-146-LRU-%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/"/>
      <url>/2021/03/12/leetcode/leetcode-146-LRU-%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="146-lru-缓存机制"><a class="markdownIt-Anchor" href="#146-lru-缓存机制"></a> <a href="https://leetcode-cn.com/problems/lru-cache/">146. LRU 缓存机制</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> capacity = <span class="number">0</span>;</span><br><span class="line">    LinkedList queue = <span class="keyword">new</span> LinkedList&lt;Integer&gt;();</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!map.containsKey(key))&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        queue.remove((Integer) key);</span><br><span class="line">        queue.offerFirst(key);</span><br><span class="line">        <span class="keyword">return</span> map.get(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(key))&#123;</span><br><span class="line">            queue.remove((Integer) key);</span><br><span class="line">            queue.offerFirst(key);</span><br><span class="line">            map.put(key, value);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(queue.size() == capacity)&#123;</span><br><span class="line">            map.remove(queue.peekLast());</span><br><span class="line">            queue.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">        queue.offerFirst(key);</span><br><span class="line">        map.put(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记08-sql查询到提交事务流程复习</title>
      <link href="/2021/03/10/mysql/mysql%E7%AC%94%E8%AE%B008-sql%E6%9F%A5%E8%AF%A2%E5%88%B0%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%A4%8D%E4%B9%A0/"/>
      <url>/2021/03/10/mysql/mysql%E7%AC%94%E8%AE%B008-sql%E6%9F%A5%E8%AF%A2%E5%88%B0%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sql查询到提交事务流程复习"><a class="markdownIt-Anchor" href="#sql查询到提交事务流程复习"></a> sql查询到提交事务流程复习</h2><p><strong>问题综述：</strong></p><ol><li><p>undo log和redo log了解过吗？它们的作用分别是什么？</p></li><li><p>redo log是如何保证事务不丢失的？</p></li><li><p>mysql的事务是先提交还是先刷盘？</p></li><li><p>更新操作为什么不直接更新磁盘反而设计这样一个复杂的InnoDB存储引擎来完成？</p></li></ol><p>Mysql架构图和InnoDB存储引擎图</p><img src="/images/image-20210310095750339.png" alt="image-20210310095750339"  /><p><strong>流程图解析</strong></p><ol><li><p>前台用户各种操作触发后台sql执行</p><p>​通过web项目中自带的数据库连接池：如dbcp、c3p0、druid等，与数据库服务器的数据库连接池建立网络连接；数据库连接池中的线程监听到请求后，将接收到的sql语句通过SQL接口响应给查询解析器，查询解析器将sql按照sql的语法解析出查询哪个表的哪些字段，查询条件是啥；再通过查询优化器处理，选择最优的该sq最优的一套执行计划，然后执行器负责调用存储引擎的一系列接口，执行该计划而完成整个sql语句的执行。</p></li><li><p>InnoDB存储引擎-缓冲池中完成更新的基本操作<br />具体执行这些执行计划得要存储引擎来完成，如图所示，首次更新users表中id=10的这条数据，缓冲池中一开始肯定没有该条数据的，得要先从磁盘中将被更新数据的原始数据加载到缓冲池中（这里涉及到的innodb buffer暂时不讲）。同时为了保证并发更新数据安全问题，会对这条数据先加锁，防止其他事务进行更新。接着将更新前的值先备份写入到undo log中（便于事务回滚时取旧数据），比如update语句即存储被更新字段之前的值。最后更新缓存页中的数据为最新的数据，至此就完成了在缓冲池中的执行流程。</p></li><li><p>Redo Log和BinLog保证事务的可靠性</p><p>​缓冲池中更新完数据后，需要将本次的更新信息顺序写到Redo Log日志以及Binlog日志中（此时信息还在内存中，后续的刷盘策略如图所示），一般我们为了保证数据不丢失会配置双1策略，Redo Log落盘后，写Binlog落盘，再将Binlog的文件名、文件所在路径信息以及commit标记给同步顺序写到Redo log中（其中以commit标记是否更新到Redo Log中，是判定事务是否成功提交的一个比较重要的标准），Redo Log和BinLog分别在物理和逻辑层面为本次事务、提供数据上的一致性保障。</p></li><li><p>将事务的操作持久化</p><p>​前面一些列操作执行成功后，InnoDB存储引擎后台有一个IO线程，会在数据库压力的低峰期间时如凌晨时分，将缓冲池中被事务更新、但还没来得及写到磁盘中的数据（脏数据，因为磁盘数据和内存数据已经不一致了）给刷到磁盘中，完成事务的持久化。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透视http协议-02四层七层网络协议</title>
      <link href="/2021/03/09/tcp-ip/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE-02%E5%9B%9B%E5%B1%82%E4%B8%83%E5%B1%82%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/"/>
      <url>/2021/03/09/tcp-ip/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE-02%E5%9B%9B%E5%B1%82%E4%B8%83%E5%B1%82%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="tcpip-网络分层模型"><a class="markdownIt-Anchor" href="#tcpip-网络分层模型"></a> TCP/IP 网络分层模型</h2><p>TCP/IP层次图</p><p><img src="/images/image-20210310085646502.png" alt="image-20210310085646502" /></p><p>第一层叫“链接层”（link layer），负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标记网络上的设备，所以有时候也叫 MAC层。</p><p>第二层叫“网际层”或者“网络互连层”（internet layer），IP 协议就处在这一层。因为IP 协议定义了“IP 地址”的概念，所以就可以在“链接层”的基础上，用 IP 地址取代MAC 地址，把许许多多的局域网、广域网连接成一个虚拟的巨大网络，在这个网络里找设备时只要把 IP 地址再“翻译”成 MAC 地址就可以了。</p><p>第三层叫“传输层”（transport layer），这个层次协议的职责是保证数据在 IP 地址标记的两点之间“可靠”地传输，是 TCP 协议工作的层次，另外还有它的一个“小伙伴”UDP。</p><p>TCP 是一个有状态的协议，需要先与对方建立连接然后才能发送数据，而且保证数据不丢失不重复。而 UDP 则比较简单，它无状态，不用事先建立连接就可以任意发送数据，但不保证数据一定会发到对方。两个协议的另一个重要区别在于数据的形式。TCP 的数据是连续的“字节流”，有先后顺序，而UDP 则是分散的小数据包，是顺序发，乱序收。</p><p>第四层叫“应用层”（application layer），由于下面的三层把基础打得非常好，<br />所以在这一层就“百花齐放”了，有各种面向具体应用的协议。例如 Telnet、SSH、FTP、<br />SMTP 等等，当然还有我们的 HTTP。</p><p>MAC 层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位<br />是段（segment），HTTP 的传输单位则是消息或报文（message）。但这些名词并没有<br />什么本质的区分，可以统称为数据包。</p><h2 id="osi-网络分层模型"><a class="markdownIt-Anchor" href="#osi-网络分层模型"></a> OSI 网络分层模型</h2><p>OSI，全称是“开放式系统互联通信参考模型”（Open System Interconnection Reference Model），OSI 模型分成了七层，部分层次与 TCP/IP 很像，从下到上分别是：</p><p><img src="/images/image-20210310090947079.png" alt="image-20210310090947079" /></p><ol><li>第一层：物理层，网络的物理形式，例如电缆、光纤、网卡、集线器等等；</li><li>第二层：数据链路层，它基本相当于 TCP/IP 的链接</li><li>第三层：网络层，相当于 TCP/IP 里的网际层；</li><li>第四层：传输层，相当于 TCP/IP 里的传输层；</li><li>第五层：会话层，维护网络中的连接状态，即保持会话和同步</li><li>第六层：表示层，把数据转换为合适、可理解的语法和语义；</li><li>第七层：应用层，面向具体的应用传输数据。</li></ol><h2 id="两个分层模型的映射关系"><a class="markdownIt-Anchor" href="#两个分层模型的映射关系"></a> 两个分层模型的映射关系</h2><p><img src="/images/image-20210310092141705.png" alt="image-20210310092141705" /></p><ol><li>第一层：物理层，TCP/IP 里无对应；</li><li>第二层：数据链路层，对应 TCP/IP 的链接层；</li><li>第三层：网络层，对应 TCP/IP 的网际层；</li><li>第四层：传输层，对应 TCP/IP 的传输层；</li><li>第五、六、七层：统一对应到 TCP/IP 的应用层。</li></ol><h2 id="tcpip-协议栈的工作方式"><a class="markdownIt-Anchor" href="#tcpip-协议栈的工作方式"></a> TCP/IP 协议栈的工作方式</h2><p><img src="/images/image-20210312171819173.png" alt="image-20210312171819173" /></p>]]></content>
      
      
      <categories>
          
          <category> tcp-ip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
            <tag> tcp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透视http协议-01HTTP是什么笔记</title>
      <link href="/2021/03/08/tcp-ip/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE-01HTTP%E6%98%AF%E4%BB%80%E4%B9%88%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/03/08/tcp-ip/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE-01HTTP%E6%98%AF%E4%BB%80%E4%B9%88%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="http是什么http又不是什么"><a class="markdownIt-Anchor" href="#http是什么http又不是什么"></a> HTTP是什么？HTTP又不是什么？</h2><p>HTTP 是超文本传输协议，也就是HyperText Transfer Protocol。 是一个用在计算机世界里的协议，它使用计算机能够理解的语言确立了一种计算机之间交流通信的规范，以及相关的各种控制和错误处理方式。</p><p><strong>问题：</strong></p><ol><li><p>你是怎么理解 HTTP 字面上的“超文本”和“传输协议”的？</p><ul><li>http协议是一个<strong>双向协议</strong></li><li>&quot;超文本&quot;是超越了普通文本的文本，图片、音频、视频等，最关键的是含有<strong>超链接</strong></li></ul></li><li><p>能否谈一下你对 HTTP 的认识？越多越好。</p><ul><li><p>HTTP 是一个用在计算机世界里的协议，它确立了一种计算机之间交流通信的规范，以<br />及相关的各种控制和错误处理方式。</p></li><li><p>HTTP 是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范</p></li><li><p>HTTP 是构建互联网的重要基础技术，它没有实体，依赖许多其他的技术来实现，但同<br />时许多技术也都依赖于它</p></li></ul></li><li><p>HTTP 有什么特点？有什么优点和缺点？</p><ul><li>HTTP 专门用来在两点之间传输数据，不能用于广播、寻址或路由。</li></ul></li><li><p>HTTP 下层都有哪些协议？是如何工作的？</p><ul><li>TCP/IP</li><li>可靠消息传输</li><li>四层与七层协议</li><li>UNIX Domain Socket</li></ul></li></ol><h2 id="cdn"><a class="markdownIt-Anchor" href="#cdn"></a> CDN</h2><p>CDN，全称是“Content Delivery Network”，翻译过来就是“内容分发网络”。它应用了 HTTP 协议里的缓存和代理技术，代替源站响应客户端的请求。</p><h3 id="cdn的好处"><a class="markdownIt-Anchor" href="#cdn的好处"></a> CDN的好处</h3><p>简单来说，它可以缓存源站的数据，让浏览器的请求不用“千里迢迢”地到达源站服务器，<br />直接在“半路”就可以获取响应。如果 CDN 的调度算法很优秀，更可以找到离用户最近的<br />节点，大幅度缩短响应时间。</p><h2 id="tcpip"><a class="markdownIt-Anchor" href="#tcpip"></a> TCP/IP</h2><p>TCP/IP 协议是目前网络世界“事实上”的标准通信协议，TCP/IP 协议实际上是一系列网络通信协议的统称，其中最核心的两个协议是TCP和IP，其他的还有 UDP、ICMP、ARP ，这个协议栈有<strong>四层，最上层是“应用层”，最下层是“链接层”，TCP 和 IP 则在中间：TCP 属于“传输层”，IP 属于“网际层”。</strong></p><p><strong>IP 协议</strong>是“Internet Protocol”的缩写，<strong>主要目的是解决寻址和路由问题</strong>，以及如何在两点间传送数据包。</p><p><strong>TCP 协议</strong>是“Transmission Control Protocol”的缩写，意思是“传输控制协议”，它位于 IP 协议之上，基于 IP 协议提供<strong>可靠的、字节流形式</strong>的通信，是 HTTP 协议得以实现的基础。**“可靠”<strong>是指保证数据不丢失，</strong>“字节流”**是指保证数据完整，所以在 TCP 协议的两端可以如同操作文件一样访问传输的数据，就像是读写在一个密闭的管道里“流动”的字节。</p><h2 id="dns"><a class="markdownIt-Anchor" href="#dns"></a> DNS</h2><p>但想要使用 TCP/IP 协议来通信仍然要使用 IP 地址，所以需要把域名做一个转换，“映射”到它的真实 IP，这就是所谓的“域名解析”</p><h2 id="uriurl"><a class="markdownIt-Anchor" href="#uriurl"></a> URI/URL</h2><p>URI（Uniform Resource Identifier），中文名称是 统一资源标识符，使用它就能够唯一地标记互联网上资源。URL（Uniform Resource Locator）， 统一资源定位符，也就是我们俗称的“网址”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nginx.org/en/download.html</span><br></pre></td></tr></table></figure><p>URI 主要有三个基本的部分构成：</p><ol><li>协议名：即访问该资源应当使用的协议，在这里是“http”；</li><li>主机名：即互联网上主机的标记，可以是域名或 IP 地址，在这里是“<a href="http://nginx.org">nginx.org</a>”；</li><li>路径：即资源在主机上的位置，使用“/”分隔多级目录，在这里<br />是“/en/download.html”。</li></ol><h2 id="https"><a class="markdownIt-Anchor" href="#https"></a> HTTPS</h2><p>HTTPS全称是“HTTP over SSL/TLS”，也就是运行在 SSL/TLS 协议上的 HTTP。SSL/TLS是一个负责加密通信的安全协议，建立在 TCP/IP 之上，所以也是个可靠的传输协议，可以被用作 HTTP 的下层。</p>]]></content>
      
      
      <categories>
          
          <category> tcp-ip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
            <tag> tcp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-792. 匹配子序列的单词数</title>
      <link href="/2021/03/03/leetcode/leetcode-792-%E5%8C%B9%E9%85%8D%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0/"/>
      <url>/2021/03/03/leetcode/leetcode-792-%E5%8C%B9%E9%85%8D%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="792-匹配子序列的单词数"><a class="markdownIt-Anchor" href="#792-匹配子序列的单词数"></a> <a href="https://leetcode-cn.com/problems/number-of-matching-subsequences/">792. 匹配子序列的单词数</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Set&lt;Character&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    Set&lt;String&gt; set2 = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numMatchingSubseq</span><span class="params">(String S, String[] words)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++) &#123;</span><br><span class="line">            set.add(S.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String word: words) &#123;</span><br><span class="line">            <span class="keyword">if</span> (set2.contains(word) || compare(S, word)) &#123;</span><br><span class="line">                set2.add(word);</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(String S, String word)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!set.contains(word.charAt(i))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 一直找到第一个相等的</span></span><br><span class="line">            <span class="keyword">while</span> (k &lt; S.length() &amp;&amp; S.charAt(k) != word.charAt(i))&#123;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 此时判断</span></span><br><span class="line">            <span class="keyword">if</span> (k &gt;= S.length() || S.charAt(k) != word.charAt(i)) &#123;</span><br><span class="line">                <span class="comment">// 说明没有找到相等的</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 找到了相等,继续找下一个</span></span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1104. 二叉树寻路</title>
      <link href="/2021/02/24/leetcode/leetcode-1104-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AF%BB%E8%B7%AF/"/>
      <url>/2021/02/24/leetcode/leetcode-1104-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AF%BB%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1104-二叉树寻路"><a class="markdownIt-Anchor" href="#1104-二叉树寻路"></a> <a href="https://leetcode-cn.com/problems/path-in-zigzag-labelled-binary-tree/">1104. 二叉树寻路</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">pathInZigZagTree</span><span class="params">(<span class="keyword">int</span> label)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 层数</span></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> x = label;</span><br><span class="line">        <span class="keyword">while</span> (x / <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            x = x / <span class="number">2</span>;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> tmp = label;</span><br><span class="line">        <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            ans.add(tmp);</span><br><span class="line">            <span class="keyword">int</span> max = (<span class="keyword">int</span>)Math.pow(<span class="number">2</span>, n) - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> min = (<span class="keyword">int</span>)Math.pow(<span class="number">2</span>, n - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 偶数层,反向</span></span><br><span class="line">                <span class="keyword">while</span> (max != tmp) &#123;</span><br><span class="line">                    max--;</span><br><span class="line">                    min++;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 当max==tmp时,min为角标</span></span><br><span class="line">                tmp = min / <span class="number">2</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 奇数层,正向</span></span><br><span class="line">                <span class="keyword">while</span> (min != tmp) &#123;</span><br><span class="line">                    max--;</span><br><span class="line">                    min++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// min==tmp时,max为数字</span></span><br><span class="line">                tmp = max / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n--;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(ans);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-697. 数组的度</title>
      <link href="/2021/02/20/leetcode/leetcode-697-%E6%95%B0%E7%BB%84%E7%9A%84%E5%BA%A6/"/>
      <url>/2021/02/20/leetcode/leetcode-697-%E6%95%B0%E7%BB%84%E7%9A%84%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="697-数组的度"><a class="markdownIt-Anchor" href="#697-数组的度"></a> <a href="https://leetcode-cn.com/problems/degree-of-an-array/">697. 数组的度</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findShortestSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 寻找最大的度</span></span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)&#123;</span><br><span class="line">            map.put(num, map.getOrDefault(num, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            max = Math.max(max, map.get(num));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找出最大度的数字</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue() == max) &#123;</span><br><span class="line">                list.add(entry.getKey());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 寻找最小的长度</span></span><br><span class="line">        <span class="keyword">int</span> ans = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (Integer num : list) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> j = nums.length -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (nums[i] != num) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (nums[j] != num) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            ans = Math.min(ans, j - i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1760. 袋子里最少数目的球</title>
      <link href="/2021/02/20/leetcode/leetcode-1760-%E8%A2%8B%E5%AD%90%E9%87%8C%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E7%9A%84%E7%90%83/"/>
      <url>/2021/02/20/leetcode/leetcode-1760-%E8%A2%8B%E5%AD%90%E9%87%8C%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E7%9A%84%E7%90%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1760-袋子里最少数目的球"><a class="markdownIt-Anchor" href="#1760-袋子里最少数目的球"></a> <a href="https://leetcode-cn.com/problems/minimum-limit-of-balls-in-a-bag/">1760. 袋子里最少数目的球</a></h4><p>二分查找递归寻找答案是否满足条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumSize</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> maxOperations)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> r = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = l + (r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (check(nums, maxOperations, mid))&#123;</span><br><span class="line">                r = mid -<span class="number">1</span>;</span><br><span class="line">                ans = mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> maxOperations, <span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num % mid == <span class="number">0</span>)&#123;</span><br><span class="line">                count += num/mid -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                count += num / mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count &lt;= maxOperations;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1004. 最大连续1的个数 III</title>
      <link href="/2021/02/19/leetcode/leetcode-1004-%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0-III/"/>
      <url>/2021/02/19/leetcode/leetcode-1004-%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0-III/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1004-最大连续1的个数-iii"><a class="markdownIt-Anchor" href="#1004-最大连续1的个数-iii"></a> <a href="https://leetcode-cn.com/problems/max-consecutive-ones-iii/">1004. 最大连续1的个数 III</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">longestOnes</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = A.length;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (j &lt; n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A[j] == <span class="number">0</span>) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span> (count &gt; K) &#123;</span><br><span class="line">                <span class="comment">// 缩小窗口</span></span><br><span class="line">                <span class="keyword">if</span> (A[i++] == <span class="number">0</span>) &#123;</span><br><span class="line">                    count--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            ans = Math.max(ans, j - i + <span class="number">1</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 10.01. 合并排序的数组</title>
      <link href="/2021/02/05/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-10-01-%E5%90%88%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84/"/>
      <url>/2021/02/05/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-10-01-%E5%90%88%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="面试题-1001-合并排序的数组"><a class="markdownIt-Anchor" href="#面试题-1001-合并排序的数组"></a> <a href="https://leetcode-cn.com/problems/sorted-merge-lcci/">面试题 10.01. 合并排序的数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> m, <span class="keyword">int</span>[] B, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = m + n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 把B放到A</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                    A[j] = B[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 直接return</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (A[m-<span class="number">1</span>] &gt; B[n-<span class="number">1</span>])&#123;</span><br><span class="line">                A[i] = A[m-<span class="number">1</span>];</span><br><span class="line">                m --;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                A[i] = B[n-<span class="number">1</span>];</span><br><span class="line">                n--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-245. 你能回答这些问题吗</title>
      <link href="/2021/01/26/acwing/acwing-245-%E4%BD%A0%E8%83%BD%E5%9B%9E%E7%AD%94%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E5%90%97/"/>
      <url>/2021/01/26/acwing/acwing-245-%E4%BD%A0%E8%83%BD%E5%9B%9E%E7%AD%94%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E5%90%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/246/">acwing-245. 你能回答这些问题吗</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    <span class="keyword">static</span> BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(System.out));</span><br><span class="line">    <span class="keyword">static</span> Node[] tr;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] A;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] agrs)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        String[] strs = br.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> n = Integer.valueOf(strs[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> m = Integer.valueOf(strs[<span class="number">1</span>]);</span><br><span class="line">        tr = <span class="keyword">new</span> Node[<span class="number">4</span>*n];</span><br><span class="line">        strs = br.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        A = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            A[i] = Integer.valueOf(strs[i-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 构建线段树</span></span><br><span class="line">        build(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(m-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            strs = br.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> k = Integer.valueOf(strs[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">int</span> x = Integer.valueOf(strs[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">int</span> y = Integer.valueOf(strs[<span class="number">2</span>]);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(k == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x&gt;y)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">tmp = x;</span><br><span class="line">                    x = y;</span><br><span class="line">y = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">                Node node = query(<span class="number">1</span>, x, y);</span><br><span class="line">                bw.write(node.tmax + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                modify(<span class="number">1</span>, x, y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bw.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> x, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tr[u].l == x &amp;&amp; tr[u].r == x)&#123;</span><br><span class="line">            tr[u].sum = c;</span><br><span class="line">            tr[u].lmax = c;</span><br><span class="line">            tr[u].rmax = c;</span><br><span class="line">            tr[u].tmax = c;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x &lt;= mid)&#123;</span><br><span class="line">                <span class="comment">// 在左边</span></span><br><span class="line">                modify(u &lt;&lt; <span class="number">1</span>, x, c);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 在右边</span></span><br><span class="line">                modify(u &lt;&lt; <span class="number">1</span>|<span class="number">1</span>, x, c);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行pushUp操作</span></span><br><span class="line">            pushUp(u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> Node <span class="title">query</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r)&#123;</span><br><span class="line">            <span class="keyword">return</span> tr[u];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> mid = (tr[u].l+tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(r&lt;= mid)&#123;</span><br><span class="line">            <span class="comment">// 说明在左边</span></span><br><span class="line">            <span class="keyword">return</span> query(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(l &gt; mid)&#123;</span><br><span class="line">            <span class="comment">// 说明在右边</span></span><br><span class="line">            <span class="keyword">return</span> query(u &lt;&lt; <span class="number">1</span>|<span class="number">1</span>, l, r);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 说明在两边</span></span><br><span class="line">            Node left = query(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">            Node right = query(u &lt;&lt; <span class="number">1</span>|<span class="number">1</span>, l, r);</span><br><span class="line">            Node root = <span class="keyword">new</span> Node(l, r);</span><br><span class="line">            pushUp(root, left, right);</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">            tr[u] = <span class="keyword">new</span> Node(l, r, A[l], A[l], A[l], A[l]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            tr[u] = <span class="keyword">new</span> Node(l, r);</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            build(u &lt;&lt; <span class="number">1</span>, l , mid);</span><br><span class="line">            build(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">            pushUp(u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pushUp</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">        pushUp(tr[u], tr[u&lt;&lt;<span class="number">1</span>], tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pushUp</span><span class="params">(Node root, Node l, Node r)</span></span>&#123;</span><br><span class="line">        root.sum = l.sum + r.sum;</span><br><span class="line">        root.lmax = Math.max(l.lmax, l.sum + r.lmax);</span><br><span class="line">        root.rmax = Math.max(r.rmax, r.sum + l.rmax);</span><br><span class="line">        root.tmax = Math.max(Math.max(l.tmax, r.tmax), l.rmax + r.lmax);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l;</span><br><span class="line">        <span class="keyword">int</span> r;</span><br><span class="line">        <span class="keyword">int</span> sum;</span><br><span class="line">        <span class="keyword">int</span> lmax;</span><br><span class="line">        <span class="keyword">int</span> rmax;</span><br><span class="line">        <span class="keyword">int</span> tmax;</span><br><span class="line">        Node(<span class="keyword">int</span> l, <span class="keyword">int</span> r)&#123;</span><br><span class="line">            <span class="keyword">this</span>.l = l;</span><br><span class="line">            <span class="keyword">this</span>.r = r;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Node(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> sum, <span class="keyword">int</span> lmax, <span class="keyword">int</span> rmax, <span class="keyword">int</span> tmax)&#123;</span><br><span class="line">            <span class="keyword">this</span>.l = l;</span><br><span class="line">            <span class="keyword">this</span>.r = r;</span><br><span class="line">            <span class="keyword">this</span>.sum = sum;</span><br><span class="line">            <span class="keyword">this</span>.lmax = lmax;</span><br><span class="line">            <span class="keyword">this</span>.rmax = rmax;</span><br><span class="line">            <span class="keyword">this</span>.tmax = tmax;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷-P1198 [JSOI2008]最大数</title>
      <link href="/2021/01/22/acwing/%E6%B4%9B%E8%B0%B7-P1198-JSOI2008-%E6%9C%80%E5%A4%A7%E6%95%B0/"/>
      <url>/2021/01/22/acwing/%E6%B4%9B%E8%B0%B7-P1198-JSOI2008-%E6%9C%80%E5%A4%A7%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.luogu.com.cn/problem/P1198">洛谷-P1198 [JSOI2008]最大数</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Node[] tree;</span><br><span class="line">    <span class="keyword">static</span> BufferedReader read = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    <span class="keyword">static</span> BufferedWriter log  = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(System.out));</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String[] arr = read.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> m = Integer.valueOf(arr[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> d = Integer.valueOf(arr[<span class="number">1</span>]);</span><br><span class="line">        tree = <span class="keyword">new</span> Node[<span class="number">4</span>*m];</span><br><span class="line">        <span class="keyword">int</span> last = <span class="number">0</span>, n = <span class="number">1</span>;</span><br><span class="line">        build(<span class="number">1</span>, <span class="number">1</span>, m);</span><br><span class="line">        <span class="keyword">while</span>(m-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            arr = read.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            String s = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> x = Integer.valueOf(arr[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(s.equals(<span class="string">&quot;Q&quot;</span>))&#123;</span><br><span class="line">                <span class="comment">//查询值</span></span><br><span class="line">                last = query(<span class="number">1</span>, n + <span class="number">1</span> - x, n);</span><br><span class="line">                log.write(last+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//插入值,根节点是1,修改结点从n+1开始</span></span><br><span class="line">                modify(<span class="number">1</span>, n+<span class="number">1</span>, (x + last)%d);</span><br><span class="line">                n++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        log.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建线段树</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        tree[u] = <span class="keyword">new</span> Node(l, r);</span><br><span class="line">        <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 否则构建左边、右边</span></span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        build(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line">        build(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// pushUp操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pushUp</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">        tree[u].v = Math.max(tree[u &lt;&lt; <span class="number">1</span>].v, tree[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].v);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tree[u].l &gt;= l &amp;&amp; tree[u].r &lt;= r)&#123;</span><br><span class="line">            <span class="keyword">return</span> tree[u].v;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mid = (tree[u].l + tree[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= mid)&#123;</span><br><span class="line">            v = query(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(r &gt; mid)&#123;</span><br><span class="line">            v = Math.max(v, query(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> x, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tree[u].l == x &amp;&amp; tree[u].r == x)&#123;</span><br><span class="line">            tree[u].v = c;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (tree[u].l + tree[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x &lt;= mid)&#123;</span><br><span class="line">                modify(u &lt;&lt; <span class="number">1</span>, x, c);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                modify(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, x, c);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 进行pushUp操作</span></span><br><span class="line">            pushUp(u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l;</span><br><span class="line">        <span class="keyword">int</span> r;</span><br><span class="line">        <span class="keyword">int</span> v;</span><br><span class="line">        Node(<span class="keyword">int</span> l, <span class="keyword">int</span> r)&#123;</span><br><span class="line">            <span class="keyword">this</span>.l = l;</span><br><span class="line">            <span class="keyword">this</span>.r = r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记07-数据库索引原理</title>
      <link href="/2021/01/18/mysql/mysql%E7%AC%94%E8%AE%B007-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/"/>
      <url>/2021/01/18/mysql/mysql%E7%AC%94%E8%AE%B007-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据库索引原理"><a class="markdownIt-Anchor" href="#数据库索引原理"></a> 数据库索引原理</h2><h3 id="页分裂"><a class="markdownIt-Anchor" href="#页分裂"></a> 页分裂</h3><p>​当数据不断插入时，当数据页满了会产生页分裂，如果指定了主键并不是自增的，页分裂时也会维护为自增的，会将递增的主键放在一起，不会出现一个数据页中的主键比它页号小的数据页中的主键还要大的情况，如发生这种情况则会交换数据页中的数据，保证随着数据页的递增，主键也是递增的</p><h3 id="主键索引目录"><a class="markdownIt-Anchor" href="#主键索引目录"></a> 主键索引目录</h3><p>​每个数据页的页号会和数据页中的最小主键值放在一起，形成一个索引的目录，有了索引目录后，比如要查找id=3的数据，此时会跟每个数据页的最小主键来比，首先id=3大于了数据页2里的最小主键值1，小于数据页8中的最小主键值4，则说明数据在数据页2中，当有很多数据页的时候完全可以使用二分查找</p><p>​索引目录中存储着最小主键值和对应的数据页号，但是表中可能存在很多数据页，然后主键目录中会存放大量最小主键值和数据页号，这样也是不行，再考虑到这个问题之后，实际上采用了把索引数据存储在数据页的方式实现的，此时就为索引页，</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记06-锁机制</title>
      <link href="/2021/01/13/mysql/mysql%E7%AC%94%E8%AE%B006-%E9%94%81%E6%9C%BA%E5%88%B6/"/>
      <url>/2021/01/13/mysql/mysql%E7%AC%94%E8%AE%B006-%E9%94%81%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="锁机制"><a class="markdownIt-Anchor" href="#锁机制"></a> 锁机制</h2><p>当事务A更新一行数据时，先把数据读入缓存页，此时事务A对这行数据更新，会先看这行数据有没有加锁，如果没有加锁的话，事务A将会对这行数据进行加锁，将自己的事务id和等待状态false写入锁中，此时事务B来更新这行数据时，发现这行数据已经有锁了，事务B也会对这行数据创建一把锁，这把锁包含B事务id和锁的等待状态，但是此时事务B锁的等待状态是true，表示正在排队等待，若此时事务A执行完毕，会将锁释放，并判断是否还有其它锁等待这行数据进行更新，，于是发现事务B也对这行数据进行了加锁，此时事务A会将事务B的锁的等待状态改为false并会唤醒事务B继续执行，此时事务B就获取到锁了</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记05-多个事务并发更新查询</title>
      <link href="/2021/01/11/mysql/mysql%E7%AC%94%E8%AE%B005-%E5%A4%9A%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%B9%B6%E5%8F%91%E6%9B%B4%E6%96%B0%E6%9F%A5%E8%AF%A2/"/>
      <url>/2021/01/11/mysql/mysql%E7%AC%94%E8%AE%B005-%E5%A4%9A%E4%B8%AA%E4%BA%8B%E5%8A%A1%E5%B9%B6%E5%8F%91%E6%9B%B4%E6%96%B0%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="多个事务并发更新查询"><a class="markdownIt-Anchor" href="#多个事务并发更新查询"></a> 多个事务并发更新查询</h2><h3 id="脏写-脏读-不可重复读和幻读"><a class="markdownIt-Anchor" href="#脏写-脏读-不可重复读和幻读"></a> 脏写、脏读、不可重复读和幻读</h3><ul><li><strong>脏写</strong>：事务A写入一个值，然后事务B改变了事务A写入的值，过段时间事务A回滚了，事务B的修改丢失了</li><li><strong>脏读</strong>：事务A写入一个值，事务B读取事务A的值，后来发现值后来被事务A回滚了</li><li><strong>不可重复读</strong>：事务A读取了一个值，事务B此时更改了值并提交了事务，事务A再次查询，发现值变成了事务B更新的值</li><li><strong>幻读</strong>：一个事务用一样的SQL多次查询，每次查询都会查到一些之前没有看到过的数据</li></ul><h3 id="sql层面的事务隔离级别"><a class="markdownIt-Anchor" href="#sql层面的事务隔离级别"></a> SQL层面的事务隔离级别</h3><ul><li><strong>读未提交</strong>：不可能两个事务在没提交的情况下更新同一行的数据值，及不允许发生脏写，但是在这种情况下会发生脏读、不可重复读、幻读</li><li><strong>读已提交</strong>：不会发生脏写、脏读，可能会发生不可重复读和幻读，因为其他事务一旦修改了值提交了事务，你的事务就会读到，所有可能多次读到的值是不同的</li><li><strong>可重复读</strong>：不会发生脏写、脏读、不可重复读，因为你一个事务多次查询一个值，哪怕别的事务提交了这个事，但是不会读到其它事务提交的值，你的事务一旦开始，多次查询一个值，会读取到同一个值</li><li><strong>串行化</strong>：不允许多个事务并行执行，只能串行执行</li></ul><h3 id="mvcc多版本并发控制机制"><a class="markdownIt-Anchor" href="#mvcc多版本并发控制机制"></a> MVCC多版本并发控制机制</h3><p>ReadView：执行一个事务的时候，会生成一个ReadView的视图，里面比较关键的东西有四个</p><ol><li>m_ids，此时有哪些事务在mysql执行还没用提交的</li><li>min_trx_id，m_ids的最小值</li><li>max_trx_id，mysql下一个要生成事务的id，即最大事务id</li><li>create_trx_id，就是你这个事务的id</li></ol>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记04-redo log日志刷入磁盘流程</title>
      <link href="/2021/01/05/mysql/mysql%E7%AC%94%E8%AE%B004-redo-log%E6%97%A5%E5%BF%97%E5%88%B7%E5%85%A5%E7%A3%81%E7%9B%98%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/01/05/mysql/mysql%E7%AC%94%E8%AE%B004-redo-log%E6%97%A5%E5%BF%97%E5%88%B7%E5%85%A5%E7%A3%81%E7%9B%98%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redo-log日志刷入磁盘流程"><a class="markdownIt-Anchor" href="#redo-log日志刷入磁盘流程"></a> redo log日志刷入磁盘流程</h2><p>redo log有自己的储存结构即为redo log block，redo log buffer是mysql启动的时候，跟操作系统申请的一块连续的内存空间，然后再里面划分出了N多个空的redo log block，redo log buffer的默认值就是16M，每一个redo log block为512kb。</p><p>平时在执行事务的一个过程中，每个事务都可能存在多个增删改操作，那么就会有多个redo log，这么多redo log就是一组redo log，其实每组redo log都现在别的地方暂存，然后都执行完了，再把一组redo log给写入到redo log buffer的block里去的，如果一组redo log实在太多了，那么就会存放在多个redo log block中</p><h3 id="redo-log-buffer中的缓冲日志什么时候写入磁盘"><a class="markdownIt-Anchor" href="#redo-log-buffer中的缓冲日志什么时候写入磁盘"></a> redo log buffer中的缓冲日志什么时候写入磁盘？</h3><ol><li>如果写入redo log buffer的日志已经占据了redo log buffer总容量的一半了，也就是超过了8M的redo log已经在缓冲里面了，此时就会把他们刷入到磁盘文件里去</li><li>一个事物提交的时候，必须把他的那些redo log所在的redo log block都刷入磁盘文件里去，只有这样，当事务提交之后，他修改的数据绝对不会丢失，因为redo log中有重做日志，随时可以恢复事务做的修改（redo log哪怕是事务提交的时候写入磁盘文件，也是先进入os cache，进入到os的文件缓冲区里，所以是否需要提交事务就强行把redo log刷入物理磁盘文件中，这个需要设置对应的参数）</li><li>后台线程定时刷新，有一个后台线程每个1秒就会把redo log buffer里的redo log block刷到磁盘文件里去</li><li>mysql关闭的时候，redo log block都会刷入到磁盘里去</li></ol>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记03-Buffer Pool内存数据结构</title>
      <link href="/2020/12/21/mysql/mysql%E7%AC%94%E8%AE%B003-Buffer-Pool%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2020/12/21/mysql/mysql%E7%AC%94%E8%AE%B003-Buffer-Pool%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="buffer-pool内存数据结构"><a class="markdownIt-Anchor" href="#buffer-pool内存数据结构"></a> Buffer Pool内存数据结构</h2><p>​Buffer Pool的内存大小默认为128M，，磁盘中存放的数据页的默认大小为16KB，而Buffer Pool中存放的一个一个的数据页，我们通常叫做缓存页，因为毕竟Buffer Pool是一个缓冲池，里面的数据都是从磁盘缓存到内存去的。Buffer Pool中的缓存页的大小也和数据页相同为16KB，每个缓存页都有描述信息，其占数据页的5%左右，也就是大概800B，buffer pool真是数据结构可以由多个buffer pool组成，每个buffer pool可以由多个chunk组成，运行期间可以支持动态调整大小</p><h3 id="如何知道哪些缓存页是空闲的"><a class="markdownIt-Anchor" href="#如何知道哪些缓存页是空闲的"></a> 如何知道哪些缓存页是空闲的</h3><p>​数据库会为Buffer Pool设计一个free链表，他是一个双向链表数据结构，这个free链表里，每个节点就是一个空闲的缓存 页的描述数据块的地址，也就是说，只要你一个缓存页是空闲的，那么他的描述数据块就会被放入这个free链表中。</p><h3 id="数据库启动的时候如何初始化buffer-pool"><a class="markdownIt-Anchor" href="#数据库启动的时候如何初始化buffer-pool"></a> 数据库启动的时候，如何初始化Buffer Pool</h3><p>​数据库只要一启动，就会按照你设置的Buffer Pool大小，稍微再加大一点，去找操作系统申请一块内存区域，作为Buffer Pool的内存区域。 然后当内存区域申请完毕之后，数据库就会按照默认的缓存页的16KB的大小以及对应的800个字节左右的描述数据的大小，在Buffer Pool中划分出来一个一个的缓存页和一个一个的他们对应的描述数据。</p><h3 id="将磁盘上的页读取到buffer-pool的缓存页"><a class="markdownIt-Anchor" href="#将磁盘上的页读取到buffer-pool的缓存页"></a> 将磁盘上的页读取到Buffer Pool的缓存页</h3><p>​首先，我们需要从free链表里获取一个描述数据块，然后就可以对应的获取到这个描述数据块对应的空闲缓存页，接着我们就可以把磁盘上的数据页读取到对应的缓存页里去，同时把相关的一些描述数据写入缓存页的描述数据块里去，最后把那个描述数据块从free链表里去除就可以了</p><h3 id="如何知道数据页有没有被缓存"><a class="markdownIt-Anchor" href="#如何知道数据页有没有被缓存"></a> 如何知道数据页有没有被缓存？</h3><p>​<strong>数据库还会有一个哈希表数据结构，他会用表空间号+数据页号，作为一个key，然后缓存页的地址作为value</strong>，当你要使用一个数据页的时候，通过“表空间号+数据页号”作为key去这个哈希表里查一下，如果没有就读取数据页，如果 已经有了，就说明数据页已经被缓存了</p><h3 id="哪些缓存页是脏页以及如何被记录的"><a class="markdownIt-Anchor" href="#哪些缓存页是脏页以及如何被记录的"></a> 哪些缓存页是脏页以及如何被记录的？</h3><p>​以数据库在这里引入了另外一个跟free链表类似的flush链表，这个flush链表本质也是通过缓存页的描述数据块中的两个指 针，让被修改过的缓存页的描述数据块，组成一个双向链表，凡是被修改过的缓存页，都会把他的描述数据块加入到flush链表中去，flush的意思就是这些都是脏页，后续都是要flush刷新到磁盘上去的</p><h3 id="淘汰缓存页"><a class="markdownIt-Anchor" href="#淘汰缓存页"></a> 淘汰缓存页</h3><p>​把修改过的缓存页刷到磁盘的数据页中，然后这个缓存页就可以情况了，让它变成一个空闲的缓存页。淘汰缓存页使用的是一个新的LRU链表，mysql的预读机制和全表扫描可能会频繁导致被访问的缓存页被淘汰的场景，全表扫描会将整个表的数据页加载到缓存中，导致LRU链表尾部经常被访问的缓存页被淘汰</p><h3 id="哪些情况会触发mysql预读机制"><a class="markdownIt-Anchor" href="#哪些情况会触发mysql预读机制"></a> 哪些情况会触发mysql预读机制</h3><ul><li>有一个参数是innodb_read_ahead_threshold，默认值是56，意思是如果顺序访问了一个区的多个数据页，访问的数据页的数量超过了这个阈值，此时就会触发预读机制，把下一个相邻的数据页都加载到缓存中去</li><li>如果Buffer Pool里缓存了一个区里的13个连续的数据页，而且这些数据页都是比较频繁会被访问到的，此时就会触发预读机制，把这个区的其它的数据页都加载到缓存中去，这个机制是通过参数innodb_random_read_ahead来控制的，默认是OFF关闭的</li></ul><h3 id="基于冷热数据分离的思想设计lru链表"><a class="markdownIt-Anchor" href="#基于冷热数据分离的思想设计lru链表"></a> 基于冷热数据分离的思想设计LRU链表</h3><p>​真正的LRU链表会被拆分为两个部分，一部分是热数据，一部分是冷数据，这个冷热数据的比例是由innodb_old_blocks_pct参数控制的，默认是37，也就是冷数据的比例占37%</p><p>​数据页第一次被加载到缓存中时，会被挡在冷数据区域的链表头部位置，那么冷数据区域的缓存页是么时候被放到热数据区域呢？所以在mysql设定了一个规则，设置了一个innodb_old_blocks_time参数，它的默认是1000ms，也就是说当一个数据页被加载到缓存页之后，在1s之后，你再次访问这个缓存页才会被挪动到热区域的链表头部</p><p>​当缓存页不够时，会优先淘汰掉冷数据区域的链表尾部的缓存页，刷入磁盘。</p><h3 id="lru链表热数据区域的优化"><a class="markdownIt-Anchor" href="#lru链表热数据区域的优化"></a> LRU链表热数据区域的优化</h3><p>​在热数据区域中，如果被访问了一个缓存页，会不会立马李东到热数据区域的链表头部？因为热数据区域是被经常访问的，所以总是进行移动会导致性能不好，也没有这个必要，所以LRU链表的热数据区域被优化了，只有在热数据区域的后3/4部分的缓存被访问了，才会移动到链表的头部，也就是说热数据区域的前1/4的缓存页被访问，是不会被移动到链表头部的</p><h3 id="lru链表冷数据区域的缓存页刷入磁盘的时机"><a class="markdownIt-Anchor" href="#lru链表冷数据区域的缓存页刷入磁盘的时机"></a> LRU链表冷数据区域的缓存页刷入磁盘的时机</h3><ul><li><strong>定时把LRU尾部的部分缓存页刷入磁盘</strong>，第一个时机并不是缓存页满的时候，才会挑选LRU冷数据区域尾部的几个缓存页刷入磁盘，而是有一个后台线程，运行一个定时任务，每个一段时间就会把LRU链表的冷数据区域的尾部一些缓存页刷入磁盘，清空这几个缓存页，把它们加入到free链表中，并从flush链表移除</li><li><strong>把flush链表中的一些缓存页定时刷入磁盘</strong>，仅仅将LRU冷数据区域的缓存页定时刷入磁盘是不够的，因为LRU链表的热数据区域里的很多缓存页被频繁修改，也是需要被刷入到磁盘的，所有这个后台线程也会在mysql不繁忙的时候，找个时间将flush链表中的缓存页刷入磁盘，这样被修改过的数据都会被刷入磁盘，只要flush链表中的缓存页被刷入了磁盘，那么缓存页也会从LRU链表中移除，然后加入到free链表中</li></ul><p><strong>实在没有空闲缓存页了怎么办？</strong></p><p>​会从LRU冷数据区域的尾部找到一个缓存页，这个缓存页一定是最不经常被使用的，然后刷入磁盘，腾出来这个空闲的缓存页</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记02-binlog日志</title>
      <link href="/2020/12/17/mysql/mysql%E7%AC%94%E8%AE%B002-binlog%E6%97%A5%E5%BF%97/"/>
      <url>/2020/12/17/mysql/mysql%E7%AC%94%E8%AE%B002-binlog%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="binlog日志"><a class="markdownIt-Anchor" href="#binlog日志"></a> binlog日志</h2><h3 id="mysql-binlog到底是什么"><a class="markdownIt-Anchor" href="#mysql-binlog到底是什么"></a> MySQL binlog到底是什么？</h3><p>​之前说的redo log，他是一种偏向物理性质的重做日志，因为他里面记录的是类似这样的东西，“对哪个数据页中的什么记录，做了个什么修改”。而且redo log本身是属于InnoDB存储引擎特有的一个东西。而binlog叫做归档日志，他里面记录的是偏向于逻辑性的日志，类似于“对users表中的id=10的一行数据做了更新操 作，更新以后的值是什么”，binlog不是InnoDB存储引擎特有的日志文件，是属于mysql server自己的日志文件。</p><h3 id="提交事务的时候同时会写入binlog"><a class="markdownIt-Anchor" href="#提交事务的时候同时会写入binlog"></a> 提交事务的时候，同时会写入binlog</h3><p>​提交事务的时候，会把redo log日志写入磁盘文件中去。然后其实在提交事务的时 候，我们同时还会把这次更新对应的binlog日志写入到磁盘文件中，</p><h3 id="binlog日志的刷盘策略"><a class="markdownIt-Anchor" href="#binlog日志的刷盘策略"></a> binlog日志的刷盘策略</h3><p>​binlog日志，其实也有不同的刷盘策略，有一个sync_binlog参数可以控制binlog的刷盘策略，他的默认值是0， 此时你把binlog写入磁盘的时候，其实不是直接进入磁盘文件，而是进入os cache内存缓存。如果此时机器宕机，那么你在os cache里的binlog日志是会丢失的。把sync_binlog参数设置为1的话，那么此时会强制在提交事务的时候，把binlog直接写入到磁盘文件里去， 那么这样提交事务之后，哪怕机器宕机，磁盘上的binlog是不会丢失。</p><h3 id="基于binlog和redo-log完成事务的提交"><a class="markdownIt-Anchor" href="#基于binlog和redo-log完成事务的提交"></a> 基于binlog和redo log完成事务的提交</h3><p>​当我们把binlog写入磁盘文件之后，接着就会完成最终的事务提交，此时会把本次更新对应的binlog文件名称和这次 更新的binlog日志在文件里的位置，都写入到redo log日志文件里去，同时在redo log日志文件里写入一个commit标 记。 在完成这个事情之后，才算最终完成了事务的提交。</p><h3 id="最后一步在redo日志中写入commit标记的意义是什么"><a class="markdownIt-Anchor" href="#最后一步在redo日志中写入commit标记的意义是什么"></a> 最后一步在redo日志中写入commit标记的意义是什么？</h3><p>​必须是在redo log中写入最终的事务commit标记了，然后此时事务提交成功，而且redo log里有本次更新对应的日 志，binlog里也有本次更新对应的日志 ，redo log和binlog完全是一致的。</p><h3 id="后台io线程随机将内存更新后的脏数据刷回磁盘"><a class="markdownIt-Anchor" href="#后台io线程随机将内存更新后的脏数据刷回磁盘"></a> 后台IO线程随机将内存更新后的脏数据刷回磁盘</h3><p>​事务提交后磁盘上的数据文件可能还是旧值，MySQL有一个后台的IO线程，会在之后某个时间里，随机的把内存buffer pool中的修改后的脏数据给刷回到磁 盘上的数据文件里去，后台IO线程把buffer pool里的修改后的脏数据刷回磁盘的之后，磁盘上的数据才会跟内存里一样，在你IO线程把脏数据刷回磁盘之前，哪怕mysql宕机崩溃也没关系，因为重启之后，会根据redo日志恢复之前提交事务做过的修改到内存里去。</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记01-InnoDB储存引擎的架构设计</title>
      <link href="/2020/12/17/mysql/mysql%E7%AC%94%E8%AE%B001-InnoDB%E5%82%A8%E5%AD%98%E5%BC%95%E6%93%8E%E7%9A%84%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
      <url>/2020/12/17/mysql/mysql%E7%AC%94%E8%AE%B001-InnoDB%E5%82%A8%E5%AD%98%E5%BC%95%E6%93%8E%E7%9A%84%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="innodb储存引擎的架构设计"><a class="markdownIt-Anchor" href="#innodb储存引擎的架构设计"></a> InnoDB储存引擎的架构设计</h2><h3 id="innodb的重要内存结构缓冲池"><a class="markdownIt-Anchor" href="#innodb的重要内存结构缓冲池"></a> InnoDB的重要内存结构：缓冲池</h3><p>​引擎要执行更新语句的时候 ，比如对“id=10”这一行数据，他其实会先将“id=10”这一行数据看看是否在缓冲池里，如果不在的 话，那么会直接从磁盘里加载到缓冲池里来，而且接着还会对这行记录加独占锁</p><h3 id="undo日志文件如何让你更新的数据可以回滚"><a class="markdownIt-Anchor" href="#undo日志文件如何让你更新的数据可以回滚"></a> undo日志文件：如何让你更新的数据可以回滚？</h3><p>​假设“id=10”这行数据的name原来是“zhangsan”，现在我们要更新为“xxx”，那么此时我们得先 把要更新的原来的值“zhangsan”和“id=10”这些信息，写入到undo日志文件中去</p><h3 id="更新buffer-pool中的缓存数据"><a class="markdownIt-Anchor" href="#更新buffer-pool中的缓存数据"></a> 更新buffer pool中的缓存数据</h3><p>​当我们把要更新的那行记录从磁盘文件加载到缓冲池，同时对他加锁之后，而且还把更新前的旧值写入undo日志文件 之后，我们就可以正式开始更新这行记录了，更新的时候，先是会更新缓冲池中的记录，此时这个数据就是脏数据。因为这个时候磁盘上“id=10”这行数据的name字段还是“zhangsan”，但是内存里这行数据已经被修改了，所以就会叫他是脏数据。</p><h3 id="redo-log-buffer万一系统宕机如何避免数据丢失"><a class="markdownIt-Anchor" href="#redo-log-buffer万一系统宕机如何避免数据丢失"></a> Redo Log Buffer：万一系统宕机，如何避免数据丢失？</h3><p>​把对内存所做的修改写入到一个Redo Log Buffer里去，这也是内存里的一个缓冲区，是用来存放redo日志的</p><h3 id="提交事务的时候将redo日志写入磁盘中"><a class="markdownIt-Anchor" href="#提交事务的时候将redo日志写入磁盘中"></a> 提交事务的时候将redo日志写入磁盘中</h3><p>​我们想要提交一个事务了，此时就会根据一定的策略把redo日志从redo log buffer里刷入到磁盘文件里去，此时这个策略是通过innodb_flush_log_at_trx_commit来配置</p><ul><li>当这个参数的值为0的时候，那么你提交事务的时候，不会把redo log buffer里的数据刷入磁盘文件的，此时可能你都 提交事务了，结果mysql宕机了，然后此时内存里的数据全部丢失</li><li>当这个参数的值为1的时候，你提交事务的时候，就必须把redo log从内存刷入到磁盘文件里去，只要事务提交成功，那么redo log就必然在磁盘里了，就算mysql宕机，当mysql重启之后，他可以根据redo日志去恢复之前做过的修改</li><li>当这个参数的值为2的时候，提交事务的时候，把redo日志写入磁盘文件对应的os cache缓存里去，而不是直接进入磁盘文件，可 能1秒后才会把os cache里的数据写入到磁盘文件里去，万一此时你要 是机器宕机了，那么os cache里的redo log就会丢失，同样会让你感觉提交事务了，结果数据丢了</li></ul><img src="/images/image-20201217190829654.png" alt="image-20201217190829654" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-718. 最长重复子数组</title>
      <link href="/2020/12/15/leetcode/leetcode-718-%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/"/>
      <url>/2020/12/15/leetcode/leetcode-718-%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-718-最长重复子数组"><a class="markdownIt-Anchor" href="#leetcode-718-最长重复子数组"></a> <a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">leetcode-718. 最长重复子数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findLength</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span>[] B)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = A.length;</span><br><span class="line">        <span class="keyword">int</span> n2 = B.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n1][n2];</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(B[<span class="number">0</span>] == A[i])&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n2; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(A[<span class="number">0</span>] == B[i])&#123;</span><br><span class="line">                dp[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n2; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(A[i] == B[j])&#123;</span><br><span class="line">                    dp[i][j] = dp[i-<span class="number">1</span>][j-<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ans = Math.max(ans, dp[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记08-内存溢出</title>
      <link href="/2020/12/11/jvm/JVM%E7%AC%94%E8%AE%B008-%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/"/>
      <url>/2020/12/11/jvm/JVM%E7%AC%94%E8%AE%B008-%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="jvm内存溢出"><a class="markdownIt-Anchor" href="#jvm内存溢出"></a> JVM内存溢出</h2><h3 id="可能导致内存溢出的三个区域"><a class="markdownIt-Anchor" href="#可能导致内存溢出的三个区域"></a> 可能导致内存溢出的三个区域</h3><ul><li>Metaspace区域里发生OOM</li><li>每个线程的虚拟机栈内存可能发生OOM的区域</li><li>堆内存空间发生内存溢出</li></ul><h4 id="metaspace区域"><a class="markdownIt-Anchor" href="#metaspace区域"></a> Metaspace区域</h4><ol><li>第一种原因，很多工程师他不懂JVM的运行原理，在上线系统的时候对Metaspace区域直接用默认的参数，即根本不设置其大小 这会导致默认的Metaspace区域可能才几十MB而已，此时对于一个稍微大型一点的系统，因为他自己有很多类，还依赖了很多外部的jar包有有很多的类，几十MB的Metaspace很容易就不够了</li><li>第二种原因，就是很多人写系统的时候会用cglib之类的技术动态生成一些类，一旦代码中没有控制好，导致你生成的类过于多的时候，就很容易把Metaspace给塞满，进而引发内存溢出</li></ol><p>Metaspace区域发生内存溢出的一个场景，就是如果我们在程序里不停的动态生成类，就会导致不停的加载类到Metaspace区域里去，而且这些动态生成的类必须还得是不能被回收掉的。 接着一旦Metaspace区域满了，就会触发Full GC连带着回收Metaspace中的类，但是此时大量的类是不能被回收的。 因此即使触发过Full GC过后，Metaspace区域几乎还是不能放下任何一个类，此时必然会触发Metaspace区域的内存溢出，导致JVM 也是崩溃掉，无法继续运行了。</p><h4 id="栈内存区域"><a class="markdownIt-Anchor" href="#栈内存区域"></a> 栈内存区域</h4><p>​一个线程的虚拟机栈内存大小是有限的，比如1MB，那么假设你不停的让这个线程去调用各种方法，然后不停的把 方法调用的栈桢压入栈中，那么如果不停的让线程调用方法，不停的往栈里放入栈桢，此时终有一个时刻，大量的栈桢会消耗完毕这个1MB的线程栈内存，最终就 会导致出现栈内存溢出的情况。</p><h4 id="堆内存区域"><a class="markdownIt-Anchor" href="#堆内存区域"></a> 堆内存区域</h4><p>​有限的内存中放了过多的对象，而且大多数都是存活的，此时即使GC过后还是大部分都存活，所以要继续放入更多对象已经不可能 了，此时只能引发内存溢出问题。 所以一般来说发生内存溢出有两种主要的场景：</p><ol><li><p>系统承载高并发请求，因为请求量过大，导致大量对象都是存活的，所以要继续放入新的对象实在是不行了，此时就会引发OOM系统崩溃</p></li><li><p>系统有内存泄漏的问题，就是莫名其妙弄了很多的对象，结果对象都是存活的，没有及时取消对他们的引用，导致触发GC还是无法回收，此时只能引发内存溢出，因为内存实在放不下更多对象了</p><p>因此总结起来，一般引发OOM，要不然是系统负载过高，要不然就是有内存泄漏的问题</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-07JVM内存查看命令</title>
      <link href="/2020/12/07/jvm/JVM%E7%AC%94%E8%AE%B0-07JVM%E5%86%85%E5%AD%98%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/12/07/jvm/JVM%E7%AC%94%E8%AE%B0-07JVM%E5%86%85%E5%AD%98%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="jvm内存查看命令"><a class="markdownIt-Anchor" href="#jvm内存查看命令"></a> JVM内存查看命令</h2><h3 id="内存分析命令"><a class="markdownIt-Anchor" href="#内存分析命令"></a> 内存分析命令</h3><ul><li>jstat -gc PID，jstat -gc PID 180000 10 这就相当于是让他每隔三分钟执行一次统计，连续 执行10次<ul><li>S1C：这是To Survivor区的大小</li><li>S0U：这是From Survivor区当前使用的内存大小</li><li>S1U：这是To Survivor区当前使用的内存大小</li><li>EC：这是Eden区的大小</li><li>EU：这是Eden区当前使用的内存大小</li><li>OC：这是老年代的大小</li><li>OU：这是老年代当前使用的内存大小</li><li>MC：这是方法区（永久代、元数据区）的大小</li><li>MU：这是方法区（永久代、元数据区）的当前使用的内存大小</li><li>YGC：这是系统运行迄今为止的Young GC次数</li><li>YGCT：这是Young GC的耗时</li><li>FGC：这是系统运行迄今为止的Full GC次数</li><li>FGCT：这是Full GC的耗时 GCT：这是所有GC的总耗时</li></ul></li></ul><h3 id="jmap和jhat摸清线上系统的对象分布"><a class="markdownIt-Anchor" href="#jmap和jhat摸清线上系统的对象分布"></a> jmap和jhat摸清线上系统的对象分布</h3><ul><li>jmap -heap PID  这个信息会打印出来堆内存相关的一些参数设置，然后就是当前堆内存里的一些基本各个区域的情况</li><li>jmap -histo PID  他会按照各种对象占用内存空间的大小降序排列，把占用内存最多的对象放在最上面</li><li>jmap -dump:live,format=b,file=dump.hprof PID 这个命令会在当前目录下生成一个dump.hrpof文件</li><li>jhat dump.hprof -port 7000 用jhat去分析堆快照，会支持通过浏览器来以图形化的方式分析堆转储快照</li></ul>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习笔记-01</title>
      <link href="/2020/12/03/machine-learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-01/"/>
      <url>/2020/12/03/machine-learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="机器学习笔记-01"><a class="markdownIt-Anchor" href="#机器学习笔记-01"></a> 机器学习笔记-01</h2><h3 id="监督学习"><a class="markdownIt-Anchor" href="#监督学习"></a> 监督学习</h3><h4 id="回归问题"><a class="markdownIt-Anchor" href="#回归问题"></a> 回归问题</h4><ul><li>预测估计</li><li>预测天气</li><li>预测房价、体重</li></ul><h4 id="分类问题"><a class="markdownIt-Anchor" href="#分类问题"></a> 分类问题</h4><ul><li>判断一个邮件是否为垃圾</li><li>图像识别</li><li>判断一个人的信用好坏</li></ul><h3 id="无监督学习"><a class="markdownIt-Anchor" href="#无监督学习"></a> 无监督学习</h3><p>数据没有标签，多为聚类分析</p><h3 id="数据预处理"><a class="markdownIt-Anchor" href="#数据预处理"></a> 数据预处理</h3><ul><li><p>归一化</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mrow><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi></mrow><mo>=</mo><mfrac><mrow><mi>X</mi><mo>−</mo><mi>X</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mrow><mrow><mi>X</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><mo>−</mo><mi>X</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">X{norm} = \frac{X - X{min}}{X{max} - X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">m</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>标准化</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mrow><mi>s</mi><mi>t</mi><mi>d</mi></mrow><mo>=</mo><mfrac><mrow><mi>X</mi><mo>−</mo><mi>U</mi></mrow><mi>ϵ</mi></mfrac></mrow><annotation encoding="application/x-tex">X{std} = \frac{X-U}{\epsilon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">d</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>数据转换：One-Hot encoding</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> machine-learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1124. 表现良好的最长时间段</title>
      <link href="/2020/12/01/leetcode/leetcode-1124-%E8%A1%A8%E7%8E%B0%E8%89%AF%E5%A5%BD%E7%9A%84%E6%9C%80%E9%95%BF%E6%97%B6%E9%97%B4%E6%AE%B5/"/>
      <url>/2020/12/01/leetcode/leetcode-1124-%E8%A1%A8%E7%8E%B0%E8%89%AF%E5%A5%BD%E7%9A%84%E6%9C%80%E9%95%BF%E6%97%B6%E9%97%B4%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1124-表现良好的最长时间段"><a class="markdownIt-Anchor" href="#leetcode-1124-表现良好的最长时间段"></a> <a href="https://leetcode-cn.com/problems/longest-well-performing-interval/">leetcode-1124. 表现良好的最长时间段</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestWPI</span><span class="params">(<span class="keyword">int</span>[] hours)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = hours.length;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (hours[j] &gt; <span class="number">8</span>)&#123;</span><br><span class="line">                    count = count + <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    count = count - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    ans = Math.max(ans, j-i+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-34. 在排序数组中查找元素的第一个和最后一个位置</title>
      <link href="/2020/12/01/leetcode/leetcode-34-%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/"/>
      <url>/2020/12/01/leetcode/leetcode-34-%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-34-在排序数组中查找元素的第一个和最后一个位置"><a class="markdownIt-Anchor" href="#leetcode-34-在排序数组中查找元素的第一个和最后一个位置"></a> <a href="https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/">leetcode-34. 在排序数组中查找元素的第一个和最后一个位置</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] searchRange(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> i = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> j = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> b = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n-<span class="number">1</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] == target)&#123;</span><br><span class="line">                a = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j] == target)&#123;</span><br><span class="line">                b = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            j --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;a, b&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-767. 重构字符串</title>
      <link href="/2020/11/30/leetcode/leetcode-767-%E9%87%8D%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/11/30/leetcode/leetcode-767-%E9%87%8D%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-767-重构字符串"><a class="markdownIt-Anchor" href="#leetcode-767-重构字符串"></a> <a href="https://leetcode-cn.com/problems/reorganize-string/">leetcode-767. 重构字符串</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">reorganizeString</span><span class="params">(String S)</span> </span>&#123;</span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">char</span>[] ch = S.toCharArray();</span><br><span class="line">        Map&lt;Character, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ch.length; i++) &#123;</span><br><span class="line">            map.put(ch[i], map.getOrDefault(ch[i], <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        PriorityQueue&lt;Character&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1, o2) -&gt; map.get(o2).compareTo(map.get(o1)));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Character, Integer&gt; entry : map.entrySet())&#123;</span><br><span class="line">            <span class="comment">// 入队</span></span><br><span class="line">            queue.offer(entry.getKey());</span><br><span class="line">        &#125;</span><br><span class="line">        Character pre = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">            Character c1 = queue.poll();</span><br><span class="line">            Character c2 = queue.poll();</span><br><span class="line">            <span class="keyword">if</span> (c1 == pre &amp;&amp; c2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (c1 != pre)&#123;</span><br><span class="line">                Integer c1Count = map.get(c1);</span><br><span class="line">                map.put(c1, c1Count - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (c1Count &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">// 再次入队</span></span><br><span class="line">                    queue.offer(c1);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(c2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(c2);</span><br><span class="line">                &#125;</span><br><span class="line">                pre = c1;</span><br><span class="line">                ans += c1;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 取c2</span></span><br><span class="line">                Integer c2Count = map.get(c2);</span><br><span class="line">                map.put(c2, c2Count - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (c2Count &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">// 再次入队</span></span><br><span class="line">                    queue.offer(c2);</span><br><span class="line">                &#125;</span><br><span class="line">                queue.offer(c1);</span><br><span class="line">                pre = c2;</span><br><span class="line">                ans += c2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1456. 定长子串中元音的最大数目</title>
      <link href="/2020/11/30/leetcode/leetcode-1456-%E5%AE%9A%E9%95%BF%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%85%83%E9%9F%B3%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE/"/>
      <url>/2020/11/30/leetcode/leetcode-1456-%E5%AE%9A%E9%95%BF%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%85%83%E9%9F%B3%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1456-定长子串中元音的最大数目"><a class="markdownIt-Anchor" href="#leetcode-1456-定长子串中元音的最大数目"></a> <a href="https://leetcode-cn.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/">leetcode-1456. 定长子串中元音的最大数目</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxVowels</span><span class="params">(String s, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        Set&lt;Character&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        set.add(<span class="string">&#x27;e&#x27;</span>);</span><br><span class="line">        set.add(<span class="string">&#x27;i&#x27;</span>);</span><br><span class="line">        set.add(<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">        set.add(<span class="string">&#x27;u&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">while</span>(j &lt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(set.contains(s.charAt(j)))&#123;</span><br><span class="line">                x ++;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">            <span class="keyword">while</span>(j - i == k)&#123;</span><br><span class="line">                ans = Math.max(ans, x);</span><br><span class="line">                <span class="keyword">if</span>(set.contains(s.charAt(i)))&#123;</span><br><span class="line">                    x --;</span><br><span class="line">                &#125;</span><br><span class="line">                i ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1052. 爱生气的书店老板</title>
      <link href="/2020/11/30/leetcode/leetcode-1052-%E7%88%B1%E7%94%9F%E6%B0%94%E7%9A%84%E4%B9%A6%E5%BA%97%E8%80%81%E6%9D%BF/"/>
      <url>/2020/11/30/leetcode/leetcode-1052-%E7%88%B1%E7%94%9F%E6%B0%94%E7%9A%84%E4%B9%A6%E5%BA%97%E8%80%81%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1052-爱生气的书店老板"><a class="markdownIt-Anchor" href="#leetcode-1052-爱生气的书店老板"></a> <a href="https://leetcode-cn.com/problems/grumpy-bookstore-owner/">leetcode-1052. 爱生气的书店老板</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSatisfied</span><span class="params">(<span class="keyword">int</span>[] customers, <span class="keyword">int</span>[] grumpy, <span class="keyword">int</span> X)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = customers.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> grum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(grumpy[j] == <span class="number">1</span>)&#123;</span><br><span class="line">                grum += customers[j];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans += customers[j];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            j++;</span><br><span class="line">            <span class="keyword">while</span>(j - i == X)&#123;</span><br><span class="line">                k = Math.max(grum, k);</span><br><span class="line">                <span class="keyword">if</span>(grumpy[i] == <span class="number">1</span>)&#123;</span><br><span class="line">                    grum -= customers[i];</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans + k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1367. 二叉树中的列表</title>
      <link href="/2020/11/26/leetcode/leetcode-1367-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E5%88%97%E8%A1%A8/"/>
      <url>/2020/11/26/leetcode/leetcode-1367-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1367-二叉树中的列表"><a class="markdownIt-Anchor" href="#leetcode-1367-二叉树中的列表"></a> <a href="https://leetcode-cn.com/problems/linked-list-in-binary-tree/">leetcode-1367. 二叉树中的列表</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubPath</span><span class="params">(ListNode head, TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dfs(head, root) || isSubPath(head, root.left) || isSubPath(head, root.right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(ListNode head, TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(head.val != root.val)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dfs(head.next, root.left) || dfs(head.next, root.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-164. 最大间距</title>
      <link href="/2020/11/26/leetcode/leetcode-164-%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D/"/>
      <url>/2020/11/26/leetcode/leetcode-164-%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-164-最大间距"><a class="markdownIt-Anchor" href="#leetcode-164-最大间距"></a> <a href="https://leetcode-cn.com/problems/maximum-gap/">leetcode-164. 最大间距</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maximumGap</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            max = Math.max(max, nums[i] - nums[i-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1370. 上升下降字符串</title>
      <link href="/2020/11/25/leetcode/leetcode-1370-%E4%B8%8A%E5%8D%87%E4%B8%8B%E9%99%8D%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/11/25/leetcode/leetcode-1370-%E4%B8%8A%E5%8D%87%E4%B8%8B%E9%99%8D%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1370-上升下降字符串"><a class="markdownIt-Anchor" href="#leetcode-1370-上升下降字符串"></a> <a href="https://leetcode-cn.com/problems/increasing-decreasing-string/">leetcode-1370. 上升下降字符串</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sortString</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] ch = s.toCharArray();</span><br><span class="line">        Arrays.sort(ch);</span><br><span class="line">        <span class="keyword">int</span> n = ch.length;</span><br><span class="line">        <span class="comment">// 定义一个访问过的数组</span></span><br><span class="line">        <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (sb.length() != n) &#123;</span><br><span class="line">            <span class="comment">// 记录前一个字符</span></span><br><span class="line">            <span class="keyword">char</span> pre = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[k] &amp;&amp; ch[k] != pre)&#123;</span><br><span class="line">                    sb.append(ch[k]);</span><br><span class="line">                    st[k] = <span class="keyword">true</span>;</span><br><span class="line">                    pre = ch[k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            pre = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = n-<span class="number">1</span>; k &gt;= <span class="number">0</span>; k--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[k] &amp;&amp; ch[k] != pre)&#123;</span><br><span class="line">                    sb.append(ch[k]);</span><br><span class="line">                    st[k] = <span class="keyword">true</span>;</span><br><span class="line">                    pre = ch[k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-06G1垃圾回收器</title>
      <link href="/2020/11/24/jvm/JVM%E7%AC%94%E8%AE%B0-06G1%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/"/>
      <url>/2020/11/24/jvm/JVM%E7%AC%94%E8%AE%B0-06G1%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="g1垃圾回收器"><a class="markdownIt-Anchor" href="#g1垃圾回收器"></a> G1垃圾回收器</h2><p>​G1垃圾回收器是可以同时回收新生代和老年代的对象的，不需要两个垃圾回收器配合起来运作，他一个人就可以搞定所有的垃圾回收，<strong>最大的一个特点，就是把Java堆内存拆分为多个大小相等的Region，并且可以让我们设置一个垃圾回收的预期停顿时间</strong></p><p>​我们直接可以给G1指定，在一个时间内，垃圾回收导致的系统停顿时间不能超过多久，G1全权给你负责，相当于我们就可以直接控制垃圾回收对系统性能的影响，G1可以做到让你来设定垃圾回收对系统的影响，他自己通过把内存拆分为大量小Region，以及追踪每个Region中可以回收的对象大小和预估时间，最后在垃圾回收的时候，尽量把垃圾回收对系统造成的影响控制在你指定的时间范围内，同时在有限的时 间内尽量回收尽可能多的垃圾对象。</p><p>​触发垃圾回收的时候，可以根据设定的预期系统停顿时间，来选择<strong>最少回收时间和最多回收对象的Region</strong>进行垃圾回收，保证GC 对系统停顿的影响在可控范围内，同时还能尽可能回收最多的对象。</p><p>​G1提供了<strong>专门的Region</strong>来存放<strong>大对象</strong>，而不是让大对象进入老年代的Region中，在G1中，大对象的判定规则就是一个大对象<strong>超过了一个Region大小的50%</strong>，比如按照上面算的，每个Region是2MB，只要一个大对 象超过了1MB，就会被放入大对象专门的Region中，而且一个大对象如果太大，可能会横跨多个Region来存放，其实新生代、老年代在回收的时候，会顺带带着大对象Region一起回收，所以这就是在G1内存模型下对大对象的分配和回 收的策略。</p><h3 id="g1老年代垃圾回收机制"><a class="markdownIt-Anchor" href="#g1老年代垃圾回收机制"></a> G1老年代垃圾回收机制</h3><ul><li><p>​首先会触发一个“初始标记”的操作，这个过程是需要进入“Stop the World”的，仅仅只是标记一下GC Roots直接能引用的对象， 这个过程速度是很快的</p></li><li><p>接着会进入“并发标记”的阶段，这个阶段会允许系统程序的运行，同时进行GC Roots追踪，从GC Roots开始追踪所有的存活对象</p></li><li><p>接着是下一个阶段，最终标记阶段，这个阶段会进入“Stop the World”，系统程序是禁止运行的，但是会根据并发标记 阶段记录的 那些对象修改，最终标记一下有哪些存活对象，有哪些是垃圾对象</p></li><li><p>最后一个阶段，就是“混合回收“阶段，这个阶段会计算老年代中每个Region中的存活对象数量，存活对象的占比，还有执行垃圾回 收的预期性能和效率</p></li><li><p>接着会停止系统程序，然后全力以赴尽快进行垃圾回收，此时会选择部分Region进行回收，因为必须让垃圾回收的停顿时间控制在我 们指定的范围内。</p><img src="/../../images/image-20201124201850642.png" alt="image-20201124201850642" style="zoom:67%;" /></li></ul><p>一般在老年代的Region占据了堆内存的Region的45%之后，会触发一个混合回收的过程，也就是Mixed GC，分为了好几个阶段。比如先停止工作，执行一次混合回收回收掉 一些Region，接着恢复系统运行，然后再次停止系统运行，再执行一次混合回收回收掉一些Region。<strong>-XX:G1MixedGCCountTarget</strong>就是在一次混合回收的过程中，最后一个阶段执行几次混合回收，默认值是8次</p><p><strong>那么为什么混合回收要反复回收多次呢？</strong></p><p>​因为你停止系统一会儿，回收掉一些Region，再让系统运行一会儿，然后再次停止系统一会儿，再次回收掉一些Region，这样可以尽 可能让系统不要停顿时间过长，可以在多次回收的间隙，也运行一下。</p><p>​还有一个参数，就是“-XX:G1HeapWastePercent”，默认值是5%，意思就是说，在混合回收的时候，对Region回收都是基于<strong>复制算法</strong>进行的，都是把要回收的Region里的存活对象放入其他 Region，然后这个Region中的垃圾对象全部清理掉，这样的话在回收过程就会不断空出来新的Region，一旦空闲出来的Region数量达到了堆内存的5%，此时就会 立即停止混合回收，意 味着本次混合回收就结束了。</p><p>​还有一个参数，“-XX:G1MixedGCLiveThresholdPercent”，他的默认值是85%，意思就是确定要回收的Region的时候，必须是存活对象低于85%的Region才可以进行回收，否则要是一个Region的存活对象多余85%，你还回收他干什么？这个时候要把85%的对象都拷贝到别的Region，这个成本是很高的。</p><p><strong>回收失败时Full GC</strong></p><p>​如果在进行Mixed回收的时候，无论是年轻代还是老年代都基于复制算法进行回收，都要把各个Region的存活对象拷贝到别的Region 里去，此时万一出现拷贝的过程中发现没有空闲Region可以承载自己的存活对象了，就会触发 一次失败。一旦失败，立马就会<strong>切换为停止系统程序</strong>，然后<strong>采用单线程进行标记、清理和压缩整理</strong>，空闲出来一批Region，这个过程是极慢的。</p><h3 id="g1什么时候触发新生代垃圾回收"><a class="markdownIt-Anchor" href="#g1什么时候触发新生代垃圾回收"></a> G1什么时候触发新生代垃圾回收？</h3><p><strong>Eden区域的空间不够了，就触发新生代gc，但是到底什么时候Eden区域会内存不够呢？</strong></p><p>​会根据你预设的gc停顿时间，给新生代分配一些 Region，然后到一定程度就触发gc，并且把gc时间控制在预设范围内，尽量避免一次性回收过多的Region导致gc停 顿时间超出预期。</p><p><strong>新生代gc如何优化？</strong></p><ul><li>对于G1而言，我们首先应该给整个JVM的堆区域足够的内存</li><li>该合理设置“-XX:MaxGCPauseMills”参数，如果这个参数设置的小了，那么说明每次gc停顿时间可能特别短，此时G1一旦发现你对几十个Region占满了就立即触 发新生代gc，然后gc频率特别频繁，虽然每次gc时间很短</li></ul><p><strong>mixed gc如何优化？</strong></p><p>​mixed gc的触发，是老年代在堆内存里占比超过45%就会触，其实核心的点，还是**-XX:MaxGCPauseMills**这个参数。假设你“-XX:MaxGCPauseMills”参数设置的值很大，导致系统运行很久，新生代可能都占用了堆 内存的60%了，此时才触发新生代gc，那么存活下来的对象可能就会很多，此时就会导致Survivor区域放不下那么多的对象，就会进入老年代中。或者是你新生代gc过后，存活下来的对象过多，导致进入Survivor区域后触发了动态年龄判定规则，达到了Survivor 区域的50%，也会快速导致一些对象进入老年代中。</p><p>​所以这里核心还是在于调节-XX:MaxGCPauseMills这个参数的值，在保证他的新生代gc别太频繁的同时，还得考虑每次gc过后的存活对象有多少，避免存活对象太多快速进入老年代，频繁触发mixed gc。</p>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-209. 长度最小的子数组</title>
      <link href="/2020/11/24/leetcode/leetcode-209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/"/>
      <url>/2020/11/24/leetcode/leetcode-209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-209-长度最小的子数组"><a class="markdownIt-Anchor" href="#leetcode-209-长度最小的子数组"></a> <a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">leetcode-209. 长度最小的子数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minSubArrayLen</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            arr[i] = arr[i - <span class="number">1</span>] + nums[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt;= n; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i+l &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i + l;</span><br><span class="line">                <span class="keyword">if</span> (arr[j+<span class="number">1</span>] - arr[i] &gt;= s)&#123;</span><br><span class="line">                    <span class="keyword">return</span> j - i + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-452. 用最少数量的箭引爆气球</title>
      <link href="/2020/11/24/leetcode/leetcode-452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/"/>
      <url>/2020/11/24/leetcode/leetcode-452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-452-用最少数量的箭引爆气球"><a class="markdownIt-Anchor" href="#leetcode-452-用最少数量的箭引爆气球"></a> <a href="https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/">leetcode-452. 用最少数量的箭引爆气球</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMinArrowShots</span><span class="params">(<span class="keyword">int</span>[][] points)</span> </span>&#123;</span><br><span class="line">        PriorityQueue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(((o1, o2) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.compare(o1[<span class="number">0</span>], o2[<span class="number">0</span>]);</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] point : points)&#123;</span><br><span class="line">            queue.offer(point);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">if</span> (arr == <span class="keyword">null</span>)&#123;</span><br><span class="line">                count ++;</span><br><span class="line">                arr = queue.poll();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 进行区间缩小</span></span><br><span class="line">                <span class="keyword">int</span>[] point = queue.poll();</span><br><span class="line">                <span class="keyword">if</span> (arr[<span class="number">1</span>] &gt;= point[<span class="number">0</span>])&#123;</span><br><span class="line">                    <span class="comment">// 有重合区间,此时缩短区间</span></span><br><span class="line">                    arr[<span class="number">0</span>] = point[<span class="number">0</span>];</span><br><span class="line">                    arr[<span class="number">1</span>] = Math.min(arr[<span class="number">1</span>], point[<span class="number">1</span>]);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    count ++;</span><br><span class="line">                    arr = point;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-222. 完全二叉树的节点个数</title>
      <link href="/2020/11/24/leetcode/leetcode-222-%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/"/>
      <url>/2020/11/24/leetcode/leetcode-222-%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-222-完全二叉树的节点个数"><a class="markdownIt-Anchor" href="#leetcode-222-完全二叉树的节点个数"></a> <a href="https://leetcode-cn.com/problems/count-complete-tree-nodes/">leetcode-222. 完全二叉树的节点个数</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countNodes</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125;</span><br><span class="line">        LinkedList&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span>(node.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-134. 加油站</title>
      <link href="/2020/11/18/leetcode/leetcode-134-%E5%8A%A0%E6%B2%B9%E7%AB%99/"/>
      <url>/2020/11/18/leetcode/leetcode-134-%E5%8A%A0%E6%B2%B9%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-134-加油站"><a class="markdownIt-Anchor" href="#leetcode-134-加油站"></a> <a href="https://leetcode-cn.com/problems/gas-station/">leetcode-134. 加油站</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> pre = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">canCompleteCircuit</span><span class="params">(<span class="keyword">int</span>[] gas, <span class="keyword">int</span>[] cost)</span> </span>&#123;</span><br><span class="line">        n = gas.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            pre = i;</span><br><span class="line">            <span class="keyword">if</span> (dfs(gas, cost, i, gas[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[] gas, <span class="keyword">int</span>[] cost, <span class="keyword">int</span> cur , <span class="keyword">int</span> totalGas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (totalGas &lt; cost[cur]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((cur+<span class="number">1</span>) % n == pre &amp;&amp; totalGas &gt;= cost[cur])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = cur; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> idx = (cur + <span class="number">1</span>) % n;</span><br><span class="line">            <span class="keyword">return</span> dfs(gas, cost, (i+<span class="number">1</span>) % n, totalGas - cost[cur] + gas[idx]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis笔记-06 redis cluster集群hash slot算法</title>
      <link href="/2020/11/17/redis/redis%E7%AC%94%E8%AE%B0-06-redis-cluster%E9%9B%86%E7%BE%A4hash-slot%E7%AE%97%E6%B3%95/"/>
      <url>/2020/11/17/redis/redis%E7%AC%94%E8%AE%B0-06-redis-cluster%E9%9B%86%E7%BE%A4hash-slot%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redis-cluster集群hash-slot算法"><a class="markdownIt-Anchor" href="#redis-cluster集群hash-slot算法"></a> redis cluster集群hash slot算法</h2><p>redis cluster有固定的16384个hash slot，对每个key计算CRC16值，然后对16384取模，可以获取key对应的hash slot</p><p>redis cluster中每个master都会持有部分slot，比如有3个master，那么可能每个master持有5000多个hash slot</p><p>hash slot让node的增加和移除很简单，增加一个master，就将其他master的hash slot移动部分过去，减少一个master，就将它的hash slot移动到其他master上去</p><p>移动hash slot的成本是非常低的</p><p>客户端的api，可以对指定的数据，让他们走同一个hash slot，通过hash tag来实现</p><p><img src="/images/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95%E7%9A%84%E8%AE%B2%E8%A7%A3%E5%92%8C%E4%BC%98%E7%82%B9.png" alt="hash slot" /></p><p><img src="/images/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95%E7%9A%84%E8%99%9A%E6%8B%9F%E8%8A%82%E7%82%B9%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png" alt="虚拟结点实现负载均衡" /></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-05垃圾回收器</title>
      <link href="/2020/11/17/jvm/jvm%E7%AC%94%E8%AE%B0-05%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/"/>
      <url>/2020/11/17/jvm/jvm%E7%AC%94%E8%AE%B0-05%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="垃圾回收器简介"><a class="markdownIt-Anchor" href="#垃圾回收器简介"></a> 垃圾回收器简介</h2><p><strong>Serial和Serial Old垃圾回收器</strong>：分别用来回收新生代和老年代的垃圾对象 工作原理就是单线程运行，垃圾回收的时候会停止我们自己写的系统的其他工作线程，让我们系统直接卡死不动，然 后让他们垃圾回收，这个现在一般写后台Java系统几乎不用。</p><p><strong>ParNew和CMS垃圾回收器</strong>：ParNew现在一般都是用在新生代的垃圾回收器，CMS是用在老年代的垃圾回收器，他 们都是多线程并发的机制，性能更好，现在一般是线上生产系统的标配组合。</p><p><strong>G1垃圾回收器</strong>：统一收集新生代 和老年代，采用了更加优秀的算法和设计机制，是下下周的重点，一周都会来分析 G1垃圾回收器的工作原理和优缺点。</p><h3 id="最常用的新生代垃圾回收器parnew"><a class="markdownIt-Anchor" href="#最常用的新生代垃圾回收器parnew"></a> 最常用的新生代垃圾回收器：ParNew</h3><p>​通常大家线上系统都是ParNew垃圾回收器作为新生 代的垃圾回收器 当然现在即使有了G1，其实很多线上系统还是用的ParNew。新生代的ParNew垃圾回收器主打的就是多线程垃圾回收机制，另外一种Serial垃圾回收器主打的是单线程垃 圾回收，他们俩都是回收新生代的，唯一的区别就是单线程和多线程的区别，但是垃圾回收算法是完全一样的。使用“-XX:+UseParNewGC”选项，只要加入这个选项，JVM启动之后对新生代进行垃圾回收的，就是 ParNew垃圾回收器了。一旦指定了使用ParNew垃圾回收器之后，他默认给自己设置的垃圾回收线程的数量就是跟CPU的核数是一样的，但是如果你一定要自己调节ParNew的垃圾回收线程数量，也是可以的，使用**-XX:ParallelGCThreads**参数即可， 通过他可以设置线程的数量，但是建议一般不要随意动这个参数</p><h4 id="思考"><a class="markdownIt-Anchor" href="#思考"></a> 思考：</h4><ul><li>到底是用单线程垃圾回收好，还是多线程垃圾回收好？ 到底是Serial垃圾回收器好还是ParNew垃圾回收器好？</li></ul><p>​       启动系统的时候是可以区分服务器模式和客户端模式的，如果你启动系统的时候加入“-server”就是服务器模式，如果加入“-cilent”就是客户端模式。一般以服务器启动使用多核cpu时使用ParNew更好，因为多线程并行垃圾回收，充分利用多核CPU资源，可以提升性能。如果运行在windows上如果是单核的使用Serial好，此时你如果要是还是用ParNew来进行垃圾回收，就会导致一个CPU运行多个线程，反而加重了性能开销，可能效率还不如单线程好</p><h3 id="cms垃圾回收器"><a class="markdownIt-Anchor" href="#cms垃圾回收器"></a> CMS垃圾回收器</h3><p>​一般老年代我们选择的垃圾回收器是CMS，他采用的是标记清理算法</p><p>​CMS垃圾回收器采取的是<strong>垃圾回收线程和系统工作线程尽量同时执行的模式</strong>来处理的</p><p>​CMS执行一次垃圾回收的过程分为4个阶段：</p><ul><li><p>初始标记</p></li><li><p>并发标记</p></li><li><p>重新标记</p></li><li><p>并发清理</p></li></ul><p><strong>方法的局部变量和类的静态变量是GC Roots。但是类的实例变量不是GC Roots</strong></p><p><strong>初始标记</strong>：标记出所有GC Roots直接引用的对象，此时会造成STW暂停一切工作线程，但是影响不大，因为他的速度特别快，仅仅只是标记GC Roots直接引用的一些对象</p><p><strong>并发标记</strong>：就是对老年代所有对象进行GC Roots追踪，是最耗时的阶段，在这个阶段会让系统线程可以随意创建各种新对象继续运行，在这个阶段可能会创建各种新的对象，也可能会让部分存活对象失去引用变成垃圾对象，在这个过程中垃圾回收线程会尽可能对已有的对象进行GC Roots追踪</p><p><strong>重新标记</strong>：在并发标记时，一边标记存活对象和垃圾对象，一边系统还在不停运行创建对象，让老对象变成垃圾，所以当并发标记结束时，会有很多存活对象和垃圾对象时并发标记没有标记出来的，此时进入重新标记，会再次进入STW，重新标记时对并发标记阶段中系统运行运行变动过的少数对象进行标记，所有速度会很快</p><p><strong>并发清理</strong>：这个阶段就是让系统程序随意运行，然后他来清理掉之前标记为垃圾的对象即可，并发清理阶段其实是很耗时的，因为需要进行对象的清理，但是他也是跟系统程序并发运行的，所以其实也不影响系统程序的执行</p><p><strong>碎片整理</strong>：整理内存碎片</p><h4 id="并发回收垃圾导致cpu资源紧张"><a class="markdownIt-Anchor" href="#并发回收垃圾导致cpu资源紧张"></a> 并发回收垃圾导致CPU资源紧张</h4><p>​CMS垃圾回收器有一个最大的问题，虽然能在垃圾回收的同时让系统同时工作，但是大家发现没有，在并发标记和并发清理两个最耗时 的阶段，垃圾回收线程和系统工作线程同时工作，会导致有限的CPU资源被垃圾回收线程占用了一部分，并发标记的时候，需要对GC Roots进行深度追踪，看所有对象里面到底有多少人是存活的，但是因为老年代里存活对象是比较多的，这个过程会追踪大量的对象，所以耗时较高。并发清理，又需要把垃圾对象从各种随机的内存位置清理掉，也是比较耗时的。</p><p>​所以在这两个阶段，CMS的垃圾回收线程是比较耗费CPU资源的。CMS默认启动的垃圾回收线程的数量是（CPU核数 + 3）/ 4。我们用最普通的2核4G机器和4核8G机器来计算一下，假设是2核CPU，本来CPU资源就有限，结果此时CMS还会有个“(2 + 3) / 4” = 1个垃圾回收线程，去占用宝贵的一个CPU。</p><p>​所以其实CMS这个并发垃圾回收的机制，第一个问题就是会<strong>消耗CPU资源</strong>。</p><h4 id="concurrent-mode-failure问题"><a class="markdownIt-Anchor" href="#concurrent-mode-failure问题"></a> Concurrent Mode Failure问题</h4><p>​在并发清理阶段，CMS只不过是回收之前标记好的垃圾对象，但是这个阶段系统一直在运行，可能会随着系统运行让一些对象进入老年代，同时还变成垃圾对象，这种垃圾对象是“浮动垃圾”，但是CMS只能回收之前标记出来的垃圾对象，不会回收他们，需要等到下一次GC的时候才会回收他们。</p><p>​以为了保证在CMS垃圾回收期间，还有一定的内存空间让一些对象可以进入老年代，一般会预留一些空间。CMS垃圾回收的触发时机，其中有一个就是当老年代内存占用达到一定比例了，就自动执行GC。<strong>-XX:CMSInitiatingOccupancyFaction</strong>参数可以用来设置老年代占用多少比例的时候触发CMS垃圾回收，JDK 1.6里面默认的值是 92%。</p><p>​那么如果CMS垃圾回收期间，系统程序要放入老年代的对象大于了可用内存空间，这个时候，会发生<strong>Concurrent Mode Failure</strong>，就是说并发垃圾回收失败了，我一边回收，你一边把对象放入老年代，内存都不够了，此时就会自动用<strong>Serial Old</strong>垃圾回收器替代CMS，就是直接强行把系统程序“Stop the World”，重新进行长时间的GC Roots追 踪，标记出来全部垃圾对象，不允许新的对象产生，然后一次性把垃圾对象都回收掉，完事了再恢复系统线程</p><h4 id="内存碎片问题"><a class="markdownIt-Anchor" href="#内存碎片问题"></a> 内存碎片问题</h4><p>​老年代的CMS采用“标记-清理”算法，每次都是标记出来垃圾对象，然后一次性回收掉，这样 会导致大量的内存碎片产生，如果内存碎片太多，会导致后续对象进入老年代找不到可用的连续内存空间了，然后触发Full GC</p><p>​所以CMS不是完全就仅仅用“标记-清理”算法的，因为<strong>太多的内存碎片实际上会导致更加频繁的Full GC</strong>。</p><p>​CMS有一个参数是“-XX:+UseCMSCompactAtFullCollection”，默认就打开了，意思是在Full GC之后要再次进行“Stop the World”，停止工作线程，然后进行碎片整理，就是把存活对象挪到一起，空出来大片连续内存空间，避免内存碎片。</p><p>​还有一个参数是“-XX:CMSFullGCsBeforeCompaction”，这个意思是执行多少次Full GC之后再执行一次内存碎片整理的工作，默认是0，意思就是每次Full GC之后都会进行一次内存整理。</p><h4 id="8g内存下cms常用的jvm配置"><a class="markdownIt-Anchor" href="#8g内存下cms常用的jvm配置"></a> 8G内存下CMS常用的JVM配置</h4><p>-Xms4096M -Xmx4096M -Xmn3072M -Xss1M -XX:PermSize=256M -XX:MaxPermSize=256M -XX:+UseParNewGC - XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFaction=92 -XX:+UseCMSCompactAtFullCollection - XX:CMSFullGCsBeforeCompaction=0 -XX:+CMSParallelInitialMarkEnabled -XX:+CMSScavengeBeforeRemark</p><h4 id="思考-2"><a class="markdownIt-Anchor" href="#思考-2"></a> 思考</h4><ol><li>​为什么老年代的垃圾回收速度会比新生代的垃圾回收速度慢很多倍？到 底慢在哪里？</li></ol><p>​新生代PerNew执行速度其实很快，因为直接从GC Roots出发就追踪哪些对象是活的就行了，新生代存活对象是很少的，这个速度是极快的， 不需要追踪多少对象。 然后直接把存活对象放入Survivor中，就一次性直接回收Eden和之前使用的Survivor了。</p><p>​老年代CMS在并发标记阶段，他需要去追踪所有存活对象，老年代存活对象很多，这个过程就会很慢； 其次并发清理阶段，他不是一次性回收一大片内存，而是找到零零散散在各个地方的垃圾对象，速度也很慢； 最后完事儿了，还得执行一次内存碎片整理，把大量的存活对象给挪在一起，空出来连续内存空间，这个过程还得“Stop the World”，那就更慢了。 万一并发清理期间，剩余内存空间不足以存放要进入老年代的对象了，引发了“Concurrent Mode Failure”问题，那更是麻烦，还得 立马用“Serial Old”垃圾回收器，“Stop the World”之后慢慢重新来一遍回收的过程，这更是耗时了。</p><ol start="2"><li><p>还记得说过几个触发老年代GC的时机吗？</p><p>第一是老年代可用内存小于新生代全部对象的大小，如果没开启空间担保参数，会直接触发Full GC，所以一般空间担保参数都会打开；</p><p>第二是老年代可用内存小于历次新生代GC后进入老年代的平均对象大小，此时会提前Full GC；</p><p>第三是新生代Minor GC后的存活对象大于Survivor，那么就会进入老年代，此时老年代内存不足。</p><p>第四就是“-XX:CMSInitiatingOccupancyFaction”参数，如果老年代可用内存大于历次新生代GC后进入老年代的对象平均大小，但是老年代已经使用的 内存空间超过了这个参数指定的比例，也会自动触发Full GC</p><p>上述情况都会导致老年代Full GC。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-376. 摆动序列</title>
      <link href="/2020/11/17/leetcode/leetcode-376-%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97/"/>
      <url>/2020/11/17/leetcode/leetcode-376-%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-376-摆动序列"><a class="markdownIt-Anchor" href="#leetcode-376-摆动序列"></a> <a href="https://leetcode-cn.com/problems/wiggle-subsequence/">leetcode-376. 摆动序列</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">wiggleMaxLength</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 表示前面是下降</span></span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 表示前面是上升</span></span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;=n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i-<span class="number">1</span>]&gt;nums[i-<span class="number">2</span>])&#123;</span><br><span class="line">                <span class="comment">// 上升</span></span><br><span class="line">                dp[i][<span class="number">1</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[i-<span class="number">1</span>]&lt;nums[i-<span class="number">2</span>])&#123;</span><br><span class="line">                <span class="comment">// 下降</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = dp[i-<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">                dp[i][<span class="number">1</span>] = dp[i-<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Math.max(dp[n][<span class="number">0</span>],dp[n][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-55. 跳跃游戏</title>
      <link href="/2020/11/17/leetcode/leetcode-55-%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/"/>
      <url>/2020/11/17/leetcode/leetcode-55-%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-55-跳跃游戏"><a class="markdownIt-Anchor" href="#leetcode-55-跳跃游戏"></a> <a href="https://leetcode-cn.com/problems/jump-game/">leetcode-55. 跳跃游戏</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canJump</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> idx = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)&#123;</span><br><span class="line">            idx = Math.max(idx, i + nums[i]);</span><br><span class="line">            <span class="keyword">if</span> (idx &gt;= n - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis笔记-05 redis哨兵底层原理</title>
      <link href="/2020/11/12/redis/redis%E7%AC%94%E8%AE%B0-05-redis%E5%93%A8%E5%85%B5%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/"/>
      <url>/2020/11/12/redis/redis%E7%AC%94%E8%AE%B0-05-redis%E5%93%A8%E5%85%B5%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redis哨兵底层原理"><a class="markdownIt-Anchor" href="#redis哨兵底层原理"></a> redis哨兵底层原理</h2><h3 id="1-sdown和odown转换机制"><a class="markdownIt-Anchor" href="#1-sdown和odown转换机制"></a> 1、sdown和odown转换机制</h3><p>sdown和odown两种失败状态</p><p>sdown是主观宕机，就一个哨兵如果自己觉得一个master宕机了，那么就是主观宕机</p><p>odown是客观宕机，如果quorum数量的哨兵都觉得一个master宕机了，那么就是客观宕机</p><p>sdown达成的条件很简单，如果一个哨兵ping一个master，超过了is-master-down-after-milliseconds指定的毫秒数之后，就主观认为master宕机</p><p>sdown到odown转换的条件很简单，如果一个哨兵在指定时间内，收到了quorum指定数量的其他哨兵也认为那个master是sdown了，那么就认为是odown了，客观认为master宕机</p><h3 id="2-哨兵集群的自动发现机制"><a class="markdownIt-Anchor" href="#2-哨兵集群的自动发现机制"></a> 2、哨兵集群的自动发现机制</h3><p>哨兵互相之间的发现，是通过redis的pub/sub系统实现的，每个哨兵都会往__sentinel__:hello这个channel里发送一个消息，这时候所有其他哨兵都可以消费到这个消息，并感知到其他的哨兵的存在</p><p>每隔两秒钟，每个哨兵都会往自己监控的某个master+slaves对应的__sentinel__:hello channel里发送一个消息，内容是自己的host、ip和runid还有对这个master的监控配置</p><p>每个哨兵也会去监听自己监控的每个master+slaves对应的__sentinel__:hello channel，然后去感知到同样在监听这个master+slaves的其他哨兵的存在</p><p>每个哨兵还会跟其他哨兵交换对master的监控配置，互相进行监控配置的同步</p><h3 id="3-slave配置的自动纠正"><a class="markdownIt-Anchor" href="#3-slave配置的自动纠正"></a> 3、slave配置的自动纠正</h3><p>哨兵会负责自动纠正slave的一些配置，比如slave如果要成为潜在的master候选人，哨兵会确保slave在复制现有master的数据; 如果slave连接到了一个错误的master上，比如故障转移之后，那么哨兵会确保它们连接到正确的master上</p><h3 id="4-slave-master选举算法"><a class="markdownIt-Anchor" href="#4-slave-master选举算法"></a> 4、slave-&gt;master选举算法</h3><p>如果一个master被认为odown了，而且majority哨兵都允许了主备切换，那么某个哨兵就会执行主备切换操作，此时首先要选举一个slave来</p><p>会考虑slave的一些信息</p><p>（1）跟master断开连接的时长<br />（2）slave优先级<br />（3）复制offset<br />（4）run id</p><p>如果一个slave跟master断开连接已经超过了down-after-milliseconds的10倍，外加master宕机的时长，那么slave就被认为不适合选举为master</p><p>(down-after-milliseconds * 10) + milliseconds_since_master_is_in_SDOWN_state</p><p>接下来会对slave进行排序</p><p>（1）按照slave优先级进行排序，slave priority越低，优先级就越高<br />（2）如果slave priority相同，那么看replica offset，哪个slave复制了越多的数据，offset越靠后，优先级就越高<br />（3）如果上面两个条件都相同，那么选择一个run id比较小的那个slave</p><h3 id="5-quorum和majority"><a class="markdownIt-Anchor" href="#5-quorum和majority"></a> 5、quorum和majority</h3><p>每次一个哨兵要做主备切换，首先需要quorum数量的哨兵认为odown，然后选举出一个哨兵来做切换，这个哨兵还得得到majority哨兵的授权，才能正式执行切换</p><p>如果quorum &lt; majority，比如5个哨兵，majority就是3，quorum设置为2，那么就3个哨兵授权就可以执行切换</p><p>但是如果quorum &gt;= majority，那么必须quorum数量的哨兵都授权，比如5个哨兵，quorum是5，那么必须5个哨兵都同意授权，才能执行切换</p><h3 id="6-configuration-epoch"><a class="markdownIt-Anchor" href="#6-configuration-epoch"></a> 6、configuration epoch</h3><p>哨兵会对一套redis master+slave进行监控，有相应的监控的配置</p><p>执行切换的那个哨兵，会从要切换到的新master（salve-&gt;master）那里得到一个configuration epoch，这就是一个version号，每次切换的version号都必须是唯一的</p><p>如果第一个选举出的哨兵切换失败了，那么其他哨兵，会等待failover-timeout时间，然后接替继续执行切换，此时会重新获取一个新的configuration epoch，作为新的version号</p><h3 id="7-configuraiton传播"><a class="markdownIt-Anchor" href="#7-configuraiton传播"></a> 7、configuraiton传播</h3><p>哨兵完成切换之后，会在自己本地更新生成最新的master配置，然后同步给其他的哨兵，就是通过之前说的pub/sub消息机制</p><p>这里之前的version号就很重要了，因为各种消息都是通过一个channel去发布和监听的，所以一个哨兵完成一次新的切换之后，新的master配置是跟着新的version号的</p><p>其他的哨兵都是根据版本号的大小来更新自己的master配置的</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis笔记-04 redis异步复制、集群脑裂.md</title>
      <link href="/2020/11/12/redis/redis%E7%AC%94%E8%AE%B0-04%20redis%E5%BC%82%E6%AD%A5%E5%A4%8D%E5%88%B6%E3%80%81%E9%9B%86%E7%BE%A4%E8%84%91%E8%A3%82/"/>
      <url>/2020/11/12/redis/redis%E7%AC%94%E8%AE%B0-04%20redis%E5%BC%82%E6%AD%A5%E5%A4%8D%E5%88%B6%E3%80%81%E9%9B%86%E7%BE%A4%E8%84%91%E8%A3%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redis异步复制-集群脑裂"><a class="markdownIt-Anchor" href="#redis异步复制-集群脑裂"></a> redis异步复制、集群脑裂</h2><h3 id="1-两种数据丢失的情况"><a class="markdownIt-Anchor" href="#1-两种数据丢失的情况"></a> 1、两种数据丢失的情况</h3><p>主备切换的过程，可能会导致数据丢失</p><p>（1）异步复制导致的数据丢失</p><p>因为master -&gt; slave的复制是异步的，所以可能有部分数据还没复制到slave，master就宕机了，此时这些部分数据就丢失了</p><p>（2）脑裂导致的数据丢失</p><p>脑裂，也就是说，某个master所在机器突然脱离了正常的网络，跟其他slave机器不能连接，但是实际上master还运行着</p><p>此时哨兵可能就会认为master宕机了，然后开启选举，将其他slave切换成了master</p><p>这个时候，集群里就会有两个master，也就是所谓的脑裂</p><p>此时虽然某个slave被切换成了master，但是可能client还没来得及切换到新的master，还继续写向旧master的数据可能也丢失了</p><p>因此旧master再次恢复的时候，会被作为一个slave挂到新的master上去，自己的数据会清空，重新从新的master复制数据</p><hr /><h3 id="2-解决异步复制和脑裂导致的数据丢失"><a class="markdownIt-Anchor" href="#2-解决异步复制和脑裂导致的数据丢失"></a> 2、解决异步复制和脑裂导致的数据丢失</h3><p>min-slaves-to-write 1<br />min-slaves-max-lag 10</p><p>要求至少有1个slave，数据复制和同步的延迟不能超过10秒</p><p>如果说一旦所有的slave，数据复制和同步的延迟都超过了10秒钟，那么这个时候，master就不会再接收任何请求了</p><p>上面两个配置可以减少异步复制和脑裂导致的数据丢失</p><p>（1）减少异步复制的数据丢失</p><p>有了min-slaves-max-lag这个配置，就可以确保说，一旦slave复制数据和ack延时太长，就认为可能master宕机后损失的数据太多了，那么就拒绝写请求，这样可以把master宕机时由于部分数据未同步到slave导致的数据丢失降低的可控范围内</p><p>（2）减少脑裂的数据丢失</p><p>如果一个master出现了脑裂，跟其他slave丢了连接，那么上面两个配置可以确保说，如果不能继续给指定数量的slave发送数据，而且slave超过10秒没有给自己ack消息，那么就直接拒绝客户端的写请求</p><p>这样脑裂后的旧master就不会接受client的新数据，也就避免了数据丢失</p><p>上面的配置就确保了，如果跟任何一个slave丢了连接，在10秒后发现没有slave给自己ack，那么就拒绝新的写请求</p><p>因此在脑裂场景下，最多就丢失10秒的数据</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1123. 最深叶节点的最近公共祖先</title>
      <link href="/2020/11/12/leetcode/leetcode-1123-%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
      <url>/2020/11/12/leetcode/leetcode-1123-%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1123-最深叶节点的最近公共祖先"><a class="markdownIt-Anchor" href="#1123-最深叶节点的最近公共祖先"></a> <a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-deepest-leaves/">1123. 最深叶节点的最近公共祖先</a></h4><p><strong>原始思路：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    LinkedList&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">    HashSet&lt;TreeNode&gt; deepSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    TreeNode ans;</span><br><span class="line">    <span class="keyword">boolean</span> bool = <span class="keyword">true</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">lcaDeepestLeaves</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        search(root);</span><br><span class="line">        ans = root;</span><br><span class="line">        dfs(root, <span class="keyword">new</span> HashSet&lt;TreeNode&gt;());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HashSet&lt;TreeNode&gt; <span class="title">dfs</span><span class="params">(TreeNode root, HashSet&lt;TreeNode&gt; allSet)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span> || !bool) &#123;</span><br><span class="line">            <span class="keyword">return</span> allSet;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HashSet&lt;TreeNode&gt; leftSet = <span class="keyword">new</span> HashSet&lt;TreeNode&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            leftSet = dfs(root.left, leftSet);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HashSet&lt;TreeNode&gt; rightSet = <span class="keyword">new</span> HashSet&lt;TreeNode&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            rightSet = dfs(root.right, rightSet);</span><br><span class="line">        &#125;</span><br><span class="line">        leftSet.addAll(rightSet);</span><br><span class="line">        allSet.addAll(leftSet);</span><br><span class="line">        allSet.add(root);</span><br><span class="line">        <span class="keyword">if</span> (allSet.containsAll(deepSet) &amp;&amp; bool) &#123;</span><br><span class="line">            ans = root;</span><br><span class="line">            bool = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> allSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">search</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            deepSet.clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                deepSet.add(node);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>左右递归寻找最大深度</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">lcaDeepestLeaves</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> left = dfs(root.left);</span><br><span class="line">        <span class="keyword">int</span> right = dfs(root.right);</span><br><span class="line">        <span class="keyword">if</span> (left == right)&#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">            <span class="keyword">return</span> lcaDeepestLeaves(root.left);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> lcaDeepestLeaves(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> left = dfs(root.left);</span><br><span class="line">        <span class="keyword">int</span> right = dfs(root.right);</span><br><span class="line">        <span class="keyword">return</span> Math.max(left, right) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-31. 下一个排列</title>
      <link href="/2020/11/12/leetcode/leetcode-31-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/"/>
      <url>/2020/11/12/leetcode/leetcode-31-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="31-下一个排列"><a class="markdownIt-Anchor" href="#31-下一个排列"></a> <a href="https://leetcode-cn.com/problems/next-permutation/">31. 下一个排列</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nextPermutation</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n-<span class="number">1</span>; i &gt;= <span class="number">0</span> ; i--) &#123;</span><br><span class="line">            <span class="comment">// 选出比nums[i]大的最小的index</span></span><br><span class="line">            <span class="keyword">int</span> k = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;= n - <span class="number">1</span> ; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j] &gt; nums[i])&#123;</span><br><span class="line">                    <span class="keyword">if</span> (k == -<span class="number">1</span> || nums[j] &lt; nums[k])&#123;</span><br><span class="line">                        k = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (k != -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> tmp = nums[k];</span><br><span class="line">                nums[k] = nums[i];</span><br><span class="line">                nums[i] = tmp;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 对于结果进行排序</span></span><br><span class="line">                Arrays.sort(nums, i+<span class="number">1</span>, n);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 进行倒序</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= j) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> tmp = nums[i];</span><br><span class="line">            nums[i] = nums[j];</span><br><span class="line">            nums[j] = tmp;</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis笔记-03 redis replication的原理.md</title>
      <link href="/2020/11/10/redis/redis%E7%AC%94%E8%AE%B0-03%20redis%20replication%E7%9A%84%E5%8E%9F%E7%90%86/"/>
      <url>/2020/11/10/redis/redis%E7%AC%94%E8%AE%B0-03%20redis%20replication%E7%9A%84%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redis-replication的原理"><a class="markdownIt-Anchor" href="#redis-replication的原理"></a> redis replication的原理</h2><h3 id="1-复制的完整流程"><a class="markdownIt-Anchor" href="#1-复制的完整流程"></a> 1、复制的完整流程</h3><p>（1）slave node启动，仅仅保存master node的信息，包括master node的host和ip，但是复制流程没开始</p><p>master host和ip是从哪儿来的，redis.conf里面的slaveof配置的</p><p>（2）slave node内部有个定时任务，每秒检查是否有新的master node要连接和复制，如果发现，就跟master node建立socket网络连接<br />（3）slave node发送ping命令给master node<br />（4）口令认证，如果master设置了requirepass，那么salve node必须发送masterauth的口令过去进行认证<br />（5）master node第一次执行全量复制，将所有数据发给slave node<br />（6）master node后续持续将写命令，异步复制给slave node</p><h3 id="2-数据同步相关的核心机制"><a class="markdownIt-Anchor" href="#2-数据同步相关的核心机制"></a> 2、数据同步相关的核心机制</h3><p>指的就是第一次slave连接msater的时候，执行的全量复制，那个过程里面你的一些细节的机制</p><p>（1）master和slave都会维护一个offset</p><p>master会在自身不断累加offset，slave也会在自身不断累加offset<br />slave每秒都会上报自己的offset给master，同时master也会保存每个slave的offset</p><p>这个倒不是说特定就用在全量复制的，主要是master和slave都要知道各自的数据的offset，才能知道互相之间的数据不一致的情况</p><p>（2）backlog</p><p>master node有一个backlog，默认是1MB大小<br />master node给slave node复制数据时，也会将数据在backlog中同步写一份<br />backlog主要是用来做全量复制中断候的增量复制的</p><p>（3）master run id</p><p>info server，可以看到master run id<br />如果根据host+ip定位master node，是不靠谱的，如果master node重启或者数据出现了变化，那么slave node应该根据不同的run id区分，run id不同就做全量复制<br />如果需要不更改run id重启redis，可以使用redis-cli debug reload命令</p><p>（4）psync</p><p>从节点使用psync从master node进行复制，psync runid offset<br />master node会根据自身的情况返回响应信息，可能是FULLRESYNC runid offset触发全量复制，可能是CONTINUE触发增量复制</p><h3 id="3-全量复制"><a class="markdownIt-Anchor" href="#3-全量复制"></a> 3、全量复制</h3><p>（1）master执行bgsave，在本地生成一份rdb快照文件<br />（2）master node将rdb快照文件发送给salve node，如果rdb复制时间超过60秒（repl-timeout），那么slave node就会认为复制失败，可以适当调节大这个参数<br />（3）对于千兆网卡的机器，一般每秒传输100MB，6G文件，很可能超过60s<br />（4）master node在生成rdb时，会将所有新的写命令缓存在内存中，在salve node保存了rdb之后，再将新的写命令复制给salve node<br />（5）client-output-buffer-limit slave 256MB 64MB 60，如果在复制期间，内存缓冲区持续消耗超过64MB，或者一次性超过256MB，那么停止复制，复制失败<br />（6）slave node接收到rdb之后，清空自己的旧数据，然后重新加载rdb到自己的内存中，同时基于旧的数据版本对外提供服务<br />（7）如果slave node开启了AOF，那么会立即执行BGREWRITEAOF，重写AOF</p><p>rdb生成、rdb通过网络拷贝、slave旧数据的清理、slave aof rewrite，很耗费时间</p><p>如果复制的数据量在4G~6G之间，那么很可能全量复制时间消耗到1分半到2分钟</p><h3 id="4-增量复制"><a class="markdownIt-Anchor" href="#4-增量复制"></a> 4、增量复制</h3><p>（1）如果全量复制过程中，master-slave网络连接断掉，那么salve重新连接master时，会触发增量复制<br />（2）master直接从自己的backlog中获取部分丢失的数据，发送给slave node，默认backlog就是1MB<br />（3）msater就是根据slave发送的psync中的offset来从backlog中获取数据的</p><h3 id="5-heartbeat"><a class="markdownIt-Anchor" href="#5-heartbeat"></a> 5、heartbeat</h3><p>主从节点互相都会发送heartbeat信息</p><p>master默认每隔10秒发送一次heartbeat，salve node每隔1秒发送一个heartbeat</p><h3 id="6-异步复制"><a class="markdownIt-Anchor" href="#6-异步复制"></a> 6、异步复制</h3><p>master每次接收到写命令之后，先在内部写入数据，然后异步发送给slave node</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis笔记-02 主从复制原理、断点续传</title>
      <link href="/2020/11/09/redis/redis%E7%AC%94%E8%AE%B0-02%20%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E3%80%81%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/"/>
      <url>/2020/11/09/redis/redis%E7%AC%94%E8%AE%B0-02%20%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E3%80%81%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="主从复制原理-断点续传"><a class="markdownIt-Anchor" href="#主从复制原理-断点续传"></a> 主从复制原理、断点续传</h2><h3 id="1-主从架构的核心原理"><a class="markdownIt-Anchor" href="#1-主从架构的核心原理"></a> 1、主从架构的核心原理</h3><p>当启动一个slave node的时候，它会发送一个PSYNC命令给master node</p><p>如果这是slave node重新连接master node，那么master node仅仅会复制给slave部分缺少的数据; 否则如果是slave node第一次连接master node，那么会触发一次full resynchronization</p><p>开始full resynchronization的时候，master会启动一个后台线程，开始生成一份RDB快照文件，同时还会将从客户端收到的所有写命令缓存在内存中。RDB文件生成完毕之后，master会将这个RDB发送给slave，slave会先写入本地磁盘，然后再从本地磁盘加载到内存中。然后master会将内存中缓存的写命令发送给slave，slave也会同步这些数据。</p><p>slave node如果跟master node有网络故障，断开了连接，会自动重连。master如果发现有多个slave node都来重新连接，仅仅会启动一个rdb save操作，用一份数据服务所有slave node。</p><h3 id="2-主从复制的断点续传"><a class="markdownIt-Anchor" href="#2-主从复制的断点续传"></a> 2、主从复制的断点续传</h3><p>从redis 2.8开始，就支持主从复制的断点续传，如果主从复制过程中，网络连接断掉了，那么可以接着上次复制的地方，继续复制下去，而不是从头开始复制一份</p><p>master node会在内存中存储一个backlog，master和slave都会保存一个replica offset还有一个master id，offset就是保存在backlog中的。如果master和slave网络连接断掉了，slave会让master从上次的replica offset开始继续复制</p><p>但是如果没有找到对应的offset，那么就会执行一次resynchronization</p><h3 id="3-无磁盘化复制"><a class="markdownIt-Anchor" href="#3-无磁盘化复制"></a> 3、无磁盘化复制</h3><p>master在内存中直接创建rdb，然后发送给slave，不会在自己本地落地磁盘了</p><p>repl-diskless-sync<br />repl-diskless-sync-delay，等待一定时长再开始复制，因为要等更多slave重新连接过来</p><h3 id="4-过期key处理"><a class="markdownIt-Anchor" href="#4-过期key处理"></a> 4、过期key处理</h3><p>slave不会过期key，只会等待master过期key。如果master过期了一个key，或者通过LRU淘汰了一个key，那么会模拟一条del命令发送给slave。</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1448. 统计二叉树中好节点的数目</title>
      <link href="/2020/11/09/leetcode/leetcode-1448-%E7%BB%9F%E8%AE%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE/"/>
      <url>/2020/11/09/leetcode/leetcode-1448-%E7%BB%9F%E8%AE%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1448-统计二叉树中好节点的数目"><a class="markdownIt-Anchor" href="#leetcode-1448-统计二叉树中好节点的数目"></a> <a href="https://leetcode-cn.com/problems/count-good-nodes-in-binary-tree/">leetcode-1448. 统计二叉树中好节点的数目</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">goodNodes</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root, Integer.MIN_VALUE);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root, <span class="keyword">int</span> preMax)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.val &gt;= preMax) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dfs(root.right, Math.max(preMax, root.val));</span><br><span class="line">        dfs(root.left, Math.max(preMax, root.val));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-973. 最接近原点的 K 个点</title>
      <link href="/2020/11/09/leetcode/leetcode-973-%E6%9C%80%E6%8E%A5%E8%BF%91%E5%8E%9F%E7%82%B9%E7%9A%84-K-%E4%B8%AA%E7%82%B9/"/>
      <url>/2020/11/09/leetcode/leetcode-973-%E6%9C%80%E6%8E%A5%E8%BF%91%E5%8E%9F%E7%82%B9%E7%9A%84-K-%E4%B8%AA%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-973-最接近原点的-k-个点"><a class="markdownIt-Anchor" href="#leetcode-973-最接近原点的-k-个点"></a> <a href="https://leetcode-cn.com/problems/k-closest-points-to-origin/">leetcode-973. 最接近原点的 K 个点</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] kClosest(<span class="keyword">int</span>[][] points, <span class="keyword">int</span> K) &#123;</span><br><span class="line">        PriorityQueue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1, o2) -&gt; &#123;</span><br><span class="line">           Double dist1 = Math.sqrt(o1[<span class="number">0</span>]*o1[<span class="number">0</span>] + o1[<span class="number">1</span>]*o1[<span class="number">1</span>]);</span><br><span class="line">           Double dist2 = Math.sqrt(o2[<span class="number">0</span>]*o2[<span class="number">0</span>] + o2[<span class="number">1</span>]*o2[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">return</span> dist1.compareTo(dist2); </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] arr : points)&#123;</span><br><span class="line">            queue.offer(arr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[][] ans = <span class="keyword">new</span> <span class="keyword">int</span>[K][<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (K &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] tmp = queue.poll();</span><br><span class="line">            ans[i++] = tmp;</span><br><span class="line">            K--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis笔记-01 rdb和aof的工作流程</title>
      <link href="/2020/11/03/redis/redis%E7%AC%94%E8%AE%B0-01%20rdb%E5%92%8Caof%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
      <url>/2020/11/03/redis/redis%E7%AC%94%E8%AE%B0-01%20rdb%E5%92%8Caof%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redis笔记"><a class="markdownIt-Anchor" href="#redis笔记"></a> redis笔记</h2><p>RDB：每隔几分钟生成redis内存中一份完整的快照</p><p>AOF：存放每条写命令，当大到一定的程度，制定rewrite操作，基于当时redis的内存结构，来重新构造一个更小的AOF文件，然后将旧的很大的文件删除</p><h3 id="rdb持久化机制的工作流程"><a class="markdownIt-Anchor" href="#rdb持久化机制的工作流程"></a> RDB持久化机制的工作流程</h3><ol><li>redis根据配置尝试去生成rdb快照文件</li><li>fork一个子线程出来</li><li>子进程尝试将数据dump到临时的rdb快照文件中</li><li>完成rdb快照文件的生成之后，就会替换之前的旧的快照文件</li></ol><h3 id="aof持久化机制的工作流程"><a class="markdownIt-Anchor" href="#aof持久化机制的工作流程"></a> AOF持久化机制的工作流程</h3><ol><li>redis fork一个子进程</li><li>子进程基于当前内存中的数据，构建日志，开始往一个新的临时的AOF文件中写入日志</li><li>redis主进程，接收到client新的写操作之后，在内存中写入日志，同时新的日志也继续写入旧的AOF文件</li><li>子进程写完新的日志文件之后，redis主进程将内存中的新日志再次追加到新的AOF文件中</li><li>用新的日志文件替换掉旧的日志文件</li></ol>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-941. 有效的山脉数组</title>
      <link href="/2020/11/03/leetcode/leetcode-941-%E6%9C%89%E6%95%88%E7%9A%84%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84/"/>
      <url>/2020/11/03/leetcode/leetcode-941-%E6%9C%89%E6%95%88%E7%9A%84%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-941-有效的山脉数组"><a class="markdownIt-Anchor" href="#leetcode-941-有效的山脉数组"></a> <a href="https://leetcode-cn.com/problems/valid-mountain-array/">leetcode-941. 有效的山脉数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validMountainArray</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 确定波峰位置</span></span><br><span class="line">        <span class="keyword">int</span> n = A.length;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n-<span class="number">1</span>; i++)&#123;</span><br><span class="line">            <span class="comment">//判断左边是全上升,右边是全下降</span></span><br><span class="line">            <span class="keyword">int</span> k1 = i;</span><br><span class="line">            <span class="keyword">int</span> k2 = i;</span><br><span class="line">            <span class="keyword">while</span>(k1 &gt;= <span class="number">1</span> &amp;&amp; A[k1] &gt; A[k1-<span class="number">1</span>])&#123;</span><br><span class="line">                k1--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(k1 != <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(k2 &lt; n-<span class="number">1</span> &amp;&amp; A[k2] &gt; A[k2+<span class="number">1</span>])&#123;</span><br><span class="line">                k2++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(k2 == n -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-04jvm核心参数</title>
      <link href="/2020/11/02/jvm/JVM%E7%AC%94%E8%AE%B0-04jvm%E6%A0%B8%E5%BF%83%E5%8F%82%E6%95%B0/"/>
      <url>/2020/11/02/jvm/JVM%E7%AC%94%E8%AE%B0-04jvm%E6%A0%B8%E5%BF%83%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="核心参数"><a class="markdownIt-Anchor" href="#核心参数"></a> 核心参数</h2><p>-Xms ：java堆内存的大小</p><p>-Xmx ：java最大可分配的堆内存</p><p>-Xmn ： 新生代的堆内存大小，扣除之后就为老年代的堆内存大小</p><p>-XX:Permsize || -XX:MetaspaceSize ：永久代大小</p><p>-XX:MaxPermsize  || -XX:MaxMetaspaceSize ：永久代最大大小</p><p>-Xss ：每个线程的栈内存大小</p><p>-XX:- HandlePromotionFailure:设置为true时，Minor GC会判断平均每个GC剩余的对象大小是否能放入永久代</p><p>-XX:PretenureSizeThreshold：大对象直接进入老年代的阈值</p><p>-XX:MaxTenuringThreshold：新生代进入老年代的年龄阈值</p><p>-XX:+UseParNewGC：新生代使用parNew垃圾回收器</p><p>-XX:ParallelGCThreads：并行垃圾回收线程的数量，一般不建议修改这个参数</p><p>-XX:+UseCMSCompactAtFullCollection：CMS full gc后进行内存整理</p><p>-XX:CMSFullGCsBeforeCompaction：几次Full GC之后 会触发一次Compaction操作</p><p>-XX:+CMSParallelInitialMarkEnabled：这个参数会在CMS垃圾回收器的“初始标记”阶段开启多线程并发执行</p><p>-XX:+CMSScavengeBeforeRemark：这个参数会在CMS的重新标记阶段之前，先尽量执行一次Young GC</p><p>-XX:SoftRefLRUPolicyMSPerMB：软引用的时间限制，默认值是1000毫秒，设置为0会被快速回收，会导致JVM反射动态生成类出现大幅度波动，千万别让设置为0，可以设置个1000，2000，3000，或者5000毫秒，都可以，软引用能否回收的判断公式clock - timestamp &lt;= freespace * SoftRefLRUPolicyMSPerMB，“clock - timestamp”代表了一个软引用对象他有多久没被访问过了，freespace代表JVM中的空闲内存空 间，SoftRefLRUPolicyMSPerMB代表每一MB空闲内存空间可以允许SoftReference对象存活多久</p><p>-XX:TraceClassLoading ：追踪类加载的情况</p><p>-XX:TraceClassUnloading：追踪类卸载的情况</p><p>-XX:G1HeapRegionSize：指定G1 region的大小</p><p>-XX:G1NewSizePercent：指定G1新生代初始占比</p><p>-XX:G1MaxNewSizePercen：指定G1新生代最大占比</p><p>-XX:MaxGCPauseMills：G1执行GC时最多让系统停顿的时间</p><p>-XX:InitiatingHeapOccupancyPercent：默认值是45%，G1老年代占据了堆内存的45%的Region的时候，此时就会尝试触发一个新生代+老年代一起回收的混合回收阶段</p><p>-XX:G1MixedGCCountTarget：就是在一次混合回收的过程中，最后一个阶段执行几次混合回收，默认值是8次</p><p>-XX:G1HeapWastePercent：G1混合回收的region达到这个设置的比例就停止混合回收</p><p>-XX:G1MixedGCLiveThresholdPercent：默认值85%，G1回收region的时候，必须存活对象小于这个设定的值才能被回收</p><p>-XX:+PrintGCDetils：打印详细的gc日志</p><p>-XX:+PrintGCTimeStamps：这个参数可以打印出来每次GC发生的时间</p><p>-Xloggc:gc.log：这个参数可以设置将gc日志写入一个磁盘文件</p><p>-XX:+DisableExplicitGC：禁止显示执行GC</p><p>-XX:+HeapDumpOnOutOfMemoryError：OOM时导出内存快照</p><p>-XX:HeapDumpPath=/usr/local/app/oom：OOM时导出内存快照地址</p>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-349. 两个数组的交集</title>
      <link href="/2020/11/02/leetcode/leetcode-349-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/"/>
      <url>/2020/11/02/leetcode/leetcode-349-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-349-两个数组的交集"><a class="markdownIt-Anchor" href="#leetcode-349-两个数组的交集"></a> <a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">leetcode-349. 两个数组的交集</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] intersection(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Set&lt;Integer&gt; ans = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums2.length; i++)&#123;</span><br><span class="line">            set.add(nums2[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums1.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(set.contains(nums1[i]))&#123;</span><br><span class="line">                ans.add(nums1[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[ans.size()];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>(Integer k : ans)&#123;</span><br><span class="line">            result[i++] = k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-03垃圾回收机制</title>
      <link href="/2020/11/02/jvm/JVM%E7%AC%94%E8%AE%B0-03%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/"/>
      <url>/2020/11/02/jvm/JVM%E7%AC%94%E8%AE%B0-03%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="jvm垃圾回收机制"><a class="markdownIt-Anchor" href="#jvm垃圾回收机制"></a> JVM垃圾回收机制</h2><h3 id="新生代垃圾回收"><a class="markdownIt-Anchor" href="#新生代垃圾回收"></a> 新生代垃圾回收</h3><p>​新生代我们预先分配的内存空间，几乎都被全部对象给占满了！此时假设我们代码继续运行，他需要在新生代 里去分配一个对象，怎么办？发现新生代里内存空间都不够了！ 这个时候，就会触发一次新生代内存空间的垃圾回收，新生代内存空间的垃圾回收，也称之为“Minor GC”，有的时候我们 也叫“Young GC”，他会尝试把新生代里那些没有人引用的垃圾对象，都给回收掉。</p><p>新生代变成老年代</p><p>​如果一个实例对象在新生代中，成功的在15次垃圾回收（young gc）之后，还是没被回收掉，就说明他已经15岁了，然后他会被转移到Java堆内存的老年代中去</p><p>新生代垃圾回收算法为：<strong>标记删除法、复制算法、分代回收算法</strong></p><h4 id="标记清除算法"><a class="markdownIt-Anchor" href="#标记清除算法"></a> <strong>标记清除算法</strong></h4><p><img src="/images/20200522134558946.png" alt="在这里插入图片描述" /><br /><strong>步骤</strong>：<br />1、先找到GC roots根来遍历将非垃圾对象进行标记。<br />2、他会将垃圾进行清除，就是图中的情况。</p><p><strong>注意</strong>：jvm并不是真正的把垃圾对象进行了遍历，把内部的数据都删除了，不是这样的，而是把垃圾对象的首地址和尾地址进行了保存，等到再次分配内存时，直接去地址列表中分配，所以清除的效率高。</p><p><strong>优点</strong>：清除速度快，效率高。</p><p><strong>缺点</strong>：会产生大量的内存碎片（就是很多不连续的内存空间），如果放入一个大的数组的时候，没有连续的内存放置大的数组，就会出现内存溢出，但是所有的内存碎片加起来可以放置一个大的对象，所有说内存使用率低，造成内存不连续。</p><h4 id="复制算法"><a class="markdownIt-Anchor" href="#复制算法"></a> <strong>复制算法</strong></h4><p><img src="/images/20200522140001248.png" alt="在这里插入图片描述" /><br /><strong>注意：左边是from区，右边是to区</strong></p><p><strong>步骤</strong>：<br />1、先找到GC roots根来遍历将非垃圾对象进行标记。<br />2、然后将from区的非垃圾对象进行复制，到to区，并且进行整理，整理完成之后会将from区的数据进行清空，然后交换from和to区，使得from区一直是存储数据，to区一直空白的。</p><p><strong>优点</strong>：也不会出现内存碎片<br /><strong>缺点</strong>：有效内存只有一半，只有一半存储数据，太浪费空间</p><h4 id="分代回收算法"><a class="markdownIt-Anchor" href="#分代回收算法"></a> <strong>分代回收算法</strong></h4><p><img src="/images/20200522141003717.png" alt="在这里插入图片描述" /><br />!(/images/20200522141123556.png)<br /><strong>对象头有个参数为分代年龄</strong>。</p><p><strong>新生代内存区域划分</strong>：一般情况下，新生代占1/3，老年代占2/3，新生代分为一块Eden区域和两块Survivor区域，一般为Eden区域占80%，两块Survivor区域分别占10%，一般Eden区域进行垃圾回收后存活下来的对象约1%左右转移到Survivor区域</p><p><strong>对象年龄判断</strong></p><p>​新生代中的对象每经过一次GC，其年龄对象就会增长一岁，当经过15次GC后，即年龄对象达到15岁就会被移到老年代，具体多少岁进入老年代，可以通过JVM参数**-XX:MaxTenuringThreshold**，默认是15</p><p><strong>动态对象年龄判断</strong></p><p>​存在另一个规则可以使对象不用等待15次GC过后才进入老年代，大致规则是假如当前对象的Survivor区域里，一批对象的总大小大于这块Survivor区域的内存大小的50%，那么此时大于等于这批年龄的对象，就可以直接进入老年代，另外这里要理清楚一个概念，就是实际这个规则运行的时候是如下的逻辑：年龄1+年龄2+年龄n的多个年龄对象总和超过了Survivor区 域的50%，此时就会把年龄n以上的对象都放入老年代。</p><p><strong>大对象直接进入老年代</strong></p><p>​有一个JVM参数，就是**-XX:PretenureSizeThreshold**，可以把他的值设置为字节数，比如“1048576”字节，就是1MB。他的意思就是，如果你要创建一个大于这个大小的对象，比如一个超大的数组，或者是别的啥东西，此时就直接把这个大对象放到老年代里去，压根儿不会经过新生代。就是要避免新生代里出现那种大对象，然后屡次躲过GC，还得把他在两个Survivor区域里来回复制多次之后才能进入老年代，在内存中多次复制会耗费时间</p><p><strong>Minor GC后的对象太多无法放入Survivor区怎么办？</strong></p><p>​如果在Minor GC之后发现生育的存活对象太多，没办法放入另一块的Survicor区时，会将这些对象直接转移到老年代去</p><h3 id="老年代垃圾回收"><a class="markdownIt-Anchor" href="#老年代垃圾回收"></a> 老年代垃圾回收</h3><p>​老年代垃圾回收算法为：<strong>标记整理法</strong></p><h4 id="标记整理法"><a class="markdownIt-Anchor" href="#标记整理法"></a> <strong>标记整理法</strong></h4><p><img src="/images/20200522135432187.png" alt="在这里插入图片描述" /><br /><strong>步骤</strong>：<br />1、先找到GC roots根来遍历将非垃圾对象进行标记。<br />2、它会将垃圾进行清除，并且会将非垃圾对象进行向前移动，使得内存紧凑。</p><p><strong>优点</strong>：不会出现内存碎片，提高了内存的利用率<br /><strong>缺点</strong>：清除速度慢，因为在整理期间会有对象的拷贝和移动，并且引用内存的对象的地址要进行改变。</p><p><strong>老年代空间分配担保规则</strong></p><p>​如果新生代里有大量对象存活下来，确实在自己的Survivor区域中放不下了，必须转移到老年代，那么如果老年代的空间也不够放下这些对象了，此时JVM在执行任何一次Minor GC之前，会先检查一下老年代的可用内存空间是否大于新生代所有对象的总大小</p><p>​为啥检查这个呢？因为最极端的情况下，可能新生代Minor GC过后，所有对象都存活下来了，那岂不是新生代所有对象全部要进入老年代？如果说发现老年代的内存大小是大于新生代所有对象的，此时就可以放心大胆的对新生代发起一次Minor GC了，因为即使Minor GC之 后所有对象都存活，Survivor区放不下了，也可以转移到老年代去。但是假如执行Minor GC之前，发现老年代的可用内存已经小于了新生代的全部对象大小了，所以假如Minor GC之前，发现老年代的可用内存已经小于了新生代的全部对象大小了，就会看一个**-XX:- HandlePromotionFailure**的参数是否设置了，如果有这个参数，那么就会继续尝试进行下一步判断，就是看看老年代的内存大小，是否大于之前每一次Minor GC后进入老年代的对象的平均大小，之前每次Minor GC后，平均都有10MB左右的对象会进入老年代，那么此时老年代可用内存大于10MB。这就说明，很可能这次Minor GC过后也是差不多10MB左右的对象会进入老年代，此时老年代空间是够的</p><p>如果新生代的对象大于老年代剩余的空间并且没有设置**-XX:- HandlePromotionFailure<strong>参数，此时就会触发一次Full GC，就是对老年代进行垃圾回收，尽量腾出来一些内存空间，然后再执行Minor GC。如果设置了</strong>-XX:- HandlePromotionFailure**参数，此时就冒险尝试一下Minor GC，此时进行Minor GC有几种可能：</p><ol><li><p>第一种可能，Minor GC过后，剩余的存活对象的大小，是小于Survivor区的大小的，那么此时存活对象进入Survivor 区域即可。</p></li><li><p>第二种可能，Minor GC过后，剩余的存活对象的大小，是大于 Survivor区域的大小，但是是小于老年代可用内存大小 的，此时就直接进入老年代即可。</p></li><li><p>第三种可能，很不幸，Minor GC过后，剩余的存活对象的大小，大于了Survivor区域的大小，也大于了老年代可用内 存的大小。此时老年代都放不下这些存活对象了，就会发生“Handle Promotion Failure”的情况，这个时候就会触 发一次Full GC，Full GC就是对老年代进行垃圾回收，同时也一般会对新生代进行垃圾回收。如果要是Full GC过后，老年代还是没有足够的空间存放Minor GC过后的剩余存活对象，那么此时就会导致所谓的 “OOM”内存溢出了</p><img src="/images/image-20201117191911086.png" alt="image-20201117191911086" style="zoom: 80%;" /></li></ol><p>老年代的垃圾回收算法的速度至少比新生代的垃圾回收算法的速度慢10倍，如果系统频繁出现老年代的Full GC垃圾回收，会导致系统性能被严重影响，出现频繁卡顿的情况。</p><h3 id="思考题"><a class="markdownIt-Anchor" href="#思考题"></a> 思考题</h3><ul><li><p>到底什么时候会尝试触发Minor GC？</p><p>当需要在新生代中分配一个对象，但是发现新生代里的内存空间不足够时发生Minor GC</p></li><li><p>触发Minor GC之前会如何检查老年代大小，涉及哪几个步骤和条件？</p></li></ul><p>首先检查老年代是否能够存下所有新生代的大小，极端情况下新生代Minor GC后所有对象存活，如果能存下则直接进行Minor GC,不能存在则进一步判断是否设置了**-XX:- HandlePromotionFailure**参数，如果设置了该参数则判断平均每次GC存活的对象大小，如果老年代能放下则冒险一试</p><ul><li><p>什么时候在Minor GC之前就会提前触发一次Full GC？</p><ul><li>大对象无法存在在Eden区域，Survivor区域也放不下，此时判断老年代能否放下，如果老年代也放不下则触发一次Full GC</li><li>Minor GC后，生余的存活对象大于Survivor区域，老年代也存不下新生代的对象，此时会触发Full GC</li></ul></li><li><p>Full GC的算法是什么？</p><p>标记整理算法</p></li><li><p>Minor GC过后可能对应哪几种情况？</p><ul><li>Minor GC后Survivor区域能放下</li><li>Minor GC后Survivor区域能放不下，老年代能放下，直接进入老年代</li><li>Minor GC后Survivor区域能放不下，老年代也放不下，触发Full GC，同时进行Minor GC，判断是否能放下新生代存活对象，不能放下直接OOM</li></ul></li><li><p>哪些情况下Minor GC后的对象会进入老年代？</p><ul><li>对象年龄达到15岁</li><li>动态年龄判断超过该Survivor区域内存50%最老的一批对象</li><li>Minor GC后Survivor区域放不下，直接进入老年代</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-463. 岛屿的周长</title>
      <link href="/2020/10/30/leetcode/leetcode-463-%E5%B2%9B%E5%B1%BF%E7%9A%84%E5%91%A8%E9%95%BF/"/>
      <url>/2020/10/30/leetcode/leetcode-463-%E5%B2%9B%E5%B1%BF%E7%9A%84%E5%91%A8%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-463-岛屿的周长"><a class="markdownIt-Anchor" href="#leetcode-463-岛屿的周长"></a> <a href="https://leetcode-cn.com/problems/island-perimeter/">leetcode-463. 岛屿的周长</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n2 = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">islandPerimeter</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        n1 = grid.length;</span><br><span class="line">        n2 = grid[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n2; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(grid[i][j] == <span class="number">1</span>)&#123;</span><br><span class="line">                    count += getCount(grid, i-<span class="number">1</span>, j) + getCount(grid, i+<span class="number">1</span>, j) + getCount(grid, i, j-<span class="number">1</span>) + getCount(grid, i, j+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">(<span class="keyword">int</span>[][] grid, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt;= n1 || j &lt;<span class="number">0</span> || j &gt;=n2)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(grid[i][j] == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-02内存区域划分</title>
      <link href="/2020/10/29/jvm/JVM%E7%AC%94%E8%AE%B0-02%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%92%E5%88%86/"/>
      <url>/2020/10/29/jvm/JVM%E7%AC%94%E8%AE%B0-02%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%92%E5%88%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>JVM内存区域划分</strong></p><ul><li>方法区(元数据空间)</li><li>程序计数器</li><li>java虚拟机栈</li><li>堆内存</li></ul><img src="/images/image-20201030124116074.png" alt="image-20201030124116074" style="zoom: 80%;" /><ol><li><p><strong>存放类的方法区</strong></p><p>用于存放自己写的各种类的相关信息，如Kafka.class</p></li><li><p><strong>程序计数器</strong></p><p>计算机只能识别字节码指令，当JVM加载类信息到内存后，实际上会使用自己的<strong>字节码执行引擎</strong>去执行编译出来的代码指令，程序计数器用于<strong>记录当前执行的字节码指令的位置</strong></p></li><li><p><strong>java虚拟机栈</strong></p><p>java虚拟机栈可以保存每个方法中的局部变量，<strong>每个线程都有自己的java虚拟机栈</strong>，当一个线程执行一个方法时就会创建对应的一个栈帧</p><p>栈帧中包含局部变量表、操作数栈、动态链接、方法出口</p><p>每个方法的执行都代表着入栈和出栈</p></li><li><p><strong>堆内存</strong></p><p>存放在代码中创建的各种对象，如果一个方法中new了一个对象，那么这个对象的引用类型的局部变量就会存放在栈帧的局部变量表里，new出来的对象是放在堆内存中</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-129. 求根到叶子节点数字之和</title>
      <link href="/2020/10/29/leetcode/leetcode-129-%E6%B1%82%E6%A0%B9%E5%88%B0%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/"/>
      <url>/2020/10/29/leetcode/leetcode-129-%E6%B1%82%E6%A0%B9%E5%88%B0%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-129-求根到叶子节点数字之和"><a class="markdownIt-Anchor" href="#leetcode-129-求根到叶子节点数字之和"></a> <a href="https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/">leetcode-129. 求根到叶子节点数字之和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumNumbers</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(root, root.val);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>)&#123;</span><br><span class="line">            ans += val;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.left, val*<span class="number">10</span> + root.left.val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.right, val*<span class="number">10</span> + root.right.val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1207. 独一无二的出现次数</title>
      <link href="/2020/10/28/leetcode/leetcode-1207-%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/"/>
      <url>/2020/10/28/leetcode/leetcode-1207-%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1207-独一无二的出现次数"><a class="markdownIt-Anchor" href="#leetcode-1207-独一无二的出现次数"></a> <a href="https://leetcode-cn.com/problems/unique-number-of-occurrences/">leetcode-1207. 独一无二的出现次数</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">uniqueOccurrences</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(arr);</span><br><span class="line">        <span class="keyword">int</span> n = arr.length;</span><br><span class="line">        <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == arr[i-<span class="number">1</span>])&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(st[count] == <span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                st[count] = <span class="keyword">true</span>;</span><br><span class="line">                count = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i== n-<span class="number">1</span> &amp;&amp; st[count] == <span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-144. 二叉树的前序遍历</title>
      <link href="/2020/10/27/leetcode/leetcode-144-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
      <url>/2020/10/27/leetcode/leetcode-144-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-144-二叉树的前序遍历"><a class="markdownIt-Anchor" href="#leetcode-144-二叉树的前序遍历"></a> <a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">leetcode-144. 二叉树的前序遍历</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">preorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.add(root.val);</span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1365. 有多少小于当前数字的数字</title>
      <link href="/2020/10/26/leetcode/leetcode-1365-%E6%9C%89%E5%A4%9A%E5%B0%91%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97/"/>
      <url>/2020/10/26/leetcode/leetcode-1365-%E6%9C%89%E5%A4%9A%E5%B0%91%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1365-有多少小于当前数字的数字"><a class="markdownIt-Anchor" href="#leetcode-1365-有多少小于当前数字的数字"></a> <a href="https://leetcode-cn.com/problems/how-many-numbers-are-smaller-than-the-current-number/">leetcode-1365. 有多少小于当前数字的数字</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] smallerNumbersThanCurrent(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] nums2= Arrays.copyOf(nums, n);</span><br><span class="line">        Arrays.sort(nums2);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                map.put(nums2[i], i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (nums2[i] == nums2[i-<span class="number">1</span>])&#123;</span><br><span class="line">                map.put(nums2[i], tmp);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                tmp = i;</span><br><span class="line">                map.put(nums2[i], i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            ans[i] = map.get(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1024. 视频拼接</title>
      <link href="/2020/10/24/leetcode/leetcode-1024-%E8%A7%86%E9%A2%91%E6%8B%BC%E6%8E%A5/"/>
      <url>/2020/10/24/leetcode/leetcode-1024-%E8%A7%86%E9%A2%91%E6%8B%BC%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1024-视频拼接"><a class="markdownIt-Anchor" href="#leetcode-1024-视频拼接"></a> <a href="https://leetcode-cn.com/problems/video-stitching/">leetcode-1024. 视频拼接</a></h4><p><strong>双指针</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">videoStitching</span><span class="params">(<span class="keyword">int</span>[][] clips, <span class="keyword">int</span> T)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (r &lt; T) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> bool = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">int</span> l2 = l;</span><br><span class="line">            <span class="keyword">int</span> r2 = r;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span>[] clip : clips) &#123;</span><br><span class="line">                <span class="keyword">int</span> a = clip[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">int</span> b = clip[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (a &lt;= r2 &amp;&amp; a &gt;= l2 &amp;&amp; b &gt; r) &#123;</span><br><span class="line">                    <span class="comment">// 存在这个空间</span></span><br><span class="line">                    bool = <span class="keyword">true</span>;</span><br><span class="line">                    r = b;</span><br><span class="line">                    l = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span> (r &gt;= T) &#123;</span><br><span class="line">                    <span class="keyword">return</span> count;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路dp</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">videoStitching</span><span class="params">(<span class="keyword">int</span>[][] clips, <span class="keyword">int</span> T)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[T+<span class="number">1</span>];</span><br><span class="line">        Arrays.fill(dp, Integer.MAX_VALUE-<span class="number">1</span>);</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//记录最有的区间</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= T; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span>[] clip : clips) &#123;</span><br><span class="line">                <span class="keyword">int</span> a = clip[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">int</span> b = clip[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (i &gt;= a &amp;&amp; i &lt;= b) &#123;</span><br><span class="line">                    dp[i] = Math.min(dp[i], dp[a] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[T] == Integer.MAX_VALUE-<span class="number">1</span> ? -<span class="number">1</span> : dp[T];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1130. 叶值的最小代价生成树</title>
      <link href="/2020/10/23/leetcode/leetcode-1130-%E5%8F%B6%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E7%94%9F%E6%88%90%E6%A0%91/"/>
      <url>/2020/10/23/leetcode/leetcode-1130-%E5%8F%B6%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E7%94%9F%E6%88%90%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1130-叶值的最小代价生成树"><a class="markdownIt-Anchor" href="#leetcode-1130-叶值的最小代价生成树"></a> <a href="https://leetcode-cn.com/problems/minimum-cost-tree-from-leaf-values/">leetcode-1130. 叶值的最小代价生成树</a></h4><p><strong>区间dp</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mctFromLeafValues</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = arr.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[][] max = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> maxValue = arr[i - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n; j++) &#123;</span><br><span class="line">                maxValue = Math.max(maxValue, arr[j - <span class="number">1</span>]);</span><br><span class="line">                max[i][j] = maxValue;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//初始化dp</span></span><br><span class="line">                <span class="keyword">if</span> (i != j) &#123;</span><br><span class="line">                    dp[i][j] = Integer.MAX_VALUE;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l &lt; n; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i + l &lt;= n; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i + l;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt; j; k++) &#123;</span><br><span class="line">                    dp[i][j] = Math.min(dp[i][j], dp[i][k] + dp[k + <span class="number">1</span>][j] + max[i][k] * max[k + <span class="number">1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">1</span>][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-234. 回文链表</title>
      <link href="/2020/10/23/leetcode/leetcode-234-%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/23/leetcode/leetcode-234-%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-234-回文链表"><a class="markdownIt-Anchor" href="#leetcode-234-回文链表"></a> <a href="https://leetcode-cn.com/problems/palindrome-linked-list/">leetcode-234. 回文链表</a></h4><p><strong>使用双端队列</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;ListNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;ListNode&gt;();</span><br><span class="line">        ListNode tmp = head;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            queue.offer(tmp);</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">            ListNode frist = queue.pollFirst();</span><br><span class="line">            ListNode last = queue.pollLast();</span><br><span class="line">            <span class="keyword">if</span> (last == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (frist.val != last.val)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-LCP 07. 传递信息</title>
      <link href="/2020/10/22/leetcode/leetcode-LCP-07-%E4%BC%A0%E9%80%92%E4%BF%A1%E6%81%AF/"/>
      <url>/2020/10/22/leetcode/leetcode-LCP-07-%E4%BC%A0%E9%80%92%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-lcp-07-传递信息"><a class="markdownIt-Anchor" href="#leetcode-lcp-07-传递信息"></a> <a href="https://leetcode-cn.com/problems/chuan-di-xin-xi/">leetcode-LCP 07. 传递信息</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numWays</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] relation, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>, n, relation, k);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n, <span class="keyword">int</span>[][] relation, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">0</span> &amp;&amp; cur == n - <span class="number">1</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (k &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] arr : relation) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cur == arr[<span class="number">0</span>]) &#123;</span><br><span class="line">                <span class="comment">// 可以进行传递</span></span><br><span class="line">                dfs(arr[<span class="number">1</span>], n, relation, k-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-LCP 06. 拿硬币</title>
      <link href="/2020/10/22/leetcode/leetcode-LCP-06-%E6%8B%BF%E7%A1%AC%E5%B8%81/"/>
      <url>/2020/10/22/leetcode/leetcode-LCP-06-%E6%8B%BF%E7%A1%AC%E5%B8%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-lcp-06-拿硬币"><a class="markdownIt-Anchor" href="#leetcode-lcp-06-拿硬币"></a> <a href="https://leetcode-cn.com/problems/na-ying-bi/">leetcode-LCP 06. 拿硬币</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minCount</span><span class="params">(<span class="keyword">int</span>[] coins)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n : coins) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = n / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> j = n % <span class="number">2</span>;</span><br><span class="line">            ans = ans + i + j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-763. 划分字母区间</title>
      <link href="/2020/10/22/leetcode/leetcode-763-%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4/"/>
      <url>/2020/10/22/leetcode/leetcode-763-%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-763-划分字母区间"><a class="markdownIt-Anchor" href="#leetcode-763-划分字母区间"></a> <a href="https://leetcode-cn.com/problems/partition-labels/">leetcode-763. 划分字母区间</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">partitionLabels</span><span class="params">(String S)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> n = S.length();</span><br><span class="line">        <span class="keyword">int</span> pre = <span class="number">0</span>;</span><br><span class="line">        Set&lt;Character&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            set.add(S.charAt(i));</span><br><span class="line">            <span class="keyword">boolean</span> b = judge(set, S.substring(i + <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">                result.add(i - pre + <span class="number">1</span>);</span><br><span class="line">                pre = i + <span class="number">1</span>;</span><br><span class="line">                set.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断后面的字符串是否包含set中的内容</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(Set&lt;Character&gt; set, String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Character ch : set) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.contains(ch.toString())) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-474. 一和零</title>
      <link href="/2020/10/21/leetcode/leetcode-474-%E4%B8%80%E5%92%8C%E9%9B%B6/"/>
      <url>/2020/10/21/leetcode/leetcode-474-%E4%B8%80%E5%92%8C%E9%9B%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-474-一和零"><a class="markdownIt-Anchor" href="#leetcode-474-一和零"></a> <a href="https://leetcode-cn.com/problems/ones-and-zeroes/">leetcode-474. 一和零</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMaxForm</span><span class="params">(String[] strs, <span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = strs.length;</span><br><span class="line">        <span class="keyword">int</span>[][][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n1+<span class="number">1</span>][m+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= strs.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = getZeorAndOne(strs[i-<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">int</span> zero = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> one = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= m; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= n; k++) &#123;</span><br><span class="line">                    dp[i][j][k] = dp[i-<span class="number">1</span>][j][k];</span><br><span class="line">                    <span class="keyword">if</span> (zero &lt;= j &amp;&amp; one &lt;= k)&#123;</span><br><span class="line">                        dp[i][j][k] = Math.max(dp[i][j][k], dp[i-<span class="number">1</span>][j - zero][k - one] + <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n1][m][n];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getZeorAndOne(String str)&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; str.length(); k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.charAt(k) == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[<span class="number">0</span>] = i;</span><br><span class="line">        arr[<span class="number">1</span>] = j;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>状态压缩</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMaxForm</span><span class="params">(String[] strs, <span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = strs.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= strs.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = getZeorAndOne(strs[i-<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">int</span> zero = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> one = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = n; k &gt;= <span class="number">0</span>; k--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (zero &lt;= j &amp;&amp; one &lt;= k)&#123;</span><br><span class="line">                        dp[j][k] = Math.max(dp[j][k], dp[j - zero][k - one] + <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getZeorAndOne(String str)&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; str.length(); k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.charAt(k) == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[<span class="number">0</span>] = i;</span><br><span class="line">        arr[<span class="number">1</span>] = j;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-410. 分割数组的最大值</title>
      <link href="/2020/10/21/leetcode/leetcode-410-%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
      <url>/2020/10/21/leetcode/leetcode-410-%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-410-分割数组的最大值"><a class="markdownIt-Anchor" href="#leetcode-410-分割数组的最大值"></a> <a href="https://leetcode-cn.com/problems/split-array-largest-sum/">leetcode-410. 分割数组的最大值</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">splitArray</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="comment">// 将前i个数分为m断</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][m + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] s = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            Arrays.fill(dp[i], Integer.MAX_VALUE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//前缀和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            s[i] = s[i - <span class="number">1</span>] + nums[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Math.min(i, m); j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++) &#123;</span><br><span class="line">                    <span class="comment">//前k个数分为j-1段,k+1到i分为一段</span></span><br><span class="line">                    dp[i][j] = Math.min(dp[i][j], Math.max(dp[k][j - <span class="number">1</span>], s[i] - s[k]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n][m];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-925. 长按键入</title>
      <link href="/2020/10/21/leetcode/leetcode-925-%E9%95%BF%E6%8C%89%E9%94%AE%E5%85%A5/"/>
      <url>/2020/10/21/leetcode/leetcode-925-%E9%95%BF%E6%8C%89%E9%94%AE%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-925-长按键入"><a class="markdownIt-Anchor" href="#leetcode-925-长按键入"></a> <a href="https://leetcode-cn.com/problems/long-pressed-name/">leetcode-925. 长按键入</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLongPressedName</span><span class="params">(String name, String typed)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (typed.length() &lt; name.length()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Character pre = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; name.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= typed.length()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (name.charAt(i) == typed.charAt(j)) &#123;</span><br><span class="line">                pre = name.charAt(i);</span><br><span class="line">                j++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> ( j &lt; typed.length() &amp;&amp; pre != <span class="keyword">null</span> &amp;&amp; pre == typed.charAt(j))&#123;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (j &gt;= typed.length()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (name.charAt(i) != typed.charAt(j))&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    j++;</span><br><span class="line">                    pre = name.charAt(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (j &lt; typed.length()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (typed.charAt(j) != pre) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-282. 石子合并</title>
      <link href="/2020/10/20/acwing/acwing-282-%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6/"/>
      <url>/2020/10/20/acwing/acwing-282-%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/284/">acwing-282. 石子合并</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] arr;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] s;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            arr[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        s = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        System.out.println(getCost());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getCost</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 求前缀和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            s[i] = s[i-<span class="number">1</span>] + arr[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 区间dp</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">1</span>; l &lt; n; l++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i + l &lt;= n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j = i + l;</span><br><span class="line">                dp[i][j] = <span class="number">100000000</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = i; k &lt; j; k++)&#123;</span><br><span class="line">                    dp[i][j] = Math.min(dp[i][j], dp[i][k] + dp[k+<span class="number">1</span>][j] + s[j] - s[i-<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">1</span>][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-835. Trie字符串统计</title>
      <link href="/2020/10/20/acwing/acwing-835-Trie%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%9F%E8%AE%A1/"/>
      <url>/2020/10/20/acwing/acwing-835-Trie%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/solution/content/20915/">AcWing 835. Trie字符串统计</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> son[][]=<span class="keyword">new</span> <span class="keyword">int</span>[N][<span class="number">26</span>];<span class="comment">//Trie树中每个节点的所有儿子</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> cnt[]=<span class="keyword">new</span> <span class="keyword">int</span>[N];<span class="comment">//以当前这个点结尾的单词有多少个</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span> str[]=<span class="keyword">new</span> <span class="keyword">char</span>[N];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> idx;<span class="comment">//当前用的的哪个下标，下标0：既是根节点又是空节点</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n=scanner.nextInt();</span><br><span class="line">        <span class="keyword">while</span> (n--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            String op=scanner.next();</span><br><span class="line">            String str=scanner.next();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;I&quot;</span>.equals(op))&#123;</span><br><span class="line">                insert(str.toCharArray());</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;Q&quot;</span>.equals(op))&#123;</span><br><span class="line">                System.out.println(query(str.toCharArray()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span>[] str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p=<span class="number">0</span>;<span class="comment">//根节点是0</span></span><br><span class="line">        <span class="comment">//从根节点开始，从前向后遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length ;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> u=str[i]-<span class="string">&#x27;a&#x27;</span>;<span class="comment">//把当前这个字母对应的子节点编号搞出来</span></span><br><span class="line">            <span class="comment">//如果当前这个点上不存在对应的字母的话，创建出来</span></span><br><span class="line">            <span class="keyword">if</span>(son[p][u]==<span class="number">0</span>) son[p][u]=++idx;</span><br><span class="line">            p=son[p][u];<span class="comment">//走到下一个点</span></span><br><span class="line">        &#125;</span><br><span class="line">        cnt[p]++;<span class="comment">//p对应的点就是最后一个点，cnt[p]++表示以这个点结尾的单词数量加1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找字符串出现的次数</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span>[] str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> u=str[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="comment">//如果不存在这个子节点的话，说明集合中不存在这个单词</span></span><br><span class="line">            <span class="keyword">if</span>(son[p][u]==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//否则的话走过去</span></span><br><span class="line">            p=son[p][u];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt[p];<span class="comment">//返回以p结尾的单词数量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Trie树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-692. 前K个高频单词</title>
      <link href="/2020/10/20/leetcode/leetcode-692-%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%8D%95%E8%AF%8D/"/>
      <url>/2020/10/20/leetcode/leetcode-692-%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%8D%95%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-692-前k个高频单词"><a class="markdownIt-Anchor" href="#leetcode-692-前k个高频单词"></a> <a href="https://leetcode-cn.com/problems/top-k-frequent-words/">leetcode-692. 前K个高频单词</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">int</span>[][] st = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">int</span>[] count = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    Map&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">topKFrequent</span><span class="params">(String[] words, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String str : words) &#123;</span><br><span class="line">            insert(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        PriorityQueue&lt;String&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(k, (o1,o2)-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span> (map.get(o2) == map.get(o1))&#123;</span><br><span class="line">                <span class="keyword">return</span> o1.compareTo(o2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> map.get(o2) - map.get(o1);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String str : words) &#123;</span><br><span class="line">            <span class="keyword">int</span> cnt = search(str);</span><br><span class="line">            map.put(str, cnt);</span><br><span class="line">            <span class="keyword">if</span> (!queue.contains(str)) &#123;</span><br><span class="line">                queue.offer(str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (k &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            res.add(queue.poll());</span><br><span class="line">            k--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = str.charAt(i) - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (st[p][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                st[p][j] = ++idx;</span><br><span class="line">            &#125;</span><br><span class="line">            p = st[p][j];</span><br><span class="line">        &#125;</span><br><span class="line">        count[p]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = str.charAt(i) - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (st[p][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p = st[p][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count[p];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-143. 重排链表</title>
      <link href="/2020/10/20/leetcode/leetcode-143-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/20/leetcode/leetcode-143-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode143-重排链表"><a class="markdownIt-Anchor" href="#leetcode143-重排链表"></a> <a href="https://leetcode-cn.com/problems/reorder-list/">leetcode143. 重排链表</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reorderList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;ListNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;ListNode&gt;();</span><br><span class="line">        ListNode tmp = head;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="keyword">null</span>)&#123;</span><br><span class="line">            queue.offer(tmp);</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode cur = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">            ListNode frist = queue.pollFirst();</span><br><span class="line">            ListNode last = queue.pollLast();</span><br><span class="line">            frist.next = last;</span><br><span class="line">            <span class="keyword">if</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">                cur.next = frist;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (last != <span class="keyword">null</span>) &#123;</span><br><span class="line">                cur = last;</span><br><span class="line">                cur.next = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-剑指 Offer 24. 反转链表</title>
      <link href="/2020/10/19/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-24-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/19/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-24-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-剑指-offer-24-反转链表"><a class="markdownIt-Anchor" href="#leetcode-剑指-offer-24-反转链表"></a> <a href="https://leetcode-cn.com/problems/fan-zhuan-lian-biao-lcof/">leetcode-剑指 Offer 24. 反转链表</a></h4><p><strong>双指针</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        ListNode pre = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur != <span class="keyword">null</span>)&#123;</span><br><span class="line">            cur.next = pre;</span><br><span class="line">            pre = cur;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递归</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode res = reverseList(head.next);</span><br><span class="line">        head.next.next = head;</span><br><span class="line">        head.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-61. 旋转链表</title>
      <link href="/2020/10/19/leetcode/leetcode-61-%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/19/leetcode/leetcode-61-%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-61-旋转链表"><a class="markdownIt-Anchor" href="#leetcode-61-旋转链表"></a> <a href="https://leetcode-cn.com/problems/rotate-list/">leetcode-61. 旋转链表</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">rotateRight</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        ListNode tmp = head;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        ListNode end = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(tmp != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">                end = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(count == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = k % count;</span><br><span class="line">        <span class="keyword">int</span> j = count - i - <span class="number">1</span>;</span><br><span class="line">        tmp = head;</span><br><span class="line">        <span class="keyword">while</span>(j &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tmp.next != <span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode result = tmp.next;</span><br><span class="line">            tmp.next = <span class="keyword">null</span>;</span><br><span class="line">            end.next = head;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1624. 两个相同字符之间的最长子字符串</title>
      <link href="/2020/10/19/leetcode/leetcode-1624-%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/10/19/leetcode/leetcode-1624-%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1624-两个相同字符之间的最长子字符串"><a class="markdownIt-Anchor" href="#leetcode-1624-两个相同字符之间的最长子字符串"></a> <a href="https://leetcode-cn.com/problems/largest-substring-between-two-equal-characters/">leetcode-1624. 两个相同字符之间的最长子字符串</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxLengthBetweenEqualCharacters</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span> max = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n - <span class="number">1</span>; j &gt; i; j--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s.charAt(i) == s.charAt(j))&#123;</span><br><span class="line">                    max = Math.max(max, j - i - <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-844. 比较含退格的字符串</title>
      <link href="/2020/10/19/leetcode/leetcode-844-%E6%AF%94%E8%BE%83%E5%90%AB%E9%80%80%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/10/19/leetcode/leetcode-844-%E6%AF%94%E8%BE%83%E5%90%AB%E9%80%80%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-844-比较含退格的字符串"><a class="markdownIt-Anchor" href="#leetcode-844-比较含退格的字符串"></a> <a href="https://leetcode-cn.com/problems/backspace-string-compare/">leetcode-844. 比较含退格的字符串</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">backspaceCompare</span><span class="params">(String S, String T)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Character&gt; stack1 = getStack(S);</span><br><span class="line">        Stack&lt;Character&gt; stack2 = getStack(T);</span><br><span class="line">        <span class="keyword">if</span> (stack1.size() != stack2.size()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!stack1.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stack1.pop() != stack2.pop()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Stack&lt;Character&gt; <span class="title">getStack</span><span class="params">(String S)</span></span>&#123;</span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (S.charAt(i) == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!stack.isEmpty()) &#123;</span><br><span class="line">                    stack.pop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                stack.push(S.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stack;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-19. 删除链表的倒数第N个节点</title>
      <link href="/2020/10/18/leetcode/leetcode-19-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9/"/>
      <url>/2020/10/18/leetcode/leetcode-19-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-19-删除链表的倒数第n个节点"><a class="markdownIt-Anchor" href="#leetcode-19-删除链表的倒数第n个节点"></a> <a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">leetcode-19. 删除链表的倒数第N个节点</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeNthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        <span class="keyword">while</span>(cur.next != <span class="keyword">null</span>)&#123;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">            count ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cur = head;</span><br><span class="line">        ListNode pre = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> k = count - n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(k &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            pre = cur;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">            k--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(pre != <span class="keyword">null</span>)&#123;</span><br><span class="line">            pre.next = cur.next;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> cur.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1529. 灯泡开关 IV</title>
      <link href="/2020/10/16/leetcode/leetcode-1529-%E7%81%AF%E6%B3%A1%E5%BC%80%E5%85%B3-IV/"/>
      <url>/2020/10/16/leetcode/leetcode-1529-%E7%81%AF%E6%B3%A1%E5%BC%80%E5%85%B3-IV/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1529-灯泡开关-iv"><a class="markdownIt-Anchor" href="#leetcode-1529-灯泡开关-iv"></a> <a href="https://leetcode-cn.com/problems/bulb-switcher-iv/">leetcode-1529. 灯泡开关 IV</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minFlips</span><span class="params">(String target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = target.length();</span><br><span class="line">        <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[n];</span><br><span class="line">        Arrays.fill(chars,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch = chars[i];</span><br><span class="line">            <span class="keyword">if</span> ((count &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ch == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                    ch = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    ch = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ch != target.charAt(i)) &#123;</span><br><span class="line">                <span class="comment">// 需要反转</span></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-977. 有序数组的平方</title>
      <link href="/2020/10/16/leetcode/leetcode-977-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/"/>
      <url>/2020/10/16/leetcode/leetcode-977-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-977-有序数组的平方"><a class="markdownIt-Anchor" href="#leetcode-977-有序数组的平方"></a> <a href="https://leetcode-cn.com/problems/squares-of-a-sorted-array/">leetcode-977. 有序数组的平方</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] sortedSquares(<span class="keyword">int</span>[] A) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = A.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            A[i] = A[i]*A[i];</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(A);</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-86. 分隔链表</title>
      <link href="/2020/10/15/leetcode/leetcode-86-%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/15/leetcode/leetcode-86-%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-86-分隔链表"><a class="markdownIt-Anchor" href="#leetcode-86-分隔链表"></a> <a href="https://leetcode-cn.com/problems/partition-list/">leetcode-86. 分隔链表</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">partition</span><span class="params">(ListNode head, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        ListNode tmp = head;</span><br><span class="line">        ListNode rootMin = <span class="keyword">null</span>;</span><br><span class="line">        ListNode rootMax = <span class="keyword">null</span>;</span><br><span class="line">        ListNode min = <span class="keyword">null</span>;</span><br><span class="line">        ListNode max = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tmp.val &lt; x)&#123;</span><br><span class="line">                <span class="keyword">if</span> (min == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    min = <span class="keyword">new</span> ListNode(tmp.val);</span><br><span class="line">                    rootMin = min;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    min.next = <span class="keyword">new</span> ListNode(tmp.val);</span><br><span class="line">                    min = min.next;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (max == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    max = <span class="keyword">new</span> ListNode(tmp.val);</span><br><span class="line">                    rootMax = max;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    max.next = <span class="keyword">new</span> ListNode(tmp.val);</span><br><span class="line">                    max = max.next;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (min == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> rootMax;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            min.next = rootMax;</span><br><span class="line">            <span class="keyword">return</span> rootMin;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-剑指 Offer 26. 树的子结构</title>
      <link href="/2020/10/15/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-26-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84/"/>
      <url>/2020/10/15/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-26-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-剑指-offer-26-树的子结构"><a class="markdownIt-Anchor" href="#leetcode-剑指-offer-26-树的子结构"></a> <a href="https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/">leetcode-剑指 Offer 26. 树的子结构</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubStructure</span><span class="params">(TreeNode A, TreeNode B)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (A != <span class="keyword">null</span> &amp;&amp; B == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dfs(A, B);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(TreeNode root, TreeNode B)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.val == B.val)&#123;</span><br><span class="line">            <span class="comment">// 开始比较</span></span><br><span class="line">            <span class="keyword">if</span> (compare(root, B))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (dfs(root.left, B))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (dfs(root.right, B))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(TreeNode A, TreeNode B)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (A == <span class="keyword">null</span> &amp;&amp; B == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (A != <span class="keyword">null</span> &amp;&amp; B == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (A == <span class="keyword">null</span> &amp;&amp; B != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (A.val != B.val)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> compare(A.left, B.left) &amp;&amp; compare(A.right, B.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1282. 用户分组</title>
      <link href="/2020/10/15/leetcode/leetcode-1282-%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84/"/>
      <url>/2020/10/15/leetcode/leetcode-1282-%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1282-用户分组"><a class="markdownIt-Anchor" href="#leetcode-1282-用户分组"></a> <a href="https://leetcode-cn.com/problems/group-the-people-given-the-group-size-they-belong-to/">leetcode-1282. 用户分组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; groupThePeople(<span class="keyword">int</span>[] groupSizes) &#123;</span><br><span class="line">        Map&lt;Integer, List&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; groupSizes.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(groupSizes[i]))&#123;</span><br><span class="line">                map.get(groupSizes[i]).add(i);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                List&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                tmp.add(i);</span><br><span class="line">                map.put(groupSizes[i], tmp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, List&lt;Integer&gt;&gt; entry : map.entrySet())&#123;</span><br><span class="line">            <span class="comment">//进行拆分</span></span><br><span class="line">            <span class="keyword">int</span> size = entry.getKey();</span><br><span class="line">            List&lt;Integer&gt; list = entry.getValue();</span><br><span class="line">            <span class="keyword">if</span>(list.size()&gt;size)&#123;</span><br><span class="line">                <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> r = size;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size()/size; i++) &#123;</span><br><span class="line">                    result.add(list.subList(l, r));</span><br><span class="line">                    l = r;</span><br><span class="line">                    r = r + size;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                result.add(entry.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-116. 填充每个节点的下一个右侧节点指针</title>
      <link href="/2020/10/15/leetcode/leetcode-116-%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88/"/>
      <url>/2020/10/15/leetcode/leetcode-116-%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-116-填充每个节点的下一个右侧节点指针"><a class="markdownIt-Anchor" href="#leetcode-116-填充每个节点的下一个右侧节点指针"></a> <a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/">leetcode-116. 填充每个节点的下一个右侧节点指针</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    LinkedList&lt;Node&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">connect</span><span class="params">(Node root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            Node pre = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">                Node node = queue.poll();</span><br><span class="line">                <span class="keyword">if</span>(pre != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    pre.next = node;</span><br><span class="line">                    pre = node;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    pre = node;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(node.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            pre.next = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1486. 数组异或操作</title>
      <link href="/2020/10/14/leetcode/leetcode-1486-%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/10/14/leetcode/leetcode-1486-%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1486-数组异或操作"><a class="markdownIt-Anchor" href="#leetcode-1486-数组异或操作"></a> <a href="https://leetcode-cn.com/problems/xor-operation-in-an-array/">leetcode-1486. 数组异或操作</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">xorOperation</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> start)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> k = start + <span class="number">2</span> * i;</span><br><span class="line">            nums[i] = k;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            ans = (ans ^ nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1431. 拥有最多糖果的孩子</title>
      <link href="/2020/10/14/leetcode/leetcode-1431-%E6%8B%A5%E6%9C%89%E6%9C%80%E5%A4%9A%E7%B3%96%E6%9E%9C%E7%9A%84%E5%AD%A9%E5%AD%90/"/>
      <url>/2020/10/14/leetcode/leetcode-1431-%E6%8B%A5%E6%9C%89%E6%9C%80%E5%A4%9A%E7%B3%96%E6%9E%9C%E7%9A%84%E5%AD%A9%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1431-拥有最多糖果的孩子"><a class="markdownIt-Anchor" href="#leetcode-1431-拥有最多糖果的孩子"></a> <a href="https://leetcode-cn.com/problems/kids-with-the-greatest-number-of-candies/">leetcode-1431. 拥有最多糖果的孩子</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Boolean&gt; <span class="title">kidsWithCandies</span><span class="params">(<span class="keyword">int</span>[] candies, <span class="keyword">int</span> extraCandies)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">int</span> n = candies.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            max = Math.max(max, candies[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Boolean&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (candies[i] + extraCandies &gt;= max) &#123;</span><br><span class="line">                list.add(<span class="keyword">true</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                list.add(<span class="keyword">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1470. 重新排列数组</title>
      <link href="/2020/10/14/leetcode/leetcode-1470-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/"/>
      <url>/2020/10/14/leetcode/leetcode-1470-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1470-重新排列数组"><a class="markdownIt-Anchor" href="#leetcode-1470-重新排列数组"></a> <a href="https://leetcode-cn.com/problems/shuffle-the-array/">leetcode-1470. 重新排列数组</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] shuffle(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> n) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>*n];</span><br><span class="line">        <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            ans[idx++] = nums[i];</span><br><span class="line">            ans[idx++] = nums[n + i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1512. 好数对的数目</title>
      <link href="/2020/10/14/leetcode/leetcode-1512-%E5%A5%BD%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE/"/>
      <url>/2020/10/14/leetcode/leetcode-1512-%E5%A5%BD%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1512-好数对的数目"><a class="markdownIt-Anchor" href="#leetcode-1512-好数对的数目"></a> <a href="https://leetcode-cn.com/problems/number-of-good-pairs/">leetcode-1512. 好数对的数目</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numIdenticalPairs</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i] == nums[j]) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1480. 一维数组的动态和</title>
      <link href="/2020/10/14/leetcode/leetcode-1480.%20%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%8A%A8%E6%80%81%E5%92%8C/"/>
      <url>/2020/10/14/leetcode/leetcode-1480.%20%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%8A%A8%E6%80%81%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1480-一维数组的动态和"><a class="markdownIt-Anchor" href="#leetcode-1480-一维数组的动态和"></a> <a href="https://leetcode-cn.com/problems/running-sum-of-1d-array/">leetcode-1480. 一维数组的动态和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] runningSum(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        dp[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[i] = dp[i - <span class="number">1</span>] + nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-516. 最长回文子序列</title>
      <link href="/2020/10/14/leetcode/leetcode-516-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2020/10/14/leetcode/leetcode-516-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-516-最长回文子序列"><a class="markdownIt-Anchor" href="#leetcode-516-最长回文子序列"></a> <a href="https://leetcode-cn.com/problems/longest-palindromic-subsequence/">leetcode-516. 最长回文子序列</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestPalindromeSubseq</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                dp[i][i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s.charAt(i) == s.charAt(j)) &#123;</span><br><span class="line">                    dp[i][j] = dp[i + <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">2</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = Math.max(dp[i][j - <span class="number">1</span>], dp[i + <span class="number">1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>][n-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-983. 最低票价</title>
      <link href="/2020/10/14/leetcode/leetcode-983-%E6%9C%80%E4%BD%8E%E7%A5%A8%E4%BB%B7/"/>
      <url>/2020/10/14/leetcode/leetcode-983-%E6%9C%80%E4%BD%8E%E7%A5%A8%E4%BB%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-983-最低票价"><a class="markdownIt-Anchor" href="#leetcode-983-最低票价"></a> <a href="https://leetcode-cn.com/problems/minimum-cost-for-tickets/">leetcode-983. 最低票价</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mincostTickets</span><span class="params">(<span class="keyword">int</span>[] days, <span class="keyword">int</span>[] costs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = days.length;</span><br><span class="line">        <span class="keyword">int</span> last = days[n - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[last + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= last; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == days[idx]) &#123;</span><br><span class="line">                <span class="keyword">int</span> d1 = i - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> d2 = i - <span class="number">7</span> &lt; <span class="number">0</span> ? <span class="number">0</span> : i - <span class="number">7</span>;</span><br><span class="line">                <span class="keyword">int</span> d3 = i - <span class="number">30</span> &lt; <span class="number">0</span> ? <span class="number">0</span> : i - <span class="number">30</span>;</span><br><span class="line">                dp[i] = Math.min(dp[d1] + costs[<span class="number">0</span>],Math.min(dp[d2]+costs[<span class="number">1</span>],dp[d3]+costs[<span class="number">2</span>]));</span><br><span class="line">                idx++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i] = dp[i - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[last];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1277. 统计全为 1 的正方形子矩阵</title>
      <link href="/2020/10/14/leetcode/leetcode-1277-%E7%BB%9F%E8%AE%A1%E5%85%A8%E4%B8%BA-1-%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E5%AD%90%E7%9F%A9%E9%98%B5/"/>
      <url>/2020/10/14/leetcode/leetcode-1277-%E7%BB%9F%E8%AE%A1%E5%85%A8%E4%B8%BA-1-%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E5%AD%90%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1277-统计全为-1-的正方形子矩阵"><a class="markdownIt-Anchor" href="#leetcode-1277-统计全为-1-的正方形子矩阵"></a> <a href="https://leetcode-cn.com/problems/count-square-submatrices-with-all-ones/">leetcode-1277. 统计全为 1 的正方形子矩阵</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countSquares</span><span class="params">(<span class="keyword">int</span>[][] matrix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = matrix.length;</span><br><span class="line">        <span class="keyword">int</span> n2 = matrix[<span class="number">0</span>].length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n1][n2];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>] + matrix[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n2; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][i] = dp[<span class="number">0</span>][i-<span class="number">1</span>] + matrix[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (matrix[i][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                    dp[i][j] = dp[i - <span class="number">1</span>][j] + dp[i][j - <span class="number">1</span>] - dp[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 加入i,j 这个节点后能构成多少个矩形</span></span><br><span class="line">                    dp[i][j] = dp[i - <span class="number">1</span>][j] + dp[i][j - <span class="number">1</span>] - dp[i-<span class="number">1</span>][j-<span class="number">1</span>] + judge(matrix, i, j);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n1 - <span class="number">1</span>][n2 - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//最多能构成的矩形的长度</span></span><br><span class="line">        <span class="keyword">int</span> len = Math.min(x, y);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len; i++) &#123;</span><br><span class="line">            <span class="comment">// 判断x-1， y-i 到y</span></span><br><span class="line">            <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = y-i; j &lt;= y; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (matrix[x - i][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                    b = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">                <span class="keyword">return</span> count;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = x - i; j &lt;= x; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (matrix[j][y-i] == <span class="number">0</span>) &#123;</span><br><span class="line">                    b = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">                <span class="keyword">return</span> count;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                count ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1002. 查找常用字符</title>
      <link href="/2020/10/14/leetcode/leetcode-1002-%E6%9F%A5%E6%89%BE%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6/"/>
      <url>/2020/10/14/leetcode/leetcode-1002-%E6%9F%A5%E6%89%BE%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1002-查找常用字符"><a class="markdownIt-Anchor" href="#leetcode-1002-查找常用字符"></a> <a href="https://leetcode-cn.com/problems/find-common-characters/">leetcode-1002. 查找常用字符</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">commonChars</span><span class="params">(String[] A)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> n = A.length;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        Arrays.fill(ans, <span class="number">1000000000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String str : A) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] tmp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">                tmp[str.charAt(i) - <span class="string">&#x27;a&#x27;</span>] += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">                ans[i] = Math.min(ans[i], tmp[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (ans[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                result.add(String.valueOf((<span class="keyword">char</span>) (<span class="string">&#x27;a&#x27;</span> + i)));</span><br><span class="line">                ans[i] -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-5. 最长回文子串</title>
      <link href="/2020/10/13/leetcode/leetcode-5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
      <url>/2020/10/13/leetcode/leetcode-5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-5-最长回文子串"><a class="markdownIt-Anchor" href="#leetcode-5-最长回文子串"></a> <a href="https://leetcode-cn.com/problems/longest-palindromic-substring/">leetcode-5. 最长回文子串</a></h4><p><strong>题解思路：中心扩散法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            String s1 = palindrome(s, i, i);</span><br><span class="line">            String s2 = palindrome(s, i, i+<span class="number">1</span>);</span><br><span class="line">            ans = ans.length() &gt; s1.length() ? ans : s1;</span><br><span class="line">            ans = ans.length() &gt; s2.length() ? ans : s2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中心扩散法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">palindrome</span><span class="params">(String s,<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt;= <span class="number">0</span> &amp;&amp; r &lt; s.length() &amp;&amp; s.charAt(l) == s.charAt(r))&#123;</span><br><span class="line">            <span class="comment">// 向两边扩展</span></span><br><span class="line">            l--;</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substring(l+<span class="number">1</span>, r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路：动态规划</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n];</span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; n; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i+l &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i + l;</span><br><span class="line">                <span class="keyword">if</span> (l == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//i和j的间隔为0,证明只有一个元素</span></span><br><span class="line">                    dp[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (l == <span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j] = s.charAt(i) == s.charAt(j);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = s.charAt(i) == s.charAt(j) &amp;&amp; dp[i + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &amp;&amp; l + <span class="number">1</span> &gt; ans.length()) &#123;</span><br><span class="line">                    ans = s.substring(i, j + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-647. 回文子串</title>
      <link href="/2020/10/13/leetcode/leetcode-647-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
      <url>/2020/10/13/leetcode/leetcode-647-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-647-回文子串"><a class="markdownIt-Anchor" href="#leetcode-647-回文子串"></a> <a href="https://leetcode-cn.com/problems/palindromic-substrings/">leetcode-647. 回文子串</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化</span></span><br><span class="line">        dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            dp[i] = dp[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">                String str = s.substring(j - <span class="number">1</span>, i);</span><br><span class="line">                <span class="keyword">if</span> (judge(str)) &#123;</span><br><span class="line">                    dp[i] += <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = s.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.charAt(i) != s.charAt(j)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>动规解法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; n; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + l &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i + l;</span><br><span class="line">                <span class="keyword">if</span> (l == <span class="number">0</span>) &#123;</span><br><span class="line">                    dp[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (l == <span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j] = s.charAt(i) == s.charAt(j);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = s.charAt(i) == s.charAt(j) &amp;&amp; dp[i + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dp[i][j]) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-剑指 Offer 14- I. 剪绳子</title>
      <link href="/2020/10/13/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-14-I-%E5%89%AA%E7%BB%B3%E5%AD%90/"/>
      <url>/2020/10/13/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-14-I-%E5%89%AA%E7%BB%B3%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-剑指-offer-14-i-剪绳子"><a class="markdownIt-Anchor" href="#leetcode-剑指-offer-14-i-剪绳子"></a> <a href="https://leetcode-cn.com/problems/jian-sheng-zi-lcof/">leetcode-剑指 Offer 14- I. 剪绳子</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">cuttingRope</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        dp[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                dp[i] = Math.max(dp[i], j * Math.max(dp[i - j], i - j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1261. 在受污染的二叉树中查找元素</title>
      <link href="/2020/10/13/leetcode/leetcode-1261-%E5%9C%A8%E5%8F%97%E6%B1%A1%E6%9F%93%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0/"/>
      <url>/2020/10/13/leetcode/leetcode-1261-%E5%9C%A8%E5%8F%97%E6%B1%A1%E6%9F%93%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1261-在受污染的二叉树中查找元素"><a class="markdownIt-Anchor" href="#leetcode-1261-在受污染的二叉树中查找元素"></a> <a href="https://leetcode-cn.com/problems/find-elements-in-a-contaminated-binary-tree/">leetcode-1261. 在受污染的二叉树中查找元素</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FindElements</span> </span>&#123;</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FindElements</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root, <span class="keyword">null</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root, Integer rootValue, <span class="keyword">int</span> flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rootValue == <span class="keyword">null</span>) &#123;</span><br><span class="line">            root.val = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">                root.val = <span class="number">2</span>*rootValue + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                root.val = <span class="number">2</span>*rootValue + <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        set.add(root.val);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            dfs(root.left, root.val, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.right, root.val, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (set.contains(target)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-978. 最长湍流子数组</title>
      <link href="/2020/10/13/leetcode/leetcode-978-%E6%9C%80%E9%95%BF%E6%B9%8D%E6%B5%81%E5%AD%90%E6%95%B0%E7%BB%84/"/>
      <url>/2020/10/13/leetcode/leetcode-978-%E6%9C%80%E9%95%BF%E6%B9%8D%E6%B5%81%E5%AD%90%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-978-最长湍流子数组"><a class="markdownIt-Anchor" href="#leetcode-978-最长湍流子数组"></a> <a href="https://leetcode-cn.com/problems/longest-turbulent-subarray/">leetcode-978. 最长湍流子数组</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxTurbulenceSize</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = A.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="comment">//初始化dp,第二位的0代表前一是下降,1代表为上升</span></span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A[i - <span class="number">2</span>] &lt; A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="comment">// 当前为上升,所有前一个应该为下降</span></span><br><span class="line">                dp[i][<span class="number">1</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 此时设置下降为1</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(A[i - <span class="number">2</span>] &gt; A[i - <span class="number">1</span>])&#123;</span><br><span class="line">                <span class="comment">// 如果当前为下降,那么前一个应该为上升</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//那么当前上升的为1</span></span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//相等时,都为1</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            ans = Math.max(ans, Math.max(dp[i][<span class="number">0</span>], dp[i][<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 17.11. 单词距离</title>
      <link href="/2020/10/13/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-11-%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB/"/>
      <url>/2020/10/13/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-11-%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-1711-单词距离"><a class="markdownIt-Anchor" href="#leetcode-面试题-1711-单词距离"></a> <a href="https://leetcode-cn.com/problems/find-closest-lcci/">leetcode-面试题 17.11. 单词距离</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Map&lt;String, List&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findClosest</span><span class="params">(String[] words, String word1, String word2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; words.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(words[i])) &#123;</span><br><span class="line">                List&lt;Integer&gt; list = map.get(words[i]);</span><br><span class="line">                list.add(i);</span><br><span class="line">                map.put(words[i], list);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                List&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                tmp.add(i);</span><br><span class="line">                map.put(words[i], tmp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; list1 = map.get(word1);</span><br><span class="line">        List&lt;Integer&gt; list2 = map.get(word2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list1.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> frist = list1.get(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; list2.size(); j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> sec = list2.get(j);</span><br><span class="line">                <span class="keyword">int</span> ans = Math.abs(frist - sec);</span><br><span class="line">                result = Math.min(result, ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Map&lt;String, List&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findClosest</span><span class="params">(String[] words, String word1, String word2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> j = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> result = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; words.length; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (words[k].equals(word1)) &#123;</span><br><span class="line">                i = k;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (words[k].equals(word2)) &#123;</span><br><span class="line">                j = k;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i != -<span class="number">1</span> &amp;&amp; j != -<span class="number">1</span>) &#123;</span><br><span class="line">                result = Math.min(result, Math.abs(i - j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-24. 两两交换链表中的节点</title>
      <link href="/2020/10/13/leetcode/leetcode-24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/"/>
      <url>/2020/10/13/leetcode/leetcode-24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-24-两两交换链表中的节点"><a class="markdownIt-Anchor" href="#leetcode-24-两两交换链表中的节点"></a> <a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">leetcode-24. 两两交换链表中的节点</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    ListNode root = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">swapPairs</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dfs(head);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">dfs</span><span class="params">(ListNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode node1 = <span class="keyword">new</span> ListNode(root.val);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> node1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode node2 = <span class="keyword">new</span> ListNode(root.next.val);</span><br><span class="line">        node2.next = node1;</span><br><span class="line">        </span><br><span class="line">        node1.next = dfs(root.next.next);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-213. 打家劫舍 II</title>
      <link href="/2020/10/13/leetcode/leetcode-213-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D-II/"/>
      <url>/2020/10/13/leetcode/leetcode-213-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-213-打家劫舍-ii"><a class="markdownIt-Anchor" href="#leetcode-213-打家劫舍-ii"></a> <a href="https://leetcode-cn.com/problems/house-robber-ii/">leetcode-213. 打家劫舍 II</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="comment">//第一家房子没有被抢</span></span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">2</span>)&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>][<span class="number">0</span>] = Math.max(dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>],dp[i-<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] + nums[i-<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 第一件房子被抢了</span></span><br><span class="line">            <span class="keyword">if</span>(i == n)&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>][<span class="number">1</span>] = Math.max(dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>],dp[i-<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>][<span class="number">1</span>] = Math.max(dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>],dp[i-<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">                dp[i][<span class="number">1</span>][<span class="number">1</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>] + nums[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result1 = Math.max(dp[n][<span class="number">0</span>][<span class="number">0</span>], dp[n][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> result2 = Math.max(dp[n][<span class="number">0</span>][<span class="number">1</span>], dp[n][<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">return</span> Math.max(result1, result2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-198. 打家劫舍</title>
      <link href="/2020/10/12/leetcode/leetcode-198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/"/>
      <url>/2020/10/12/leetcode/leetcode-198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-198-打家劫舍"><a class="markdownIt-Anchor" href="#leetcode-198-打家劫舍"></a> <a href="https://leetcode-cn.com/problems/house-robber/">leetcode-198. 打家劫舍</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = Math.max(dp[i-<span class="number">1</span>][<span class="number">1</span>], dp[i-<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>] + nums[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Math.max(dp[n][<span class="number">0</span>],dp[n][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1043. 分隔数组以得到最大和</title>
      <link href="/2020/10/12/leetcode/leetcode-1043-%E5%88%86%E9%9A%94%E6%95%B0%E7%BB%84%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%92%8C/"/>
      <url>/2020/10/12/leetcode/leetcode-1043-%E5%88%86%E9%9A%94%E6%95%B0%E7%BB%84%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1043-分隔数组以得到最大和"><a class="markdownIt-Anchor" href="#leetcode-1043-分隔数组以得到最大和"></a> <a href="https://leetcode-cn.com/problems/partition-array-for-maximum-sum/">leetcode-1043. 分隔数组以得到最大和</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSumAfterPartitioning</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = arr.length;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="comment">//前i个dp的和</span></span><br><span class="line">            <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Math.min(k, i); j++) &#123;</span><br><span class="line">                max = Math.max(max, arr[i - j]);</span><br><span class="line">                dp[i] = Math.max(dp[i], dp[i - j] + j * max);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-剑指 Offer 47. 礼物的最大价值</title>
      <link href="/2020/10/12/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-47-%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC/"/>
      <url>/2020/10/12/leetcode/leetcode-%E5%89%91%E6%8C%87-Offer-47-%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-剑指-offer-47-礼物的最大价值"><a class="markdownIt-Anchor" href="#leetcode-剑指-offer-47-礼物的最大价值"></a> <a href="https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/">leetcode-剑指 Offer 47. 礼物的最大价值</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxValue</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = grid.length;</span><br><span class="line">        <span class="keyword">int</span> n2 = grid[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n1][n2];</span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] + grid[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n2; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][i] = dp[<span class="number">0</span>][i - <span class="number">1</span>] + grid[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n2; j++) &#123;</span><br><span class="line">                dp[i][j] = Math.max(dp[i - <span class="number">1</span>][j], dp[i][j - <span class="number">1</span>]) + grid[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n1 - <span class="number">1</span>][n2 - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-338. 比特位计数</title>
      <link href="/2020/10/12/leetcode/leetcode-338-%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0/"/>
      <url>/2020/10/12/leetcode/leetcode-338-%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-338-比特位计数"><a class="markdownIt-Anchor" href="#leetcode-338-比特位计数"></a> <a href="https://leetcode-cn.com/problems/counting-bits/">leetcode-338. 比特位计数</a></h4><p><strong>动规思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] countBits(<span class="keyword">int</span> num) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[num + <span class="number">1</span>];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> dp;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> dp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= num; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (((i-<span class="number">1</span>) &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">//说明为奇数</span></span><br><span class="line">                String str = Integer.toBinaryString(i - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> n = str.length();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = n-<span class="number">1</span>; j &gt;=<span class="number">0</span>; j--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (str.charAt(j) == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                        index = j;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i] = dp[i - <span class="number">1</span>] - (n-index-<span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i] = dp[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 04.03. 特定深度节点链表</title>
      <link href="/2020/10/12/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-04-03-%E7%89%B9%E5%AE%9A%E6%B7%B1%E5%BA%A6%E8%8A%82%E7%82%B9%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/10/12/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-04-03-%E7%89%B9%E5%AE%9A%E6%B7%B1%E5%BA%A6%E8%8A%82%E7%82%B9%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-0403-特定深度节点链表"><a class="markdownIt-Anchor" href="#leetcode-面试题-0403-特定深度节点链表"></a> <a href="https://leetcode-cn.com/problems/list-of-depth-lcci/">leetcode-面试题 04.03. 特定深度节点链表</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    LinkedList&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">    List&lt;ListNode&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> ListNode[] listOfDepth(TreeNode tree) &#123;</span><br><span class="line">        <span class="keyword">if</span> (tree == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        queue.offer(tree);</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            ListNode root = <span class="keyword">null</span>;</span><br><span class="line">            ListNode pre = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                ListNode listNode = <span class="keyword">new</span> ListNode();</span><br><span class="line">                listNode.val = node.val;</span><br><span class="line">                <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    root = listNode;</span><br><span class="line">                    pre = root;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    pre.next = listNode;</span><br><span class="line">                    pre = listNode;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            list.add(root);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode[] ans = <span class="keyword">new</span> ListNode[list.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            ans[i] = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-877. 石子游戏</title>
      <link href="/2020/10/12/leetcode/leetcode-877-%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/"/>
      <url>/2020/10/12/leetcode/leetcode-877-%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-877-石子游戏"><a class="markdownIt-Anchor" href="#leetcode-877-石子游戏"></a> <a href="https://leetcode-cn.com/problems/stone-game/">leetcode-877. 石子游戏</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">stoneGame</span><span class="params">(<span class="keyword">int</span>[] piles)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = piles.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        <span class="comment">//初始化dp,当i==j时,证明只有这个数字可选了</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    dp[i][j] = piles[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 斜着遍历距离,每次求先手的与后手的差值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="comment">//从倒数第二行开始遍历</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="comment">// 从i+1列开始遍历</span></span><br><span class="line">                dp[i][j] = Math.max(piles[i] - dp[i + <span class="number">1</span>][j], piles[j] - dp[i][j - <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>][n-<span class="number">1</span>] &gt; <span class="number">0</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1339. 分裂二叉树的最大乘积</title>
      <link href="/2020/10/12/leetcode/leetcode-1339-%E5%88%86%E8%A3%82%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/"/>
      <url>/2020/10/12/leetcode/leetcode-1339-%E5%88%86%E8%A3%82%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1339-分裂二叉树的最大乘积"><a class="markdownIt-Anchor" href="#leetcode-1339-分裂二叉树的最大乘积"></a> <a href="https://leetcode-cn.com/problems/maximum-product-of-splitted-binary-tree/">leetcode-1339. 分裂二叉树的最大乘积</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> max = <span class="number">0</span>;</span><br><span class="line">    TreeNode r;</span><br><span class="line">    Map&lt;TreeNode, Long&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化map</span></span><br><span class="line">        dfs(root);</span><br><span class="line">        r = root;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求最大乘积</span></span><br><span class="line">        dfs2(root);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)(max % <span class="number">1000000007</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 切割左子树</span></span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            max =Math.max(max, map.get(root.left) * (map.get(r) - map.get(root.left)));</span><br><span class="line">            dfs2(root.left);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 切割右子树</span></span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            max =Math.max(max, map.get(root.right) * (map.get(r) - map.get(root.right)));</span><br><span class="line">            dfs2(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        map.put(root, map.getOrDefault(root, <span class="number">0L</span>) + root.val);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            map.put(root, map.getOrDefault(root.left, <span class="number">0L</span>) + map.get(root));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            map.put(root, map.getOrDefault(root.right, <span class="number">0L</span>) + map.get(root));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1347. 制造字母异位词的最小步骤数</title>
      <link href="/2020/10/12/leetcode/leetcode-1347-%E5%88%B6%E9%80%A0%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AD%A5%E9%AA%A4%E6%95%B0/"/>
      <url>/2020/10/12/leetcode/leetcode-1347-%E5%88%B6%E9%80%A0%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AD%A5%E9%AA%A4%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1347-制造字母异位词的最小步骤数"><a class="markdownIt-Anchor" href="#leetcode-1347-制造字母异位词的最小步骤数"></a> <a href="https://leetcode-cn.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/">leetcode-1347. 制造字母异位词的最小步骤数</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minSteps</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; sMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Map&lt;Character, Integer&gt; tMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            sMap.put(s.charAt(i), sMap.getOrDefault(s.charAt(i), <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            tMap.put(t.charAt(i), tMap.getOrDefault(t.charAt(i), <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Character, Integer&gt; entry : tMap.entrySet())&#123;</span><br><span class="line">            <span class="keyword">char</span> c = entry.getKey();</span><br><span class="line">            <span class="keyword">int</span> value = entry.getValue();</span><br><span class="line">            <span class="keyword">if</span> (sMap.containsKey(c)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sMap.get(c) &lt; value) &#123;</span><br><span class="line">                    ans += value - sMap.get(c);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ans += value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 08.09. 括号</title>
      <link href="/2020/10/12/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-08-09-%E6%8B%AC%E5%8F%B7/"/>
      <url>/2020/10/12/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-08-09-%E6%8B%AC%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-0809-括号"><a class="markdownIt-Anchor" href="#leetcode-面试题-0809-括号"></a> <a href="https://leetcode-cn.com/problems/bracket-lcci/">leetcode-面试题 08.09. 括号</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">generateParenthesis</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;&quot;</span>, n);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, String str, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (str.length() == <span class="number">2</span> * n) &#123;</span><br><span class="line">            result.add(str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (left &lt; n) &#123;</span><br><span class="line">            dfs(left + <span class="number">1</span>, right, str + <span class="string">&quot;(&quot;</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (right &lt; left &amp;&amp; right &lt; n) &#123;</span><br><span class="line">            dfs(left, right + <span class="number">1</span>, str + <span class="string">&quot;)&quot;</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-530. 二叉搜索树的最小绝对差</title>
      <link href="/2020/10/12/leetcode/leetcode-530-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/"/>
      <url>/2020/10/12/leetcode/leetcode-530-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-530-二叉搜索树的最小绝对差"><a class="markdownIt-Anchor" href="#leetcode-530-二叉搜索树的最小绝对差"></a> <a href="https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/">leetcode-530. 二叉搜索树的最小绝对差</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">int</span> result = Integer.MAX_VALUE;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMinimumDifference</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">            result = Math.min(result,list.get(i)-list.get(i-<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        list.add(root.val);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-416. 分割等和子集</title>
      <link href="/2020/10/11/leetcode/leetcode-416-%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86/"/>
      <url>/2020/10/11/leetcode/leetcode-416-%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-416-分割等和子集"><a class="markdownIt-Anchor" href="#leetcode-416-分割等和子集"></a> <a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">leetcode-416. 分割等和子集</a></h4><p>0-1背包问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canPartition</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            total += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(total % <span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//总和为奇数</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> half = total / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[half+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = half; j &gt;= nums[i-<span class="number">1</span>]; j--)&#123;</span><br><span class="line">                dp[j] = Math.max(dp[j], dp[j-nums[i-<span class="number">1</span>]] + nums[i-<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[half] == half ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-5536. 最大网络秩</title>
      <link href="/2020/10/11/leetcode/leetcode-5536-%E6%9C%80%E5%A4%A7%E7%BD%91%E7%BB%9C%E7%A7%A9/"/>
      <url>/2020/10/11/leetcode/leetcode-5536-%E6%9C%80%E5%A4%A7%E7%BD%91%E7%BB%9C%E7%A7%A9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-5536-最大网络秩"><a class="markdownIt-Anchor" href="#leetcode-5536-最大网络秩"></a> <a href="https://leetcode-cn.com/problems/maximal-network-rank/">leetcode-5536. 最大网络秩</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maximalNetworkRank</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] roads)</span> </span>&#123;</span><br><span class="line">        Map&lt;Integer, Set&lt;Integer&gt;&gt; graph = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            graph.put(i, <span class="keyword">new</span> HashSet&lt;Integer&gt;());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] road: roads)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = road[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = road[<span class="number">1</span>];</span><br><span class="line">            graph.get(a).add(b);</span><br><span class="line">            graph.get(b).add(a);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历每两个城市</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">                ans += graph.get(i).size();</span><br><span class="line">                ans += graph.get(j).size();</span><br><span class="line">                <span class="comment">//去除重叠的边</span></span><br><span class="line">                <span class="keyword">if</span>(graph.get(i).contains(j))&#123;</span><br><span class="line">                    ans -= <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                result = Math.max(result, ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1249. 移除无效的括号</title>
      <link href="/2020/10/10/leetcode/leetcode-1249-%E7%A7%BB%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/"/>
      <url>/2020/10/10/leetcode/leetcode-1249-%E7%A7%BB%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1249-移除无效的括号"><a class="markdownIt-Anchor" href="#leetcode-1249-移除无效的括号"></a> <a href="https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses/">leetcode-1249. 移除无效的括号</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">minRemoveToMakeValid</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span> ch1 = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        <span class="keyword">char</span> ch2 = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="comment">// 将&#x27;(&#x27;入栈</span></span><br><span class="line">            <span class="keyword">char</span> ch = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (ch == ch1) &#123;</span><br><span class="line">                stack.push(i);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == ch2) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!stack.empty()) &#123;</span><br><span class="line">                    stack.pop();</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//如果栈中没有元素,则记录需要删除的idx</span></span><br><span class="line">                    set.add(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将栈中剩余的与set的元素都删除</span></span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!stack.contains(i) &amp;&amp; !set.contains(i)) &#123;</span><br><span class="line">                ans += s.charAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 17.15. 最长单词</title>
      <link href="/2020/10/10/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-15-%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D/"/>
      <url>/2020/10/10/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-17-15-%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-1715-最长单词"><a class="markdownIt-Anchor" href="#leetcode-面试题-1715-最长单词"></a> <a href="https://leetcode-cn.com/problems/longest-word-lcci/">leetcode-面试题 17.15. 最长单词</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestWord</span><span class="params">(String[] words)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(words,(o1,o2)-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(o1.length() == o2.length())</span><br><span class="line">                <span class="keyword">return</span> o1.compareTo(o2);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> Integer.compare(o2.length(),o1.length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(words));</span><br><span class="line">        <span class="keyword">for</span> (String str : words) &#123;</span><br><span class="line">            set.remove(str);</span><br><span class="line">            <span class="keyword">if</span> (dfs(set, str))&#123;</span><br><span class="line">                <span class="keyword">return</span> str;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(Set&lt;String&gt; set, String target)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (target.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; target.length(); i++) &#123;</span><br><span class="line">            <span class="comment">//截取0-i的长度的子字符串</span></span><br><span class="line">            <span class="keyword">if</span> (set.contains(target.substring(<span class="number">0</span>, i + <span class="number">1</span>)) &amp;&amp; dfs(set, target.substring(i + <span class="number">1</span>))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1609. 奇偶树</title>
      <link href="/2020/10/10/leetcode/leetcode-1609-%E5%A5%87%E5%81%B6%E6%A0%91/"/>
      <url>/2020/10/10/leetcode/leetcode-1609-%E5%A5%87%E5%81%B6%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1609-奇偶树"><a class="markdownIt-Anchor" href="#leetcode-1609-奇偶树"></a> <a href="https://leetcode-cn.com/problems/even-odd-tree/">leetcode-1609. 奇偶树</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEvenOddTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> level = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            <span class="keyword">int</span> tmp = Integer.MAX_VALUE;</span><br><span class="line">            <span class="keyword">int</span> tmp2 = Integer.MIN_VALUE;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                <span class="keyword">if</span> (level % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//偶数层</span></span><br><span class="line">                    <span class="keyword">if</span> (node.val % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (node.val &lt;= tmp2)&#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    tmp2 = node.val;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//奇数层</span></span><br><span class="line">                    <span class="keyword">if</span> (node.val % <span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (node.val &gt;= tmp)&#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    tmp = node.val;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!b)&#123;</span><br><span class="line">                    <span class="keyword">return</span> b;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(node.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            level++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-142. 环形链表 II</title>
      <link href="/2020/10/10/leetcode/leetcode-142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-II/"/>
      <url>/2020/10/10/leetcode/leetcode-142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-142-环形链表-ii"><a class="markdownIt-Anchor" href="#leetcode-142-环形链表-ii"></a> <a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">leetcode-142. 环形链表 II</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Set&lt;ListNode&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">detectCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (set.contains(head))&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        set.add(head);</span><br><span class="line">        <span class="keyword">if</span> (head.next!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> detectCycle(head.next);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1423. 可获得的最大点数</title>
      <link href="/2020/10/09/leetcode/leetcode-1423-%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%82%B9%E6%95%B0/"/>
      <url>/2020/10/09/leetcode/leetcode-1423-%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%82%B9%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1423-可获得的最大点数"><a class="markdownIt-Anchor" href="#leetcode-1423-可获得的最大点数"></a> <a href="https://leetcode-cn.com/problems/maximum-points-you-can-obtain-from-cards/">leetcode-1423. 可获得的最大点数</a></h4><h4 id="使用滑动数组"><a class="markdownIt-Anchor" href="#使用滑动数组"></a> <strong>使用滑动数组</strong></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxScore</span><span class="params">(<span class="keyword">int</span>[] cardPoints, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = cardPoints.length;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (k &gt;= n) &#123;</span><br><span class="line">            <span class="comment">//全拿</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                result += cardPoints[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义滑动数组</span></span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r = n - k - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> minValue = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (r &lt; n) &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//一直滑动计算最小值</span></span><br><span class="line">            <span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">                    ans += cardPoints[i];</span><br><span class="line">                &#125;</span><br><span class="line">                x = ans;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ans = x - cardPoints[l-<span class="number">1</span>] + cardPoints[r];</span><br><span class="line">                x = ans;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            minValue = Math.min(minValue, ans);</span><br><span class="line"></span><br><span class="line">            l++;</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            max += cardPoints[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max - minValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>前缀和解法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxScore</span><span class="params">(<span class="keyword">int</span>[] cardPoints, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = cardPoints.length;</span><br><span class="line">        <span class="keyword">int</span>[] s = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            s[i] = s[i-<span class="number">1</span>] + cardPoints[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//一共取k次,则左边取i次,右边取k-i次</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= k; i++)&#123;</span><br><span class="line">            result = Math.max(result,s[i]+s[n]-s[n-k+i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-743. 网络延迟时间</title>
      <link href="/2020/09/30/leetcode/leetcode-743-%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4/"/>
      <url>/2020/09/30/leetcode/leetcode-743-%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-743-网络延迟时间"><a class="markdownIt-Anchor" href="#leetcode-743-网络延迟时间"></a> <a href="https://leetcode-cn.com/problems/network-delay-time/">leetcode-743. 网络延迟时间</a></h4><p><strong>floyd算法求多源最短路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[][] dist;</span><br><span class="line">    <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">networkDelayTime</span><span class="params">(<span class="keyword">int</span>[][] times, <span class="keyword">int</span> N, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>][N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N + <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N + <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    <span class="comment">// 自己到自己距离为0</span></span><br><span class="line">                    dist[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dist[i][j] = inf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读入数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] arr : times) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> c = arr[<span class="number">2</span>];</span><br><span class="line">            dist[a][b] = Math.min(dist[a][b], c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        floyd(N);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == K) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            result = Math.max(result, dist[K][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result &gt; inf/<span class="number">2</span> ? -<span class="number">1</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">floyd</span><span class="params">(<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= N; k++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= N; j++) &#123;</span><br><span class="line">                    dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>朴素dijkstra算法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 使用邻接矩阵存储图</span></span><br><span class="line">    <span class="keyword">int</span>[][] g;</span><br><span class="line">    <span class="keyword">int</span>[] dist;</span><br><span class="line">    <span class="keyword">boolean</span>[] st;</span><br><span class="line">    <span class="keyword">int</span> inf = <span class="number">100000000</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">networkDelayTime</span><span class="params">(<span class="keyword">int</span>[][] times, <span class="keyword">int</span> N, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> n = times.length;</span><br><span class="line">        g = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>][N+<span class="number">1</span>];</span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>];</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[N+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化距离</span></span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line"></span><br><span class="line">        dist[K] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化图</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; g.length; i++)&#123;</span><br><span class="line">            Arrays.fill(g[i], inf);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//读入图数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; times.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = times[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = times[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> c = times[i][<span class="number">2</span>];</span><br><span class="line">            <span class="comment">// 只保留最小的边</span></span><br><span class="line">            g[a][b] = Math.min(g[a][b], c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dijkstra(N, K);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">            result = Math.max(result, dist[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result == inf ? -<span class="number">1</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用朴素dijkstra</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> K)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">            <span class="comment">//找出距离K点最小的点</span></span><br><span class="line">            <span class="keyword">int</span> t = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= N; j++)&#123;                </span><br><span class="line">                <span class="keyword">if</span>(!st[j] &amp;&amp; (t== -<span class="number">1</span> || dist[j] &lt; dist[t]))&#123;</span><br><span class="line">                    t = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            st[t] = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用t更新其它的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;=N; j++)&#123;</span><br><span class="line">                dist[j] = Math.min(dist[j],g[t][j]+dist[t]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>堆优化版dijkstra算法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 使用邻接表存储图</span></span><br><span class="line">    <span class="keyword">int</span>[] e;</span><br><span class="line">    <span class="keyword">int</span>[] w;</span><br><span class="line">    <span class="keyword">int</span>[] ne;</span><br><span class="line">    <span class="keyword">int</span>[] h;</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] dist;</span><br><span class="line">    <span class="keyword">boolean</span>[] st;</span><br><span class="line">    <span class="keyword">int</span> inf = <span class="number">100000000</span>;</span><br><span class="line">    PriorityQueue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1,o2)-&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span> o1[<span class="number">1</span>]-o2[<span class="number">1</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">networkDelayTime</span><span class="params">(<span class="keyword">int</span>[][] times, <span class="keyword">int</span> N, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化邻接表</span></span><br><span class="line">        <span class="keyword">int</span> n = times.length + <span class="number">10</span>;</span><br><span class="line">        e = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        w = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        ne = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        h = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        Arrays.fill(h, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化距离</span></span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>];</span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line">        <span class="comment">// K点距离起始点的路径为0</span></span><br><span class="line">        dist[K] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化是否访问</span></span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[N+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读入图数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; times.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = times[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = times[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> c = times[i][<span class="number">2</span>];</span><br><span class="line">            add(a, b, c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dijstra(K);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">            result = Math.max(result, dist[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result == inf ? -<span class="number">1</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 堆优化版的dijkstra算法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dijstra</span><span class="params">(<span class="keyword">int</span> K)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 将起始点放入最小堆中</span></span><br><span class="line">        queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;K, <span class="number">0</span>&#125;);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = queue.poll();</span><br><span class="line">            <span class="keyword">int</span> t = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> distance = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="comment">//将t置为true，表示t这个节点已经访问过了</span></span><br><span class="line">            st[t] = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = h[t]; i != -<span class="number">1</span>; i = ne[i])&#123;</span><br><span class="line">                <span class="keyword">int</span> j = e[i];</span><br><span class="line">                <span class="keyword">if</span>(dist[j] &gt; distance + w[i])&#123;</span><br><span class="line">                    dist[j] = distance + w[i];</span><br><span class="line">                    <span class="comment">//对加入的节点进行入队</span></span><br><span class="line">                    <span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">                        queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;j, dist[j]&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        e[idx] = b;</span><br><span class="line">        w[idx] = c;</span><br><span class="line">        ne[idx] = h[a];</span><br><span class="line">        h[a] = idx++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Bellman-ford算法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 使用bellman-ford算法</span></span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">10000</span>;</span><br><span class="line">    Graph[] g = <span class="keyword">new</span> Graph[N];</span><br><span class="line">    <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">networkDelayTime</span><span class="params">(<span class="keyword">int</span>[][] times, <span class="keyword">int</span> N, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = times.length;</span><br><span class="line">        <span class="comment">// 读入图数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; times.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = times[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = times[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> c = times[i][<span class="number">2</span>];</span><br><span class="line">            g[i] = <span class="keyword">new</span> Graph(a, b, c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bellman(g, N, K, m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">            result = Math.max(result, dist[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result == <span class="number">1000000000</span> ? -<span class="number">1</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bellman</span><span class="params">(Graph[] g, <span class="keyword">int</span> N, <span class="keyword">int</span> K, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 初始化边距</span></span><br><span class="line">        Arrays.fill(dist, <span class="number">1000000000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从K点出发,所以dist[K] = 0;</span></span><br><span class="line">        dist[K] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 最多进行N-1次边松弛</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)&#123;</span><br><span class="line">            <span class="comment">// 每次使用上一次的结果进行计算,避免数据串联</span></span><br><span class="line">            <span class="keyword">int</span>[] copy = Arrays.copyOf(dist, dist.length);</span><br><span class="line">            <span class="comment">// 每次遍历所有边</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> a = g[j].a;</span><br><span class="line">                <span class="keyword">int</span> b = g[j].b;</span><br><span class="line">                <span class="keyword">int</span> c = g[j].c;</span><br><span class="line">                dist[b] = Math.min(dist[b], copy[a]+c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个储存图数据的结构</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graph</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> c;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Graph</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">        <span class="keyword">this</span>.b = b;</span><br><span class="line">        <span class="keyword">this</span>.c = c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>spfa算法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 使用spfa算法</span></span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">10000</span>;</span><br><span class="line">    <span class="comment">//定义邻接表</span></span><br><span class="line">    <span class="keyword">int</span>[] e = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">int</span>[] w = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">int</span>[] ne = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">int</span>[] h = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="comment">// st表示是否在队列中</span></span><br><span class="line">    <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[N];</span><br><span class="line">    LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">networkDelayTime</span><span class="params">(<span class="keyword">int</span>[][] times, <span class="keyword">int</span> N, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化头结点h</span></span><br><span class="line">        Arrays.fill(h, -<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//读入数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; times.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = times[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> b = times[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> c = times[i][<span class="number">2</span>];</span><br><span class="line">            add(a, b, c); </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// spfa算法</span></span><br><span class="line">        spfa(K);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">            result = Math.max(result, dist[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result == <span class="number">1000000000</span> ? -<span class="number">1</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> K)</span></span>&#123;</span><br><span class="line">        <span class="comment">//初始化距离</span></span><br><span class="line">        Arrays.fill(dist, <span class="number">1000000000</span>);</span><br><span class="line"></span><br><span class="line">        dist[K] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将K点加入队列中</span></span><br><span class="line">        queue.offer(K);</span><br><span class="line">        <span class="comment">// K已经存在队列中</span></span><br><span class="line">        st[K] = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> t = queue.poll();</span><br><span class="line">            st[t] = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新t点相关联的所有边</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = h[t]; i != -<span class="number">1</span>; i = ne[i])&#123;</span><br><span class="line">                <span class="keyword">int</span> j = e[i];</span><br><span class="line">                <span class="keyword">if</span>(dist[j] &gt; dist[t] + w[i])&#123;</span><br><span class="line">                    dist[j] = dist[t] + w[i];</span><br><span class="line">                    <span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">                        queue.offer(j);</span><br><span class="line">                        st[j] = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        e[idx] = b;</span><br><span class="line">        w[idx] = c;</span><br><span class="line">        ne[idx] = h[a];</span><br><span class="line">        h[a] = idx++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-957. N 天后的牢房</title>
      <link href="/2020/09/30/leetcode/leetcode-957-N-%E5%A4%A9%E5%90%8E%E7%9A%84%E7%89%A2%E6%88%BF/"/>
      <url>/2020/09/30/leetcode/leetcode-957-N-%E5%A4%A9%E5%90%8E%E7%9A%84%E7%89%A2%E6%88%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-957-n-天后的牢房"><a class="markdownIt-Anchor" href="#leetcode-957-n-天后的牢房"></a> <a href="https://leetcode-cn.com/problems/prison-cells-after-n-days/">leetcode-957. N 天后的牢房</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    Map&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] prisonAfterNDays(<span class="keyword">int</span>[] cells, <span class="keyword">int</span> N) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[cells.length];</span><br><span class="line"></span><br><span class="line">        dfs(cells, N, ans);</span><br><span class="line">        <span class="keyword">int</span> k = N % map.size();</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">            k = map.size();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String[] spl = <span class="keyword">new</span> String[cells.length];</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Integer&gt; entry: map.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue() == k) &#123;</span><br><span class="line">                String str = entry.getKey();</span><br><span class="line">                str = str.substring(<span class="number">1</span>, str.length()-<span class="number">1</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                spl = str.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cells.length; i++) &#123;</span><br><span class="line">            ans[i] = Integer.parseInt(spl[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[] cells, <span class="keyword">int</span> N, <span class="keyword">int</span>[] ans)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (count &gt;= N) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        count++;</span><br><span class="line">        ans[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        ans[ans.length - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cells.length - <span class="number">2</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cells[j - <span class="number">1</span>] == cells[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                ans[j] = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ans[j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(Arrays.toString(ans))) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        map.put(Arrays.toString(ans), count);</span><br><span class="line">        dfs(ans, N, cells);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-890. 查找和替换模式</title>
      <link href="/2020/09/30/leetcode/leetcode-890-%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/09/30/leetcode/leetcode-890-%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-890-查找和替换模式"><a class="markdownIt-Anchor" href="#leetcode-890-查找和替换模式"></a> <a href="https://leetcode-cn.com/problems/find-and-replace-pattern/">leetcode-890. 查找和替换模式</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">findAndReplacePattern</span><span class="params">(String[] words, String pattern)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Map&lt;Character, Character&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Map&lt;Character, Character&gt; rmap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; words.length; i++) &#123;</span><br><span class="line">            map.clear();</span><br><span class="line">            rmap.clear();</span><br><span class="line">            <span class="keyword">if</span> (words[i].length() != pattern.length()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; words[i].length(); j++) &#123;</span><br><span class="line">                <span class="comment">// 进行模式比较</span></span><br><span class="line">                <span class="keyword">char</span> chr1 = words[i].charAt(j);</span><br><span class="line">                <span class="keyword">char</span> chr2 = pattern.charAt(j);</span><br><span class="line">                <span class="keyword">if</span> (!map.containsKey(chr2) &amp;&amp; !rmap.containsKey(chr1) ) &#123;</span><br><span class="line">                    map.put(chr2, chr1);</span><br><span class="line">                    rmap.put(chr1, chr2);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (map.containsKey(chr2) &amp;&amp; map.get(chr2) != chr1) &#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (rmap.containsKey(chr1) &amp;&amp; rmap.get(chr1) != chr2) &#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                result.add(words[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-921. 使括号有效的最少添加</title>
      <link href="/2020/09/30/leetcode/leetcode-921-%E4%BD%BF%E6%8B%AC%E5%8F%B7%E6%9C%89%E6%95%88%E7%9A%84%E6%9C%80%E5%B0%91%E6%B7%BB%E5%8A%A0/"/>
      <url>/2020/09/30/leetcode/leetcode-921-%E4%BD%BF%E6%8B%AC%E5%8F%B7%E6%9C%89%E6%95%88%E7%9A%84%E6%9C%80%E5%B0%91%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-921-使括号有效的最少添加"><a class="markdownIt-Anchor" href="#leetcode-921-使括号有效的最少添加"></a> <a href="https://leetcode-cn.com/problems/minimum-add-to-make-parentheses-valid/">leetcode-921. 使括号有效的最少添加</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minAddToMakeValid</span><span class="params">(String S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c1 = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        <span class="keyword">char</span> c2 = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> chr = S.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (stack.empty()) &#123;</span><br><span class="line">                stack.push(chr);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (chr == c2 &amp;&amp; stack.peek() == c1 ) &#123;</span><br><span class="line">                    stack.pop();</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    stack.push(chr);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stack.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing- 858. Prim算法求最小生成树</title>
      <link href="/2020/09/30/acwing/acwing-858-Prim%E7%AE%97%E6%B3%95%E6%B1%82%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
      <url>/2020/09/30/acwing/acwing-858-Prim%E7%AE%97%E6%B3%95%E6%B1%82%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/activity/content/code/content/48767/">acwing- 858. Prim算法求最小生成树</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] g = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">501</span>][<span class="number">501</span>];</span><br><span class="line">        <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">501</span>];</span><br><span class="line">        <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">501</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化g</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; g.length; i++)&#123;</span><br><span class="line">            Arrays.fill(g[i], <span class="number">1000000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">            g[a][b] = Math.min(g[a][b], c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(prim(n, g, dist, st));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将节点不断加入集合中，形成最小树</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">prim</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span>[][] g,<span class="keyword">int</span>[] dist,<span class="keyword">boolean</span>[] st)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 初始化每个点距离集合的距离</span></span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line">        <span class="comment">//统计结果</span></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//每次添加一个节点到集合中，并用该节点更新其它节点</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> t = -<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//寻找距离集合最小的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!st[j] &amp;&amp; (t == -<span class="number">1</span> || dist[j] &lt; dist[t]))&#123;</span><br><span class="line">                    t = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 将t这个节点加入集合中</span></span><br><span class="line">            st[t] = <span class="keyword">true</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 如果存在不联通的点</span></span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">0</span> &amp;&amp; dist[t] == inf)&#123;</span><br><span class="line">                <span class="keyword">return</span> inf;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//第一次只把第一个点加入了集合,所有从i=1开始累加</span></span><br><span class="line">                result += dist[t];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 使用t这个点去更新其它节点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;=n; j++)&#123;</span><br><span class="line">                dist[j] = Math.min(dist[j],g[t][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-701. 二叉搜索树中的插入操作</title>
      <link href="/2020/09/30/leetcode/leetcode-701-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/09/30/leetcode/leetcode-701-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-701-二叉搜索树中的插入操作"><a class="markdownIt-Anchor" href="#leetcode-701-二叉搜索树中的插入操作"></a> <a href="https://leetcode-cn.com/problems/insert-into-a-binary-search-tree/">leetcode-701. 二叉搜索树中的插入操作</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">insertIntoBST</span><span class="params">(TreeNode root, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">new</span> TreeNode(val);</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(root, val);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.val &gt; val)&#123;</span><br><span class="line">            <span class="keyword">if</span> (root.left == <span class="keyword">null</span>) &#123;</span><br><span class="line">                TreeNode node = <span class="keyword">new</span> TreeNode(val);</span><br><span class="line">                root.left = node;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            dfs(root.left, val);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.val &lt; val)&#123;</span><br><span class="line">            <span class="keyword">if</span> (root.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">                TreeNode node = <span class="keyword">new</span> TreeNode(val);</span><br><span class="line">                root.right = node;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            dfs(root.right, val);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-947. 移除最多的同行或同列石头</title>
      <link href="/2020/09/29/leetcode/leetcode-947-%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4/"/>
      <url>/2020/09/29/leetcode/leetcode-947-%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-947-移除最多的同行或同列石头"><a class="markdownIt-Anchor" href="#leetcode-947-移除最多的同行或同列石头"></a> <a href="https://leetcode-cn.com/problems/most-stones-removed-with-same-row-or-column/">leetcode-947. 移除最多的同行或同列石头</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeStones</span><span class="params">(<span class="keyword">int</span>[][] stones)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = stones.length;</span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据读入</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stones.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = stones[i];</span><br><span class="line">            <span class="keyword">int</span> x = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> y = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; stones.length; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span>[] arr2 = stones[j];</span><br><span class="line">                <span class="keyword">int</span> x2 = arr2[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">int</span> y2 = arr2[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (x == x2 || y == y2) &#123;</span><br><span class="line">                    <span class="comment">//证明在同行或者同列</span></span><br><span class="line">                    unoin(i, j, parent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parent.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parent[i] == i) &#123;</span><br><span class="line">                <span class="comment">//存在一个根节点为i的根</span></span><br><span class="line">                <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">//遍历这个圈中有多少个元素</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; parent.length; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (find(j, parent) == i) &#123;</span><br><span class="line">                        count++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (count &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    result += count - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> j, <span class="keyword">int</span>[] parent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (j != parent[j]) &#123;</span><br><span class="line">            parent[j] = find(parent[j], parent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unoin</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span>[] parent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(i, parent);</span><br><span class="line">        <span class="keyword">int</span> y = find(j, parent);</span><br><span class="line">        <span class="keyword">if</span> (x != y) &#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-130. 被围绕的区域</title>
      <link href="/2020/09/29/leetcode/leetcode-130-%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F/"/>
      <url>/2020/09/29/leetcode/leetcode-130-%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-130-被围绕的区域"><a class="markdownIt-Anchor" href="#leetcode-130-被围绕的区域"></a> <a href="https://leetcode-cn.com/problems/surrounded-regions/">leetcode-130. 被围绕的区域</a></h4><p><strong>原始思路：并查集</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">char</span>[][] board)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = board.length;</span><br><span class="line">        <span class="keyword">if</span> (n1 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> n2 = board[<span class="number">0</span>].length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[n1 * n2];</span><br><span class="line">        <span class="comment">// 初始化并查集</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parent.length; i++) &#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][j] == <span class="string">&#x27;O&#x27;</span> &amp;&amp; board[i][j - <span class="number">1</span>] == board[i][j]) &#123;</span><br><span class="line">                    union(i * n2 + j, i * n2 + j - <span class="number">1</span>, parent);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (board[i][j] == <span class="string">&#x27;O&#x27;</span> &amp;&amp; board[i+<span class="number">1</span>][j] == board[i][j]) &#123;</span><br><span class="line">                    union(i * n2 + j, (i+<span class="number">1</span>) * n2 + j, parent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parent.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = i / n2;</span><br><span class="line">            <span class="keyword">int</span> y = i - x * n2;</span><br><span class="line">            <span class="keyword">if</span> (i == parent[i] &amp;&amp; board[x][y] == <span class="string">&#x27;O&#x27;</span>) &#123;</span><br><span class="line">                list.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; parent.length; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = j / n2;</span><br><span class="line">                <span class="keyword">int</span> y = j - x * n2;</span><br><span class="line">                <span class="keyword">if</span> (find(j, parent) == list.get(i) &amp;&amp; (x == <span class="number">0</span> || x == n1 - <span class="number">1</span> || y == <span class="number">0</span> || y == n2 - <span class="number">1</span>)) &#123;</span><br><span class="line">                    b = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; parent.length; j++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> x = j / n2;</span><br><span class="line">                    <span class="keyword">int</span> y = j - x * n2;</span><br><span class="line">                    <span class="keyword">if</span> (find(j, parent) == list.get(i)) &#123;</span><br><span class="line">                        board[x][y] =<span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span>[] parent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (parent[k] != k) &#123;</span><br><span class="line">            parent[k] = find(parent[k], parent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span>[] parent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(i, parent);</span><br><span class="line">        <span class="keyword">int</span> y = find(j, parent);</span><br><span class="line">        <span class="keyword">if</span> (x != y) &#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-684. 冗余连接</title>
      <link href="/2020/09/29/leetcode/leetcode-684-%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5/"/>
      <url>/2020/09/29/leetcode/leetcode-684-%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-684-冗余连接"><a class="markdownIt-Anchor" href="#leetcode-684-冗余连接"></a> <a href="https://leetcode-cn.com/problems/redundant-connection/">leetcode-684. 冗余连接</a></h4><p><strong>并查集解决图中只存在一个树的问题</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] parent;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] findRedundantConnection(<span class="keyword">int</span>[][] edges) &#123;</span><br><span class="line">        <span class="keyword">int</span> N = edges.length + <span class="number">1</span>;</span><br><span class="line">        parent = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;&#125;;</span><br><span class="line">        <span class="comment">//读入所有边去除删除的边</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; edges.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 初始化并查集</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line">                parent[j] = j;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 除了i这个边不要</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; edges.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//连接边</span></span><br><span class="line">                <span class="keyword">int</span>[] edge = edges[j];</span><br><span class="line">                union(edge[<span class="number">0</span>], edge[<span class="number">1</span>], parent);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断是否只存在一个根</span></span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; N; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (parent[j] == j) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">1</span>) &#123;</span><br><span class="line">                result = edges[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> i , <span class="keyword">int</span>[] parent)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i != parent[i]) &#123;</span><br><span class="line">            parent[i] = find(parent[i], parent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j,<span class="keyword">int</span>[] parent)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(i, parent);</span><br><span class="line">        <span class="keyword">int</span> y = find(j, parent);</span><br><span class="line">        <span class="keyword">if</span> (x != y) &#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-841. 钥匙和房间</title>
      <link href="/2020/09/29/leetcode/leetcode-841-%E9%92%A5%E5%8C%99%E5%92%8C%E6%88%BF%E9%97%B4/"/>
      <url>/2020/09/29/leetcode/leetcode-841-%E9%92%A5%E5%8C%99%E5%92%8C%E6%88%BF%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">boolean</span>[] st;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canVisitAllRooms</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = rooms.size();</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        set.add(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> dfs(<span class="number">0</span>, n, rooms);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n, List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (set.size() == n) &#123;</span><br><span class="line">            <span class="comment">// 拥有所有钥匙</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        st[cur] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rooms.get(cur).size(); i++) &#123;</span><br><span class="line">            set.add(rooms.get(cur).get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Integer k : set) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!st[k]) &#123;</span><br><span class="line">                <span class="keyword">return</span> dfs(k, n, rooms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解DFS</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">boolean</span>[] st;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canVisitAllRooms</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = rooms.size();</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        dfs(<span class="number">0</span>, rooms);</span><br><span class="line">        <span class="keyword">return</span> num == n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        num++;</span><br><span class="line">        st[cur] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rooms.get(cur).size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[rooms.get(cur).get(i)])&#123;</span><br><span class="line">                dfs(rooms.get(cur).get(i), rooms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解BFS</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">boolean</span>[] st;</span><br><span class="line">LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canVisitAllRooms</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = rooms.size();</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        queue.offer(<span class="number">0</span>);</span><br><span class="line">        st[<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        bfs(<span class="number">0</span>, rooms);</span><br><span class="line">        <span class="keyword">return</span> num == n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> cur, List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            num++;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> k = queue.poll();</span><br><span class="line">                <span class="keyword">for</span>(Integer j : rooms.get(k))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">                        st[j] = <span class="keyword">true</span>;</span><br><span class="line">                        queue.add(j);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-145. 二叉树的后序遍历</title>
      <link href="/2020/09/29/leetcode/leetcode-145-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
      <url>/2020/09/29/leetcode/leetcode-145-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-145-二叉树的后序遍历"><a class="markdownIt-Anchor" href="#leetcode-145-二叉树的后序遍历"></a> <a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/">leetcode-145. 二叉树的后序遍历</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">postorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root != <span class="keyword">null</span>)&#123;</span><br><span class="line">            result.add(root.val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing- 854. Floyd求最短路</title>
      <link href="/2020/09/29/acwing/acwing-854-Floyd%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
      <url>/2020/09/29/acwing/acwing-854-Floyd%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/activity/content/code/content/48531/">AcWing 854. Floyd求最短路</a></p><p><strong>基础模板</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基础模板,伪代码</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">        <span class="comment">// n个点,定义邻接矩阵</span></span><br><span class="line">        <span class="keyword">int</span>[][] dist = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化邻接矩阵</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==j)&#123;</span><br><span class="line">                    <span class="comment">// 自己到自己为0</span></span><br><span class="line">                    dist[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">// 初始化无法达到的最大值</span></span><br><span class="line">                    dist[i][j] = inf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读入图数据 注意自环和重边</span></span><br><span class="line">        <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">        dist[a][b] = Math.min(dist[a][b], c)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 调用floyd算法</span></span><br><span class="line">        floyd(dist, n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">floyd</span><span class="params">(<span class="keyword">int</span>[][] dist, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 经过1到k这些点</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                    dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路:</strong> <a href="https://www.acwing.com/solution/content/6337/">小呆呆题解</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> q;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">210</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[][] d = <span class="keyword">new</span> <span class="keyword">int</span>[N][N];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= n;k++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n;j++)</span><br><span class="line">                    d[i][j] = Math.min(d[i][j], d[i][k] + d[k][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        String[] str1 = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        n = Integer.parseInt(str1[<span class="number">0</span>]);</span><br><span class="line">        m = Integer.parseInt(str1[<span class="number">1</span>]);</span><br><span class="line">        q = Integer.parseInt(str1[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i == j) d[i][j] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> d[i][j] = INF;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m -- &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            String[] str2 = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> a = Integer.parseInt(str2[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">int</span> b = Integer.parseInt(str2[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">int</span> c = Integer.parseInt(str2[<span class="number">2</span>]);</span><br><span class="line">            d[a][b] = Math.min(d[a][b], c);<span class="comment">//若有重边选择短的边</span></span><br><span class="line">        &#125;</span><br><span class="line">        floyd();</span><br><span class="line">        <span class="keyword">while</span>(q -- &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            String[] str3 = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> a = Integer.parseInt(str3[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">int</span> b = Integer.parseInt(str3[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">int</span> t = d[a][b];</span><br><span class="line">            <span class="keyword">if</span>(t &gt; INF / <span class="number">2</span>) System.out.println(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> System.out.println(t);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-852. spfa判断负环</title>
      <link href="/2020/09/28/acwing/acwing-852-spfa%E5%88%A4%E6%96%AD%E8%B4%9F%E7%8E%AF/"/>
      <url>/2020/09/28/acwing/acwing-852-spfa%E5%88%A4%E6%96%AD%E8%B4%9F%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/activity/content/code/content/48499/">acwing-852. spfa判断负环</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">    <span class="comment">// 定义邻接表</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] e;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] w;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] ne;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] h;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//定义距离</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] dist;</span><br><span class="line">    <span class="comment">//定义已经访问过的点</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">boolean</span>[] st;</span><br><span class="line">    <span class="comment">//定义一个最小堆</span></span><br><span class="line">    <span class="keyword">static</span> LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    <span class="comment">// 定义一个数组用来计数</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] count;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        e = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        w = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        ne = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        h = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n+<span class="number">1</span>];</span><br><span class="line">        count = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化</span></span><br><span class="line">        Arrays.fill(h, -<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">            </span><br><span class="line">            e[idx] = b;</span><br><span class="line">            w[idx] = c;</span><br><span class="line">            ne[idx] = h[a];</span><br><span class="line">            h[a] = idx++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">boolean</span> result = spfa(n);</span><br><span class="line">        System.out.print(result); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 初始化距离</span></span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将1号点放入queue</span></span><br><span class="line">        queue.offer(<span class="number">1</span>);</span><br><span class="line">        dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        st[<span class="number">1</span>] = <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> t = queue.poll();</span><br><span class="line">            st[t] = <span class="keyword">false</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = h[t]; i != -<span class="number">1</span>; i = ne[i])&#123;</span><br><span class="line">                <span class="keyword">int</span> j = e[i];</span><br><span class="line">                <span class="keyword">if</span>(dist[j] &gt; dist[t] + w[i])&#123;</span><br><span class="line">                    dist[j] = dist[t] + w[i];</span><br><span class="line">                    count[j] = count[t] + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(count[j] &gt;= n)&#123;</span><br><span class="line">                        <span class="comment">// 存在负环</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">                        <span class="comment">//将j加入堆</span></span><br><span class="line">                        queue.offer(j);</span><br><span class="line">                        st[j] = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-851. spfa求最短路</title>
      <link href="/2020/09/28/acwing/acwing-851-spfa%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
      <url>/2020/09/28/acwing/acwing-851-spfa%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/853/">acwing-851. spfa求最短路</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">    <span class="comment">// 定义邻接表</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] e;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] w;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] ne;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] h;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//定义距离</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] dist;</span><br><span class="line">    <span class="comment">//定义已经访问过的点</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">boolean</span>[] st;</span><br><span class="line">    <span class="comment">//定义一个最小堆</span></span><br><span class="line">    <span class="keyword">static</span> LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        e = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        w = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        ne = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        h = <span class="keyword">new</span> <span class="keyword">int</span>[m+<span class="number">1</span>];</span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n+<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化</span></span><br><span class="line">        Arrays.fill(h, -<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">            </span><br><span class="line">            e[idx] = b;</span><br><span class="line">            w[idx] = c;</span><br><span class="line">            ne[idx] = h[a];</span><br><span class="line">            h[a] = idx++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> result = spfa(n);</span><br><span class="line">        <span class="keyword">if</span>(result == -<span class="number">1</span>)&#123;</span><br><span class="line">             System.out.print(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           System.out.print(result); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 初始化距离</span></span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将1号点放入queue</span></span><br><span class="line">        queue.offer(<span class="number">1</span>);</span><br><span class="line">        dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        st[<span class="number">1</span>] = <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">int</span> t = queue.poll();</span><br><span class="line">            st[t] = <span class="keyword">false</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = h[t]; i != -<span class="number">1</span>; i = ne[i])&#123;</span><br><span class="line">                <span class="keyword">int</span> j = e[i];</span><br><span class="line">                <span class="keyword">if</span>(dist[j] &gt; dist[t] + w[i])&#123;</span><br><span class="line">                    dist[j] = dist[t] + w[i];</span><br><span class="line">                    <span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">                        <span class="comment">//将j加入堆</span></span><br><span class="line">                        queue.offer(j);</span><br><span class="line">                        st[j] = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dist[n] &gt; inf/<span class="number">2</span> ? -<span class="number">1</span> : dist[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1161. 最大层内元素和</title>
      <link href="/2020/09/28/leetcode/leetcode-1161-%E6%9C%80%E5%A4%A7%E5%B1%82%E5%86%85%E5%85%83%E7%B4%A0%E5%92%8C/"/>
      <url>/2020/09/28/leetcode/leetcode-1161-%E6%9C%80%E5%A4%A7%E5%B1%82%E5%86%85%E5%85%83%E7%B4%A0%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1161-最大层内元素和"><a class="markdownIt-Anchor" href="#leetcode-1161-最大层内元素和"></a> <a href="https://leetcode-cn.com/problems/maximum-level-sum-of-a-binary-tree/">leetcode-1161. 最大层内元素和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxLevelSum</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> level = <span class="number">0</span>;</span><br><span class="line">        LinkedList&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">while</span> (queue.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> n = queue.size();</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            level++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                count += node.val;</span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (max &lt; count)&#123;</span><br><span class="line">                max = count;</span><br><span class="line">                result = level;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1557. 可以到达所有点的最少点数目</title>
      <link href="/2020/09/28/leetcode/leetcode-1557-%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E7%82%B9%E6%95%B0%E7%9B%AE/"/>
      <url>/2020/09/28/leetcode/leetcode-1557-%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E7%82%B9%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1557-可以到达所有点的最少点数目"><a class="markdownIt-Anchor" href="#leetcode-1557-可以到达所有点的最少点数目"></a> <a href="https://leetcode-cn.com/problems/minimum-number-of-vertices-to-reach-all-nodes/">leetcode-1557. 可以到达所有点的最少点数目</a></h4><p><strong>使用逆向集合存储点的入度</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">findSmallestSetOfVertices</span><span class="params">(<span class="keyword">int</span> n, List&lt;List&lt;Integer&gt;&gt; edges)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Set&lt;Integer&gt;&gt; rgraph = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            rgraph.add(<span class="keyword">new</span> HashSet&lt;&gt;());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; edges.size(); i++) &#123;</span><br><span class="line">            rgraph.get(edges.get(i).get(<span class="number">1</span>)).add(edges.get(i).get(<span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rgraph.get(i).size() == <span class="number">0</span>) &#123;</span><br><span class="line">                result.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">findSmallestSetOfVertices</span><span class="params">(<span class="keyword">int</span> n, List&lt;List&lt;Integer&gt;&gt; edges)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 存储所有入度不为0的点</span></span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; edges.size(); i++)&#123;</span><br><span class="line">            set.add(edges.get(i).get(<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!set.contains(i))&#123;</span><br><span class="line">                ans.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 04.01. 节点间通路</title>
      <link href="/2020/09/28/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-04-01-%E8%8A%82%E7%82%B9%E9%97%B4%E9%80%9A%E8%B7%AF/"/>
      <url>/2020/09/28/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-04-01-%E8%8A%82%E7%82%B9%E9%97%B4%E9%80%9A%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-0401-节点间通路"><a class="markdownIt-Anchor" href="#leetcode-面试题-0401-节点间通路"></a> <a href="https://leetcode-cn.com/problems/route-between-nodes-lcci/">leetcode-面试题 04.01. 节点间通路</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Set&lt;Integer&gt;&gt; g = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findWhetherExistsPath</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] graph, <span class="keyword">int</span> start, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            g.add(<span class="keyword">new</span> HashSet&lt;Integer&gt;());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] arr :</span><br><span class="line">                graph) &#123;</span><br><span class="line">            g.get(arr[<span class="number">0</span>]).add(arr[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dfs(n, start, start, target);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> cur, <span class="keyword">int</span> start, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (cur == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历邻接矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (Integer i: g.get(cur)) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> bool = dfs(n, i, start, target);</span><br><span class="line">            <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-802. 找到最终的安全状态</title>
      <link href="/2020/09/28/leetcode/leetcode-802-%E6%89%BE%E5%88%B0%E6%9C%80%E7%BB%88%E7%9A%84%E5%AE%89%E5%85%A8%E7%8A%B6%E6%80%81/"/>
      <url>/2020/09/28/leetcode/leetcode-802-%E6%89%BE%E5%88%B0%E6%9C%80%E7%BB%88%E7%9A%84%E5%AE%89%E5%85%A8%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-802-找到最终的安全状态"><a class="markdownIt-Anchor" href="#leetcode-802-找到最终的安全状态"></a> <a href="https://leetcode-cn.com/problems/find-eventual-safe-states/">leetcode-802. 找到最终的安全状态</a></h4><p><strong>出度为零的点是安全的点</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">eventualSafeNodes</span><span class="params">(<span class="keyword">int</span>[][] graph)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = graph.length;</span><br><span class="line">        <span class="comment">//记录所有安全的点</span></span><br><span class="line">        Set&lt;Integer&gt; safe = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算所有点的出度,将出度为0的加入到队列中</span></span><br><span class="line">        LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//新建两个List存放图正向节点和边的反向节点</span></span><br><span class="line">        List&lt;Set&lt;Integer&gt;&gt; g = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Set&lt;Integer&gt;&gt; rg = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            g.add(<span class="keyword">new</span> HashSet&lt;Integer&gt;());</span><br><span class="line">            rg.add(<span class="keyword">new</span> HashSet&lt;Integer&gt;());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//向g和rg中存放数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (graph[i].length == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 说明无出边,证明这个点是安全的</span></span><br><span class="line">                queue.offer(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j : graph[i]) &#123;</span><br><span class="line">                g.get(i).add(j);</span><br><span class="line">                rg.get(j).add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (queue.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> k = queue.poll();</span><br><span class="line">            safe.add(k);</span><br><span class="line">            <span class="comment">// 遍历所有边是k的点</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i : rg.get(k)) &#123;</span><br><span class="line">                <span class="comment">// 从i节点所有边中移除k这个点</span></span><br><span class="line">                g.get(i).remove(k);</span><br><span class="line">                <span class="comment">//如果此时i这个点的出入为0,则加入队列</span></span><br><span class="line">                <span class="keyword">if</span> (g.get(i).size() == <span class="number">0</span>) &#123;</span><br><span class="line">                    queue.offer(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (safe.contains(i)) &#123;</span><br><span class="line">                result.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>图的深度优先遍历</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">eventualSafeNodes</span><span class="params">(<span class="keyword">int</span>[][] graph)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = graph.length;</span><br><span class="line">        <span class="comment">// 定义一个数组存储每个节点的状态,0表示未被遍历,1表示已被遍历但不安全的点,2表示已被遍历但是安全的点</span></span><br><span class="line">        <span class="keyword">int</span>[] st = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dfs(i, graph, st)) &#123;</span><br><span class="line">                result.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span>[][] graph, <span class="keyword">int</span>[] st)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (st[cur] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st[cur] == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        st[cur] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k : graph[cur]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (st[k] == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (st[k] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!dfs(k, graph, st)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        st[cur] = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1535. 找出数组游戏的赢家</title>
      <link href="/2020/09/25/leetcode/leetcode-1535-%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E6%B8%B8%E6%88%8F%E7%9A%84%E8%B5%A2%E5%AE%B6/"/>
      <url>/2020/09/25/leetcode/leetcode-1535-%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E6%B8%B8%E6%88%8F%E7%9A%84%E8%B5%A2%E5%AE%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1535-找出数组游戏的赢家"><a class="markdownIt-Anchor" href="#leetcode-1535-找出数组游戏的赢家"></a> <a href="https://leetcode-cn.com/problems/find-the-winner-of-an-array-game/">leetcode-1535. 找出数组游戏的赢家</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWinner</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;Integer&gt; list = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> max = -<span class="number">100000000</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            list.add(arr[i]);</span><br><span class="line">            max = Math.max(max, arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> bool = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> result = -<span class="number">100000000</span>;</span><br><span class="line">        <span class="keyword">while</span> (bool) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = list.get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> j = list.get(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (i == max || j == max) &#123;</span><br><span class="line">                <span class="keyword">return</span> max;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; j) &#123;</span><br><span class="line">                exchange(list, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (map.getOrDefault(i, <span class="number">0</span>) + <span class="number">1</span> == k) &#123;</span><br><span class="line">                    bool = <span class="keyword">false</span>;</span><br><span class="line">                    result = i;</span><br><span class="line">                &#125;</span><br><span class="line">                map.put(i, map.getOrDefault(i, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                exchange(list, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">if</span> (map.getOrDefault(j, <span class="number">0</span>) + <span class="number">1</span> == k) &#123;</span><br><span class="line">                    bool = <span class="keyword">false</span>;</span><br><span class="line">                    result = j;</span><br><span class="line">                &#125;</span><br><span class="line">                map.put(j, map.getOrDefault(j, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exchange</span><span class="params">(LinkedList&lt;Integer&gt; list, <span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="comment">//将较小的数移动至末尾</span></span><br><span class="line">        <span class="keyword">int</span> i = list.pollFirst();</span><br><span class="line">        <span class="keyword">int</span> j = list.pollFirst();</span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span><br><span class="line">            list.offerLast(i);</span><br><span class="line">            list.offerFirst(j);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            list.offerLast(j);</span><br><span class="line">            list.offerFirst(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1534. 统计好三元组</title>
      <link href="/2020/09/25/leetcode/leetcode-1534-%E7%BB%9F%E8%AE%A1%E5%A5%BD%E4%B8%89%E5%85%83%E7%BB%84/"/>
      <url>/2020/09/25/leetcode/leetcode-1534-%E7%BB%9F%E8%AE%A1%E5%A5%BD%E4%B8%89%E5%85%83%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1534-统计好三元组"><a class="markdownIt-Anchor" href="#leetcode-1534-统计好三元组"></a> <a href="https://leetcode-cn.com/problems/count-good-triplets/">leetcode-1534. 统计好三元组</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countGoodTriplets</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>, arr, a, b, c);</span><br><span class="line">        <span class="keyword">return</span> result.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span>[] arr, <span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (list.size() == <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> i = list.get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> j = list.get(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> k = list.get(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (Math.abs(i - j) &lt;= a &amp;&amp; Math.abs(j - k) &lt;= b &amp;&amp; Math.abs(i - k) &lt;= c) &#123;</span><br><span class="line">                result.add(<span class="keyword">new</span> ArrayList(list));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = cur; i &lt; arr.length; i++) &#123;</span><br><span class="line">            list.add(arr[i]);</span><br><span class="line">            dfs(i + <span class="number">1</span>, arr, a, b, c);</span><br><span class="line">            list.remove(list.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1544. 整理字符串</title>
      <link href="/2020/09/25/leetcode/leetcode-1544-%E6%95%B4%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/09/25/leetcode/leetcode-1544-%E6%95%B4%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1544-整理字符串"><a class="markdownIt-Anchor" href="#leetcode-1544-整理字符串"></a> <a href="https://leetcode-cn.com/problems/make-the-string-great/">leetcode-1544. 整理字符串</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">makeGood</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        ArrayList&lt;Character&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            list.add(s.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (judge(list)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                Character pre = list.get(i - <span class="number">1</span>);</span><br><span class="line">                Character cur =list.get(i);</span><br><span class="line">                <span class="keyword">if</span> ((Character.toUpperCase(pre) == cur</span><br><span class="line">                        || pre == Character.toUpperCase(cur)) &amp;&amp; pre != cur)&#123;</span><br><span class="line">                    list.remove(i-<span class="number">1</span>);</span><br><span class="line">                    list.remove(i-<span class="number">1</span>);</span><br><span class="line">                    i--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            sb.append(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(List&lt;Character&gt; list)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            Character pre = list.get(i - <span class="number">1</span>);</span><br><span class="line">            Character cur =list.get(i);</span><br><span class="line">            <span class="keyword">if</span> ((Character.toUpperCase(pre) == cur</span><br><span class="line">                    || pre == Character.toUpperCase(cur)) &amp;&amp; pre != cur)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-853. 有边数限制的最短路</title>
      <link href="/2020/09/25/acwing/acwing-853-%E6%9C%89%E8%BE%B9%E6%95%B0%E9%99%90%E5%88%B6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
      <url>/2020/09/25/acwing/acwing-853-%E6%9C%89%E8%BE%B9%E6%95%B0%E9%99%90%E5%88%B6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/855/">acwing-853. 有边数限制的最短路</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">10010</span>;</span><br><span class="line">    <span class="comment">//存放图数据</span></span><br><span class="line">    <span class="keyword">static</span> Node[] node = <span class="keyword">new</span> Node[N];</span><br><span class="line">    <span class="comment">//定义距离</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> k = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">            node[i] = <span class="keyword">new</span> Node(a, b, c);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> result = bellmanFord(node, n, m, k);</span><br><span class="line">        <span class="keyword">if</span>(result == -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.print(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bellmanFord</span><span class="params">(Node[] node, <span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        <span class="comment">//初始化距离</span></span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line">        dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)&#123;</span><br><span class="line">            <span class="comment">// copy距离</span></span><br><span class="line">            <span class="keyword">int</span>[] d = Arrays.copyOf(dist, N);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 遍历每一条边进行松弛</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> a = node[j].a;</span><br><span class="line">                <span class="keyword">int</span> b = node[j].b;</span><br><span class="line">                <span class="keyword">int</span> c = node[j].c;</span><br><span class="line">                dist[b] = Math.min(dist[b], d[a] + c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dist[n] &gt; inf/<span class="number">2</span> ? -<span class="number">1</span> : dist[n];</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//bellman-ford算法使用一个结果存储图</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> c;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">        <span class="keyword">this</span>.b = b;</span><br><span class="line">        <span class="keyword">this</span>.c = c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-501. 二叉搜索树中的众数</title>
      <link href="/2020/09/24/leetcode/leetcode-501-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%97%E6%95%B0/"/>
      <url>/2020/09/24/leetcode/leetcode-501-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%97%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-501-二叉搜索树中的众数"><a class="markdownIt-Anchor" href="#leetcode-501-二叉搜索树中的众数"></a> <a href="https://leetcode-cn.com/problems/find-mode-in-binary-search-tree/">leetcode-501. 二叉搜索树中的众数</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] findMode(TreeNode root) &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dfs(root);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//记录最大值</span></span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, Integer&gt; entry: map.entrySet())&#123;</span><br><span class="line">            max = Math.max(max, entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, Integer&gt; entry: map.entrySet())&#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue() == max)&#123;</span><br><span class="line">                list.add(entry.getKey());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[list.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            arr[i] = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            dfs(root.left);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(root.val))&#123;</span><br><span class="line">                map.put(root.val, map.get(root.val) + <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(root.val, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            dfs(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-850. Dijkstra求最短路 II</title>
      <link href="/2020/09/23/acwing/acwing-850-Dijkstra%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF-II/"/>
      <url>/2020/09/23/acwing/acwing-850-Dijkstra%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/852/">acwing-850. Dijkstra求最短路 II</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="comment">// 定义最大数用于初始化数组</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">1000010</span>;</span><br><span class="line">    <span class="comment">// 定义邻结表 h存储边头结点(即一个边节点的index)，e存储边结点，w存储边的权值，ne存储下一个边结点，</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] h = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] e = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] w = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] ne = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="comment">// 定义距离</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="comment">// 定义标记已经访问过的数组</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 构造一个最小堆得优先队列,存储的数组代表起点到结点的距离</span></span><br><span class="line">    <span class="keyword">static</span> PriorityQueue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1, o2)-&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span> o1[<span class="number">1</span>] - o2[<span class="number">1</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        <span class="comment">// 初始化头结点数组h</span></span><br><span class="line">        Arrays.fill(h, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">           add(a, b, c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> result = dijstra(n);</span><br><span class="line">        System.out.println(result == <span class="number">1000000000</span> ? -<span class="number">1</span> : result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dijstra</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="comment">//初始化距离</span></span><br><span class="line">        Arrays.fill(dist, <span class="number">1000000000</span>);</span><br><span class="line">        <span class="comment">//初始化第一个节点到自身的距离</span></span><br><span class="line">        dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//往堆中push第一个元素</span></span><br><span class="line">        queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">0</span>&#125;);</span><br><span class="line">        <span class="keyword">while</span>( queue.size() &gt; <span class="number">0</span> )&#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = queue.poll();</span><br><span class="line">            <span class="keyword">int</span> t = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> distance = arr[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(st[t])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//标记该结点已经访问过</span></span><br><span class="line">            st[t] = <span class="keyword">true</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 遍历该点对应的所有边节点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = h[t]; i != -<span class="number">1</span>; i = ne[i])&#123;</span><br><span class="line">                <span class="keyword">int</span> j = e[i];</span><br><span class="line">                <span class="keyword">if</span>(dist[j] &gt; distance + w[i])&#123;</span><br><span class="line">                    dist[j] = distance + w[i];</span><br><span class="line">                    queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;j, dist[j]&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist[n];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        e[idx] = b;</span><br><span class="line">        w[idx] = c;</span><br><span class="line">        ne[idx] = h[a];</span><br><span class="line">        h[a] = idx++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1042. 不邻接植花</title>
      <link href="/2020/09/23/leetcode/leetcode-1042-%E4%B8%8D%E9%82%BB%E6%8E%A5%E6%A4%8D%E8%8A%B1/"/>
      <url>/2020/09/23/leetcode/leetcode-1042-%E4%B8%8D%E9%82%BB%E6%8E%A5%E6%A4%8D%E8%8A%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1042-不邻接植花"><a class="markdownIt-Anchor" href="#leetcode-1042-不邻接植花"></a> <a href="https://leetcode-cn.com/problems/flower-planting-with-no-adjacent/">leetcode-1042. 不邻接植花</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] gardenNoAdj(<span class="keyword">int</span> N, <span class="keyword">int</span>[][] paths) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        <span class="keyword">if</span> (paths.length == <span class="number">0</span>) &#123;</span><br><span class="line">            Arrays.fill(result, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;Integer, Set&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] path: paths)&#123;</span><br><span class="line">            <span class="comment">// 正向</span></span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(path[<span class="number">0</span>])) &#123;</span><br><span class="line">                Set&lt;Integer&gt; curSet = map.get(path[<span class="number">0</span>]);</span><br><span class="line">                curSet.add(path[<span class="number">1</span>]);</span><br><span class="line">                map.put(path[<span class="number">0</span>], curSet);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">                set.add(path[<span class="number">1</span>]);</span><br><span class="line">                map.put(path[<span class="number">0</span>], set);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 反向</span></span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(path[<span class="number">1</span>])) &#123;</span><br><span class="line">                Set&lt;Integer&gt; curSet = map.get(path[<span class="number">1</span>]);</span><br><span class="line">                curSet.add(path[<span class="number">0</span>]);</span><br><span class="line">                map.put(path[<span class="number">1</span>], curSet);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">                set.add(path[<span class="number">0</span>]);</span><br><span class="line">                map.put(path[<span class="number">1</span>], set);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在1这个院子种上1这个花</span></span><br><span class="line">        result[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="comment">// 存放相邻院子已经种上的花</span></span><br><span class="line">            Set&lt;Integer&gt; aSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            <span class="comment">// 相邻的院子</span></span><br><span class="line">            Set&lt;Integer&gt; s = map.get(i);</span><br><span class="line">            <span class="keyword">if</span> (s != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (Integer o : s) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (result[o - <span class="number">1</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="comment">// 说明已经种上花</span></span><br><span class="line">                        aSet.add(result[o - <span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开始种花</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">4</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!aSet.contains(j)) &#123;</span><br><span class="line">                    result[i-<span class="number">1</span>] = j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-997. 找到小镇的法官</title>
      <link href="/2020/09/23/leetcode/leetcode-997-%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98/"/>
      <url>/2020/09/23/leetcode/leetcode-997-%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-997-找到小镇的法官"><a class="markdownIt-Anchor" href="#leetcode-997-找到小镇的法官"></a> <a href="https://leetcode-cn.com/problems/find-the-town-judge/">leetcode-997. 找到小镇的法官</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findJudge</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span>[][] trust)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 首先找出谁都不信任的人</span></span><br><span class="line">        <span class="keyword">int</span> n1 = trust.length;</span><br><span class="line">        Map&lt;Integer, List&lt;Integer&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = trust[i];</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(arr[<span class="number">0</span>]))&#123;</span><br><span class="line">                List&lt;Integer&gt; curList = map.get(arr[<span class="number">0</span>]);</span><br><span class="line">                curList.add(arr[<span class="number">1</span>]);</span><br><span class="line">                map.put(arr[<span class="number">0</span>], curList);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                list.add(arr[<span class="number">1</span>]);</span><br><span class="line">                map.put(arr[<span class="number">0</span>], list);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (map.size() != N - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 存在多个谁都不信任的人或者一个都不存在</span></span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找出这个人</span></span><br><span class="line">        <span class="keyword">int</span> k = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!map.containsKey(i)) &#123;</span><br><span class="line">                k = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否所有人都信任他</span></span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == k) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!map.get(i).contains(k)) &#123;</span><br><span class="line">                b = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> b ? k : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findJudge</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span>[][] trust)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 统计出度和入度</span></span><br><span class="line">        <span class="keyword">int</span>[] in = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] out = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] arr: trust)&#123;</span><br><span class="line">            in[arr[<span class="number">1</span>]] += <span class="number">1</span>;</span><br><span class="line">            out[arr[<span class="number">0</span>]] += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 循环遍历结果，看是否只存在一个法官</span></span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> result = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(in[i] == N - <span class="number">1</span> &amp;&amp; out[i] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b)&#123;</span><br><span class="line">                    b = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                b = <span class="keyword">true</span>;</span><br><span class="line">                result = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> b ? result : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-904. 水果成篮</title>
      <link href="/2020/09/23/leetcode/leetcode-904-%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE/"/>
      <url>/2020/09/23/leetcode/leetcode-904-%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetc0de-904-水果成篮"><a class="markdownIt-Anchor" href="#leetc0de-904-水果成篮"></a> <a href="https://leetcode-cn.com/problems/fruit-into-baskets/">leetc0de-904. 水果成篮</a></h4><p><strong>原始思路：使用滑动窗口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">totalFruit</span><span class="params">(<span class="keyword">int</span>[] tree)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = tree.length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// k记录种类</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        HashSet&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; n &amp;&amp; j &lt; n) &#123;</span><br><span class="line">            list.add(tree[j]);</span><br><span class="line">            set.add(tree[j]);</span><br><span class="line">            j++;</span><br><span class="line">            <span class="comment">// 达到收缩的条件</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; n &amp;&amp; set.size() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                list.remove((Integer) tree[i]);</span><br><span class="line">                i++;</span><br><span class="line">                set = <span class="keyword">new</span> HashSet&lt;&gt;(list);</span><br><span class="line">            &#125;</span><br><span class="line">            result = Math.max(result, j - i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-617. 合并二叉树</title>
      <link href="/2020/09/23/leetcode/leetcode-617-%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
      <url>/2020/09/23/leetcode/leetcode-617-%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-617-合并二叉树"><a class="markdownIt-Anchor" href="#leetcode-617-合并二叉树"></a> <a href="https://leetcode-cn.com/problems/merge-two-binary-trees/">leetcode-617. 合并二叉树</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">mergeTrees</span><span class="params">(TreeNode t1, TreeNode t2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (t1 != <span class="keyword">null</span> &amp;&amp; t2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            TreeNode node = <span class="keyword">new</span> TreeNode();</span><br><span class="line">            node.val = t1.val + t2.val;</span><br><span class="line">            node.right = mergeTrees(t1.right, t2.right);</span><br><span class="line">            node.left = mergeTrees(t1.left, t2.left);</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> t1;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> t2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-849. Dijkstra求最短路 I</title>
      <link href="/2020/09/23/acwing/acwing-849-Dijkstra%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF-I/"/>
      <url>/2020/09/23/acwing/acwing-849-Dijkstra%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF-I/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/851/">acwing-849. Dijkstra求最短路 I</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] g = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">501</span>][<span class="number">501</span>];</span><br><span class="line">        <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">501</span>];</span><br><span class="line">        <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">501</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//初始化g</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; g.length; i++)&#123;</span><br><span class="line">            Arrays.fill(g[i], <span class="number">1000000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = sc.nextInt();</span><br><span class="line">            <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">            g[a][b] = Math.min(g[a][b], c);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(dijkstra(n, g, dist, st));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] g, <span class="keyword">int</span>[] dist, <span class="keyword">boolean</span>[] st)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 所有节点的距离起点的初始值设置为无穷大</span></span><br><span class="line">        Arrays.fill(dist, <span class="number">1000000000</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 起点到起点的距离设置为0</span></span><br><span class="line">        dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 迭代n次,确定每个点到起点的最短路径</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="comment">// 选出最短的路径的点,然后用最短路径的点进行更新</span></span><br><span class="line">            <span class="keyword">int</span> t = -<span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;= n; j++)&#123;</span><br><span class="line">                <span class="comment">//不在st集合中,并且是最短的</span></span><br><span class="line">                <span class="keyword">if</span>(!st[j] &amp;&amp; (t==-<span class="number">1</span> || dist[j]&lt;dist[t]))&#123;</span><br><span class="line">                    t = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// t这个点被遍历过了</span></span><br><span class="line">            st[t] = <span class="keyword">true</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 使用找到的最小点t，并用t去更新其他的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)&#123;</span><br><span class="line">                dist[k] = Math.min(dist[k], dist[t] + g[t][k]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist[n]==<span class="number">1000000000</span> ? -<span class="number">1</span> : dist[n];</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-200. 岛屿数量</title>
      <link href="/2020/09/22/leetcode/leetcode-200-%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/"/>
      <url>/2020/09/22/leetcode/leetcode-200-%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-200-岛屿数量"><a class="markdownIt-Anchor" href="#leetcode-200-岛屿数量"></a> <a href="https://leetcode-cn.com/problems/number-of-islands/">leetcode-200. 岛屿数量</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numIslands</span><span class="params">(<span class="keyword">char</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = grid.length;</span><br><span class="line">        <span class="keyword">if</span> (n1 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> n2 = grid[<span class="number">0</span>].length;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义并查集的parent</span></span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[n1*n2];</span><br><span class="line">        <span class="comment">// 初始化并查集</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1*n2; i++) &#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n1 - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n2 - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j!= n2-<span class="number">1</span> &amp;&amp; grid[i][j] == grid[i][j + <span class="number">1</span>] &amp;&amp; grid[i][j] == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                    <span class="comment">//两个列上的数字是联通的</span></span><br><span class="line">                    union(parent, i * n2 + j, i * n2 + j + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (i!= n1-<span class="number">1</span> &amp;&amp; grid[i][j] == grid[i+<span class="number">1</span>][j] &amp;&amp; grid[i][j] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                    <span class="comment">//两个行上的数字是联通的</span></span><br><span class="line">                    union(parent, i * n2 + j, (i+<span class="number">1</span>) * n2 + j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历parent</span></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (grid[i][j] == <span class="string">&#x27;1&#x27;</span> &amp;&amp; parent[i * n2 + j] == i * n2 + j) &#123;</span><br><span class="line">                    result++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 并查集查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (parent[i] != i) &#123;</span><br><span class="line">            parent[i] = find(parent, parent[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//并查集合并</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = find(parent, i);</span><br><span class="line">        <span class="keyword">int</span> y = find(parent, j);</span><br><span class="line">        <span class="keyword">if</span> (x != y) &#123;</span><br><span class="line">            parent[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题 08.10. 颜色填充</title>
      <link href="/2020/09/22/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-08-10-%E9%A2%9C%E8%89%B2%E5%A1%AB%E5%85%85/"/>
      <url>/2020/09/22/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-08-10-%E9%A2%9C%E8%89%B2%E5%A1%AB%E5%85%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-0810-颜色填充"><a class="markdownIt-Anchor" href="#leetcode-面试题-0810-颜色填充"></a> <a href="https://leetcode-cn.com/problems/color-fill-lcci/">leetcode-面试题 08.10. 颜色填充</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] floodFill(<span class="keyword">int</span>[][] image, <span class="keyword">int</span> sr, <span class="keyword">int</span> sc, <span class="keyword">int</span> newColor) &#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = image.length;</span><br><span class="line">        <span class="keyword">int</span> n2 = image[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">int</span>[][] visit = <span class="keyword">new</span> <span class="keyword">int</span>[n1][n2];</span><br><span class="line">        <span class="keyword">int</span> origin = image[sr][sc];</span><br><span class="line">        dfs(image, sr, sc, newColor, n1, n2, visit, origin);</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[][] image, <span class="keyword">int</span> sr, <span class="keyword">int</span> sc, <span class="keyword">int</span> newColor, <span class="keyword">int</span> n1, <span class="keyword">int</span> n2, <span class="keyword">int</span>[][] visit, <span class="keyword">int</span> origin)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断边界条件</span></span><br><span class="line">        <span class="keyword">if</span> (sr &lt; <span class="number">0</span> || sr &gt;= n1 || sc &lt; <span class="number">0</span> || sc &gt;= n2) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为0证明不通了</span></span><br><span class="line">        <span class="keyword">if</span> (image[sr][sc] != origin) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果是已经访问过的,则直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (visit[sr][sc] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更改颜色</span></span><br><span class="line">        image[sr][sc] = newColor;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录该位置是否被访问过</span></span><br><span class="line">        visit[sr][sc] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        dfs(image, sr - <span class="number">1</span>, sc, newColor, n1, n2, visit, origin);</span><br><span class="line">        dfs(image, sr + <span class="number">1</span>, sc, newColor, n1, n2, visit, origin);</span><br><span class="line">        dfs(image, sr, sc - <span class="number">1</span>, newColor, n1, n2, visit, origin);</span><br><span class="line">        dfs(image, sr, sc + <span class="number">1</span>, newColor, n1, n2, visit, origin);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1578. 避免重复字母的最小删除成本</title>
      <link href="/2020/09/22/leetcode/leetcode-1578-%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%A0%E9%99%A4%E6%88%90%E6%9C%AC/"/>
      <url>/2020/09/22/leetcode/leetcode-1578-%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%A0%E9%99%A4%E6%88%90%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1578-避免重复字母的最小删除成本"><a class="markdownIt-Anchor" href="#leetcode-1578-避免重复字母的最小删除成本"></a> <a href="https://leetcode-cn.com/problems/minimum-deletion-cost-to-avoid-repeating-letters/">leetcode-1578. 避免重复字母的最小删除成本</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minCost</span><span class="params">(String s, <span class="keyword">int</span>[] cost)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = i;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; n &amp;&amp; s.charAt(j) == s.charAt(j - <span class="number">1</span>) ) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i-<span class="number">1</span>; k &lt;= j-<span class="number">1</span>; k++) &#123;</span><br><span class="line">                total += cost[k];</span><br><span class="line">                max = Math.max(max, cost[k]);</span><br><span class="line">            &#125;</span><br><span class="line">            result += (total - max);</span><br><span class="line">            i = j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minCost</span><span class="params">(String s, <span class="keyword">int</span>[] cost)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.charAt(i) == s.charAt(i - <span class="number">1</span>) ) &#123;</span><br><span class="line">                result += Math.min(cost[i],cost[i-<span class="number">1</span>]);</span><br><span class="line">                <span class="comment">// 交换位置</span></span><br><span class="line">                <span class="keyword">if</span>(cost[i-<span class="number">1</span>] &gt; cost[i])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp =cost[i];</span><br><span class="line">                    cost[i] = cost[i-<span class="number">1</span>];</span><br><span class="line">                    cost[i-<span class="number">1</span>] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1403. 非递增顺序的最小子序列</title>
      <link href="/2020/09/22/leetcode/leetcode-1403-%E9%9D%9E%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2020/09/22/leetcode/leetcode-1403-%E9%9D%9E%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1403-非递增顺序的最小子序列"><a class="markdownIt-Anchor" href="#leetcode-1403-非递增顺序的最小子序列"></a> <a href="https://leetcode-cn.com/problems/minimum-subsequence-in-non-increasing-order/">leetcode-1403. 非递增顺序的最小子序列</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">minSubsequence</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = nums.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            total += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> curTotal = <span class="number">0</span>;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = nums.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            result.add(nums[i]);</span><br><span class="line">            curTotal += nums[i];</span><br><span class="line">            <span class="keyword">if</span> (curTotal &gt; total - curTotal) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1594. 矩阵的最大非负积</title>
      <link href="/2020/09/21/leetcode/leetcode-1594-%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%9E%E8%B4%9F%E7%A7%AF/"/>
      <url>/2020/09/21/leetcode/leetcode-1594-%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%9E%E8%B4%9F%E7%A7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1594-矩阵的最大非负积"><a class="markdownIt-Anchor" href="#leetcode-1594-矩阵的最大非负积"></a> <a href="https://leetcode-cn.com/problems/maximum-non-negative-product-in-a-matrix/">leetcode-1594. 矩阵的最大非负积</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProductPath</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = grid.length;</span><br><span class="line">        <span class="keyword">int</span> n2 = grid[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">long</span>[][][] dp = <span class="keyword">new</span> <span class="keyword">long</span>[n1][n2][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">1</span>] = grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//初始化dp,第三维0表示最小值,1表示最大值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n2; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][i][<span class="number">0</span>] = dp[<span class="number">0</span>][i - <span class="number">1</span>][<span class="number">0</span>] * grid[<span class="number">0</span>][i];</span><br><span class="line">            dp[<span class="number">0</span>][i][<span class="number">1</span>] = dp[<span class="number">0</span>][i - <span class="number">1</span>][<span class="number">0</span>] * grid[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] * grid[i][<span class="number">0</span>];</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">1</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] * grid[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (grid[i][j] &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    dp[i][j][<span class="number">0</span>] = Math.min(dp[i][j - <span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][j][<span class="number">0</span>]) * grid[i][j];</span><br><span class="line">                    dp[i][j][<span class="number">1</span>] = Math.max(dp[i][j - <span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][j][<span class="number">1</span>]) * grid[i][j];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j][<span class="number">0</span>] = Math.max(dp[i][j - <span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][j][<span class="number">1</span>]) * grid[i][j];</span><br><span class="line">                    dp[i][j][<span class="number">1</span>] = Math.min(dp[i][j - <span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][j][<span class="number">0</span>]) * grid[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n1 - <span class="number">1</span>][n2 - <span class="number">1</span>][<span class="number">1</span>] &lt; <span class="number">0</span> ? -<span class="number">1</span> : (<span class="keyword">int</span>)(dp[n1 - <span class="number">1</span>][n2 - <span class="number">1</span>][<span class="number">1</span>] % (<span class="number">1000000000</span> + <span class="number">7</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1593. 拆分字符串使唯一子字符串的数目最大</title>
      <link href="/2020/09/21/leetcode/leetcode-1593-%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%BF%E5%94%AF%E4%B8%80%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E6%9C%80%E5%A4%A7/"/>
      <url>/2020/09/21/leetcode/leetcode-1593-%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%BF%E5%94%AF%E4%B8%80%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E6%9C%80%E5%A4%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1593-拆分字符串使唯一子字符串的数目最大"><a class="markdownIt-Anchor" href="#leetcode-1593-拆分字符串使唯一子字符串的数目最大"></a> <a href="https://leetcode-cn.com/problems/split-a-string-into-the-max-number-of-unique-substrings/">leetcode-1593. 拆分字符串使唯一子字符串的数目最大</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxUniqueSplit</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>, s);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, String s)</span> </span>&#123;</span><br><span class="line">        result = Math.max(result, ans.size());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = cur; i &lt; s.length(); i++) &#123;</span><br><span class="line">            String str = s.substring(cur, i + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (set.contains(str)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans.add(str);</span><br><span class="line">            set.add(str);</span><br><span class="line">            dfs(i + <span class="number">1</span>, s);</span><br><span class="line">            ans.remove(ans.size() - <span class="number">1</span>);</span><br><span class="line">            set.remove(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1592. 重新排列单词间的空格</title>
      <link href="/2020/09/21/leetcode/leetcode-1592-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8D%95%E8%AF%8D%E9%97%B4%E7%9A%84%E7%A9%BA%E6%A0%BC/"/>
      <url>/2020/09/21/leetcode/leetcode-1592-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8D%95%E8%AF%8D%E9%97%B4%E7%9A%84%E7%A9%BA%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1592-重新排列单词间的空格"><a class="markdownIt-Anchor" href="#leetcode-1592-重新排列单词间的空格"></a> <a href="https://leetcode-cn.com/problems/rearrange-spaces-between-words/">leetcode-1592. 重新排列单词间的空格</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">reorderSpaces</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 记录单词和空格</span></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; text.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (text.charAt(i) == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span> (buffer.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    list.add(buffer.toString());</span><br><span class="line">                    buffer.delete(<span class="number">0</span>, buffer.length());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                buffer.append(text.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (buffer.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//将剩余的添加到数组</span></span><br><span class="line">            list.add(buffer.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//清空buffer</span></span><br><span class="line">        buffer.delete(<span class="number">0</span>, buffer.length());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> text;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> k = list.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//说明没有间隔</span></span><br><span class="line">            buffer.append(list.get(<span class="number">0</span>));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">                buffer.append(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> buffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算每个单词间可以放多少个</span></span><br><span class="line">        <span class="keyword">int</span> j = num / k;</span><br><span class="line">        <span class="comment">//余数</span></span><br><span class="line">        <span class="keyword">int</span> r = num % k;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            buffer.append(list.get(i));</span><br><span class="line">            <span class="keyword">if</span> (i == list.size() - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; j; l++) &#123;</span><br><span class="line">                buffer.append(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r; i++) &#123;</span><br><span class="line">            buffer.append(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> buffer.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-47. 全排列 II</title>
      <link href="/2020/09/21/leetcode/leetcode-47-%E5%85%A8%E6%8E%92%E5%88%97-II/"/>
      <url>/2020/09/21/leetcode/leetcode-47-%E5%85%A8%E6%8E%92%E5%88%97-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-47-全排列-ii"><a class="markdownIt-Anchor" href="#leetcode-47-全排列-ii"></a> <a href="https://leetcode-cn.com/problems/permutations-ii/">leetcode-47. 全排列 II</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    Set&lt;List&lt;Integer&gt;&gt; setAns = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; permuteUnique(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        dfs(<span class="number">0</span>, nums);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span>[] nums)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cur &gt;= nums.length)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ans.size() == nums.length)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!setAns.contains(ans))&#123;</span><br><span class="line">                setAns.add(ans);</span><br><span class="line">                result.add(<span class="keyword">new</span> ArrayList(ans));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(set.contains(i))&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            set.add(i);</span><br><span class="line">            ans.add(nums[i]);</span><br><span class="line">            dfs(cur, nums);</span><br><span class="line">            ans.remove(ans.size() -<span class="number">1</span>);</span><br><span class="line">            set.remove(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-9. 分组背包问题</title>
      <link href="/2020/09/21/acwing/acwing-9-%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/21/acwing/acwing-9-%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/9/">acwing-9. 分组背包问题</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> N = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> V = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] weight = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">103</span>][<span class="number">103</span>];</span><br><span class="line">        <span class="keyword">int</span>[][] value = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">103</span>][<span class="number">103</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= N; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> k = sc.nextInt();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++)&#123;</span><br><span class="line">                weight[i][j] = sc.nextInt();</span><br><span class="line">                value[i][j] = sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> result = getMaxValue(N, V, weight, value);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMaxValue</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> V, <span class="keyword">int</span>[][] weight, <span class="keyword">int</span>[][] value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>][V+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= V; j++)&#123;</span><br><span class="line">                dp[i][j] = dp[i-<span class="number">1</span>][j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= weight[i].length &amp;&amp; weight[i][k]!=<span class="number">0</span>; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(j &gt;= weight[i][k])&#123;</span><br><span class="line">                       dp[i][j] = Math.max(dp[i][j], dp[i-<span class="number">1</span>][j-weight[i][k]] + value[i][k]); </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[N][V];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-4. 多重背包问题 I</title>
      <link href="/2020/09/20/acwing/acwing-4-%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98-I/"/>
      <url>/2020/09/20/acwing/acwing-4-%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98-I/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/4/">acwing-4. 多重背包问题 I</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> N = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> V = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] w = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] value = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[N+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= N; i++)&#123;</span><br><span class="line">            w[i] = sc.nextInt();</span><br><span class="line">            value[i] = sc.nextInt();</span><br><span class="line">            nums[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = getMaxValue(N, w, value, V, nums);</span><br><span class="line">        System.out.print(res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMaxValue</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] w, <span class="keyword">int</span>[] value, <span class="keyword">int</span> V, <span class="keyword">int</span>[] nums)</span></span>&#123;</span><br><span class="line">        <span class="comment">// dp中存的是最大价值</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][V + <span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= V; j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k*w[i] &lt;= j &amp;&amp; k &lt;= nums[i]; k++)&#123;</span><br><span class="line">                   dp[i][j] = Math.max(dp[i][j], dp[i-<span class="number">1</span>][j-k*w[i]] + k*value[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n][V];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-3. 完全背包问题</title>
      <link href="/2020/09/18/acwing/acwing-3-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/18/acwing/acwing-3-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/3/">acwing-3. 完全背包问题</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> w = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span>[] weight = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] value = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= n; i++)&#123;</span><br><span class="line">            weight[i] = sc.nextInt();</span><br><span class="line">            value[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(getMax(n, w, weight, value));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> w, <span class="keyword">int</span>[] weight, <span class="keyword">int</span>[] value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][w+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= w; j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k*weight[i] &lt;= j; k++)&#123;</span><br><span class="line">                    dp[i][j] = Math.max(dp[i][j], dp[i-<span class="number">1</span>][j-k*weight[i]] + k * value[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n][w];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>状态压缩</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> w = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span>[] weight = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] value = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= n; i++)&#123;</span><br><span class="line">            weight[i] = sc.nextInt();</span><br><span class="line">            value[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(getMax(n, w, weight, value));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> w, <span class="keyword">int</span>[] weight, <span class="keyword">int</span>[] value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[w+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = weight[i]; j &lt;= w; j++)&#123;</span><br><span class="line">                   dp[j] = Math.max(dp[j], dp[j-weight[i]] + value[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[w];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背包问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-2. 01背包问题</title>
      <link href="/2020/09/17/acwing/acwing-2-01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/17/acwing/acwing-2-01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/2/">acwing-2. 01背包问题</a></p><p><strong>二维数组dp</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> N = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> V = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] w = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] value = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= N; i++)&#123;</span><br><span class="line">            w[i] = sc.nextInt();</span><br><span class="line">            value[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = getMaxValue(N, w, value, V);</span><br><span class="line">        System.out.print(res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMaxValue</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] w, <span class="keyword">int</span>[] value, <span class="keyword">int</span> V)</span></span>&#123;</span><br><span class="line">        <span class="comment">// dp中存的是最大价值</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][V + <span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= V; j++)&#123;</span><br><span class="line">                dp[i][j] = dp[i-<span class="number">1</span>][j];</span><br><span class="line">                <span class="keyword">if</span>(j &gt;= w[i])&#123;</span><br><span class="line">                    dp[i][j] = Math.max(dp[i][j], dp[i-<span class="number">1</span>][j-w[i]] + value[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n][V];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>滚动数组压缩</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> N = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> V = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] w = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] value = <span class="keyword">new</span> <span class="keyword">int</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= N; i++)&#123;</span><br><span class="line">            w[i] = sc.nextInt();</span><br><span class="line">            value[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = getMaxValue(N, w, value, V);</span><br><span class="line">        System.out.print(res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMaxValue</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] w, <span class="keyword">int</span>[] value, <span class="keyword">int</span> V)</span></span>&#123;</span><br><span class="line">        <span class="comment">// dp中存的是最大价值</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[V + <span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = V; j &gt;= w[i]; j--)&#123;</span><br><span class="line">            dp[j] = Math.max(dp[j], dp[j-w[i]] + value[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[V];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1025. 除数博弈</title>
      <link href="/2020/09/17/leetcode/leetcode-1025-%E9%99%A4%E6%95%B0%E5%8D%9A%E5%BC%88/"/>
      <url>/2020/09/17/leetcode/leetcode-1025-%E9%99%A4%E6%95%B0%E5%8D%9A%E5%BC%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1025-除数博弈"><a class="markdownIt-Anchor" href="#leetcode-1025-除数博弈"></a> <a href="https://leetcode-cn.com/problems/divisor-game/">leetcode-1025. 除数博弈</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">divisorGame</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span>[] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[N + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[<span class="number">1</span>] = <span class="keyword">false</span>;</span><br><span class="line">        dp[<span class="number">2</span>] = <span class="keyword">true</span>;</span><br><span class="line">        dp[<span class="number">3</span>] = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            dp[i] = !dp[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[N];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-518. 零钱兑换 II</title>
      <link href="/2020/09/17/leetcode/leetcode-518-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2-II/"/>
      <url>/2020/09/17/leetcode/leetcode-518-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-518-零钱兑换-ii"><a class="markdownIt-Anchor" href="#leetcode-518-零钱兑换-ii"></a> <a href="https://leetcode-cn.com/problems/coin-change-2/">leetcode-518. 零钱兑换 II</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> amount, <span class="keyword">int</span>[] coins)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 该题有两种状态 使用前i个硬币，第二个是硬币的总额</span></span><br><span class="line">        <span class="comment">// 定义dp,dp表示组合数</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[coins.length + <span class="number">1</span>][amount + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用0个硬币组合0，是一种组合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= coins.length ; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//硬币首先看是否能装的下, 装的下的情况又分为可选可不选</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= coins.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= amount ; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j - coins[i-<span class="number">1</span>] &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//可以选择这个硬币,也可以不选择这个硬币</span></span><br><span class="line">                    dp[i][j] = dp[i-<span class="number">1</span>][j] + dp[i][j - coins[i - <span class="number">1</span>]];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[coins.length][amount];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-392. 判断子序列</title>
      <link href="/2020/09/17/leetcode/leetcode-392-%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2020/09/17/leetcode/leetcode-392-%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-392-判断子序列"><a class="markdownIt-Anchor" href="#leetcode-392-判断子序列"></a> <a href="https://leetcode-cn.com/problems/is-subsequence/">leetcode-392. 判断子序列</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubsequence</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = s.length();</span><br><span class="line">        <span class="keyword">int</span> n2 = t.length();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n1 + <span class="number">1</span>][n2 + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n2; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][i] = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dp[i][j-<span class="number">1</span>])&#123;</span><br><span class="line">                    dp[i][j] = dp[i][j - <span class="number">1</span>];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s.charAt(i - <span class="number">1</span>) == t.charAt(j - <span class="number">1</span>) &amp;&amp; dp[i-<span class="number">1</span>][j-<span class="number">1</span>]) &#123;</span><br><span class="line">                        dp[i][j] =dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        dp[i][j] = dp[i][j - <span class="number">1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n1][n2];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题16.17.连续数列</title>
      <link href="/2020/09/17/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-16-17-%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%88%97/"/>
      <url>/2020/09/17/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%98-16-17-%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode面试题-1617-连续数列"><a class="markdownIt-Anchor" href="#leetcode面试题-1617-连续数列"></a> <a href="https://leetcode-cn.com/problems/contiguous-sequence-lcci/">leetcode面试题 16.17. 连续数列</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            dp[i] = nums[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            dp[i] = Math.max(dp[i], dp[i - <span class="number">1</span>] + dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            res = Math.max(res, dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-787K站中转内最便宜的航班</title>
      <link href="/2020/09/16/leetcode/leetcode-787K%E7%AB%99%E4%B8%AD%E8%BD%AC%E5%86%85%E6%9C%80%E4%BE%BF%E5%AE%9C%E7%9A%84%E8%88%AA%E7%8F%AD/"/>
      <url>/2020/09/16/leetcode/leetcode-787K%E7%AB%99%E4%B8%AD%E8%BD%AC%E5%86%85%E6%9C%80%E4%BE%BF%E5%AE%9C%E7%9A%84%E8%88%AA%E7%8F%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="787-k-站中转内最便宜的航班"><a class="markdownIt-Anchor" href="#787-k-站中转内最便宜的航班"></a> <a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></h4><p><strong>使用状态转移dp</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findCheapestPrice</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] flights, <span class="keyword">int</span> src, <span class="keyword">int</span> dst, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//n目的地,最多经过K次中转,说明最多走K + 1 次航班,</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][K + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; K + <span class="number">2</span>; j++) &#123;</span><br><span class="line">                dp[i][j] = <span class="number">100000000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dp[src][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= K + <span class="number">1</span>; i++) &#123;</span><br><span class="line">            dp[src][i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span>[] flight : flights) &#123;</span><br><span class="line">                dp[flight[<span class="number">1</span>]][i] = Math.min(dp[flight[<span class="number">1</span>]][i], dp[flight[<span class="number">0</span>]][i-<span class="number">1</span>] + flight[<span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[dst][K + <span class="number">1</span>] == <span class="number">100000000</span> ? -<span class="number">1</span> : dp[dst][K + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Bellman-ford算法</strong></p><h1 id="-hexopostrenderescapefigure-classhighlight-javatabletrtd-classgutterprespan-classline1spanbrspan-classline2spanbrspan-classline3spanbrspan-classline4spanbrspan-classline5spanbrspan-classline6spanbrspan-classline7spanbrspan-classline8spanbrspan-classline9spanbrspan-classline10spanbrspan-classline11spanbrspan-classline12spanbrspan-classline13spanbrspan-classline14spanbrspan-classline15spanbrspan-classline16spanbrspan-classline17spanbrspan-classline18spanbrspan-classline19spanbrspan-classline20spanbrspan-classline21spanbrspan-classline22spanbrspan-classline23spanbrpretdtd-classcodeprespan-classlinespan-classclassspan-classkeywordclassspan-span-classtitlesolutionspan-span123spanbrspan-classline-span-classfunctionspan-classkeywordpublicspan-span-classkeywordintspan-span-classtitlefindcheapestpricespanspan-classparamsspan-classkeywordintspan-n-span-classkeywordintspan-flights-span-classkeywordintspan-src-span-classkeywordintspan-dst-span-classkeywordintspan-kspan-span123spanbrspan-classline-span-classkeywordintspan-dist-span-classkeywordnewspan-span-classkeywordintspannspan-classnumber1spanspanbrspan-classline-span-classcomment-初始化距离spanspanbrspan-classline-arraysfilldist-span-classnumber1000000000spanspanbrspan-classline-distsrc-span-classnumber0spanspanbrspan-classline-span-classcomment-只能经过k个中转spanspanbrspan-classline-span-classkeywordforspanspan-classkeywordintspan-i-span-classnumber0span-i-lt-k-i123spanbrspan-classline-span-classcomment-copy数组避免发生数据串联spanspanbrspan-classline-span-classkeywordintspan-ds-arrayscopyofdist-distlengthspanbrspan-classline-span-classcomment-每次都遍历所有航班spanspanbrspan-classline-span-classkeywordforspanspan-classkeywordintspan-flight-flights123spanbrspan-classline-span-classkeywordintspan-a-flightspan-classnumber0spanspanbrspan-classline-span-classkeywordintspan-b-flightspan-classnumber1spanspanbrspan-classline-span-classkeywordintspan-c-flightspan-classnumber2spanspanbrspan-classline-span-classkeywordifspandistb-gt-dsa-c123spanbrspan-classline-distb-mathmindistb-dsa-cspanbrspan-classline-125spanbrspan-classline-125spanbrspan-classline-125spanbrspan-classline-span-classkeywordreturnspan-distdst-gt-span-classnumber1000000000spanspan-classnumber2span-span-classnumber1span-distdstspanbrspan-classline-125spanbrspan-classline125spanbrpretdtrtablefigurehexopostrenderescape-head"><a class="markdownIt-Anchor" href="#-hexopostrenderescapefigure-classhighlight-javatabletrtd-classgutterprespan-classline1spanbrspan-classline2spanbrspan-classline3spanbrspan-classline4spanbrspan-classline5spanbrspan-classline6spanbrspan-classline7spanbrspan-classline8spanbrspan-classline9spanbrspan-classline10spanbrspan-classline11spanbrspan-classline12spanbrspan-classline13spanbrspan-classline14spanbrspan-classline15spanbrspan-classline16spanbrspan-classline17spanbrspan-classline18spanbrspan-classline19spanbrspan-classline20spanbrspan-classline21spanbrspan-classline22spanbrspan-classline23spanbrpretdtd-classcodeprespan-classlinespan-classclassspan-classkeywordclassspan-span-classtitlesolutionspan-span123spanbrspan-classline-span-classfunctionspan-classkeywordpublicspan-span-classkeywordintspan-span-classtitlefindcheapestpricespanspan-classparamsspan-classkeywordintspan-n-span-classkeywordintspan-flights-span-classkeywordintspan-src-span-classkeywordintspan-dst-span-classkeywordintspan-kspan-span123spanbrspan-classline-span-classkeywordintspan-dist-span-classkeywordnewspan-span-classkeywordintspannspan-classnumber1spanspanbrspan-classline-span-classcomment-初始化距离spanspanbrspan-classline-arraysfilldist-span-classnumber1000000000spanspanbrspan-classline-distsrc-span-classnumber0spanspanbrspan-classline-span-classcomment-只能经过k个中转spanspanbrspan-classline-span-classkeywordforspanspan-classkeywordintspan-i-span-classnumber0span-i-lt-k-i123spanbrspan-classline-span-classcomment-copy数组避免发生数据串联spanspanbrspan-classline-span-classkeywordintspan-ds-arrayscopyofdist-distlengthspanbrspan-classline-span-classcomment-每次都遍历所有航班spanspanbrspan-classline-span-classkeywordforspanspan-classkeywordintspan-flight-flights123spanbrspan-classline-span-classkeywordintspan-a-flightspan-classnumber0spanspanbrspan-classline-span-classkeywordintspan-b-flightspan-classnumber1spanspanbrspan-classline-span-classkeywordintspan-c-flightspan-classnumber2spanspanbrspan-classline-span-classkeywordifspandistb-gt-dsa-c123spanbrspan-classline-distb-mathmindistb-dsa-cspanbrspan-classline-125spanbrspan-classline-125spanbrspan-classline-125spanbrspan-classline-span-classkeywordreturnspan-distdst-gt-span-classnumber1000000000spanspan-classnumber2span-span-classnumber1span-distdstspanbrspan-classline-125spanbrspan-classline125spanbrpretdtrtablefigurehexopostrenderescape-head"></a> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findCheapestPrice</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] flights, <span class="keyword">int</span> src, <span class="keyword">int</span> dst, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 初始化距离</span></span><br><span class="line">        Arrays.fill(dist, <span class="number">1000000000</span>);</span><br><span class="line">        dist[src] = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 只能经过K个中转</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= K; i++)&#123;</span><br><span class="line">            <span class="comment">// copy数组,避免发生数据串联</span></span><br><span class="line">            <span class="keyword">int</span>[] ds = Arrays.copyOf(dist, dist.length);</span><br><span class="line">            <span class="comment">// 每次都遍历所有航班</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span>[] flight: flights)&#123;</span><br><span class="line">                <span class="keyword">int</span> a = flight[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">int</span> b = flight[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">int</span> c = flight[<span class="number">2</span>];</span><br><span class="line">                <span class="keyword">if</span>(dist[b] &gt; ds[a] + c)&#123;</span><br><span class="line">                    dist[b] = Math.min(dist[b], ds[a] + c);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist[dst] &gt; <span class="number">1000000000</span>/<span class="number">2</span> ? -<span class="number">1</span> : dist[dst];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</h1><p><strong>dijkstra堆优化版算法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义图的邻接表</span></span><br><span class="line">    <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">100000</span>;</span><br><span class="line">    <span class="keyword">int</span>[] e = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span>[] w = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span>[] ne = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span>[] h = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 定义存储最短的数组、节点是否访问</span></span><br><span class="line">    <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">boolean</span>[] bool = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findCheapestPrice</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] flights, <span class="keyword">int</span> src, <span class="keyword">int</span> dst, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 将数据读入图</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] flight: flights)&#123;</span><br><span class="line">            e[index] = flight[<span class="number">1</span>];</span><br><span class="line">            w[index] = flight[<span class="number">2</span>];</span><br><span class="line">            ne[index] = h;</span><br><span class="line">            h[flight[<span class="number">0</span>]] = idx ++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化距离</span></span><br><span class="line">        Arrays.fill(dist, inf);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义一个最小堆,点到起点的距离</span></span><br><span class="line">        PriorityQueue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1, o2)-&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> o1[<span class="number">2</span>] - o2[<span class="number">2</span>];</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 加入初始值</span></span><br><span class="line">        queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;src, <span class="number">0</span>&#125;);</span><br><span class="line">        <span class="keyword">while</span>(queue.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = queue.poll();</span><br><span class="line">            <span class="keyword">int</span> t = arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> distance = arr[<span class="number">1</span>];</span><br><span class="line">            count ++;</span><br><span class="line">            <span class="keyword">if</span>(bool[t] || count &gt; K + <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            bool[t] = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = h[t]; i != -<span class="number">1</span>; i = ne[i])&#123;</span><br><span class="line">                <span class="keyword">int</span> j = e[i];</span><br><span class="line">                <span class="keyword">if</span>(dist[j] &gt; dist[i] + w[i])&#123;</span><br><span class="line">                    dist[j] = distance + w[i];</span><br><span class="line">                    <span class="comment">// 进行入队</span></span><br><span class="line">                    queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;j, dist[j]&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dist[dst];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>1e1a063b2ed2902f22f9c10fe1fce8bce47a145d</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-322.零钱兑换</title>
      <link href="/2020/09/16/leetcode/leetcode-322%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/"/>
      <url>/2020/09/16/leetcode/leetcode-322%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-322-零钱兑换"><a class="markdownIt-Anchor" href="#leetcode-322-零钱兑换"></a> <a href="https://leetcode-cn.com/problems/coin-change/">leetcode-322. 零钱兑换</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(<span class="keyword">int</span>[] coins, <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (amount &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[amount + <span class="number">1</span>];</span><br><span class="line">        Arrays.fill(dp, amount + <span class="number">1</span>);</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= amount; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; coins.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (coins[j] &lt;= i) &#123;</span><br><span class="line">                    dp[i] = Math.min(dp[i], dp[i - coins[j]] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[amount] &gt; amount ? -<span class="number">1</span> : dp[amount];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-72编辑距离</title>
      <link href="/2020/09/16/leetcode/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/"/>
      <url>/2020/09/16/leetcode/leetcode-72%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-72-编辑距离"><a class="markdownIt-Anchor" href="#leetcode-72-编辑距离"></a> <a href="https://leetcode-cn.com/problems/edit-distance/">leetcode-72. 编辑距离</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDistance</span><span class="params">(String word1, String word2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = word1.length();</span><br><span class="line">        <span class="keyword">int</span> n2 = word2.length();</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n1 + <span class="number">1</span>][n2 + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n1; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = i;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//初始化列</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n2; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (word1.charAt(i - <span class="number">1</span>) == word2.charAt(j - <span class="number">1</span>)) &#123;</span><br><span class="line">                    dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = Math.min(dp[i - <span class="number">1</span>][j], Math.min(dp[i][j - <span class="number">1</span>], dp[i - <span class="number">1</span>][j - <span class="number">1</span>])) + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n1][n2];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-40.组合总和 II</title>
      <link href="/2020/09/16/leetcode/leetcode-40%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-II/"/>
      <url>/2020/09/16/leetcode/leetcode-40%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-II/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/combination-sum-ii/">leetcode-40.组合总和 II</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum2(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        Arrays.sort(candidates);</span><br><span class="line">        dfs(<span class="number">0</span>, candidates, target);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(target == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//符合条件，加入数据</span></span><br><span class="line">            List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;(tmp);</span><br><span class="line">            <span class="keyword">if</span>(!set.contains(ans.toString()))&#123;</span><br><span class="line">                set.add(ans.toString());</span><br><span class="line">                result.add(ans);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = begin; i &lt; candidates.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 进行剪枝,前提是数组有序</span></span><br><span class="line">            <span class="keyword">if</span>(target - candidates[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp.add(candidates[i]);</span><br><span class="line">            dfs(i + <span class="number">1</span>, candidates, target - candidates[i]);</span><br><span class="line">            tmp.remove(tmp.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-300.最长上升子序列</title>
      <link href="/2020/09/15/leetcode/leetcode-300%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2020/09/15/leetcode/leetcode-300%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-300-最长上升子序列"><a class="markdownIt-Anchor" href="#leetcode-300-最长上升子序列"></a> <a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">leetcode-300. 最长上升子序列</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="comment">// 初始化dp</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i] &gt; nums[j]) &#123;</span><br><span class="line">                    dp[i] = Math.max(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = dp[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            res = Math.max(res, dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-714.买卖股票的最佳时机含手续费</title>
      <link href="/2020/09/15/leetcode/leetcode-714%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9/"/>
      <url>/2020/09/15/leetcode/leetcode-714%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-714-买卖股票的最佳时机含手续费"><a class="markdownIt-Anchor" href="#leetcode-714-买卖股票的最佳时机含手续费"></a> <a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">leetcode-714. 买卖股票的最佳时机含手续费</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices, <span class="keyword">int</span> fee)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">2</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>] + prices[i] - fee);</span><br><span class="line">            dp[i][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>状态压缩</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices, <span class="keyword">int</span> fee)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>] = Math.max(dp[<span class="number">0</span>], dp[<span class="number">1</span>] + prices[i] - fee);</span><br><span class="line">            dp[<span class="number">1</span>] = Math.max(dp[<span class="number">1</span>], dp[<span class="number">0</span>] - prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题08.01三步问题</title>
      <link href="/2020/09/15/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%980801%E4%B8%89%E6%AD%A5%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/15/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%980801%E4%B8%89%E6%AD%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-面试题-0801-三步问题"><a class="markdownIt-Anchor" href="#leetcode-面试题-0801-三步问题"></a> <a href="https://leetcode-cn.com/problems/three-steps-problem-lcci/">leetcode-面试题 08.01. 三步问题</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">waysToStep</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义三个状态</span></span><br><span class="line">        <span class="keyword">long</span>[] dp = <span class="keyword">new</span> <span class="keyword">long</span>[n + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化dp</span></span><br><span class="line">        dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        dp[<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">        dp[<span class="number">3</span>] = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            dp[i] = (dp[i - <span class="number">1</span>] + dp[i - <span class="number">2</span>] + dp[i - <span class="number">3</span>])%(<span class="number">1000000007</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-309.最佳买卖股票时机含冷冻期</title>
      <link href="/2020/09/15/leetcode/leetcode-309%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F/"/>
      <url>/2020/09/15/leetcode/leetcode-309%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-309-最佳买卖股票时机含冷冻期"><a class="markdownIt-Anchor" href="#leetcode-309-最佳买卖股票时机含冷冻期"></a> <a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">leetcode-309. 最佳买卖股票时机含冷冻期</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[][][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//未处于冷冻期</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//处于冷冻期</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Math.max(dp[n - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>], dp[n - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">3</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//初始化dp</span></span><br><span class="line">        <span class="comment">//未持有股票</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//持有股票</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//处于冷冻期</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = Math.max(dp[i-<span class="number">1</span>][<span class="number">0</span>], dp[i-<span class="number">1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = Math.max(dp[i-<span class="number">1</span>][<span class="number">1</span>], dp[i-<span class="number">1</span>][<span class="number">2</span>] - prices[i]);</span><br><span class="line">            dp[i][<span class="number">2</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Math.max(dp[n-<span class="number">1</span>][<span class="number">0</span>], dp[n-<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1314.矩阵区域和</title>
      <link href="/2020/09/15/leetcode/leetcode-1314%E7%9F%A9%E9%98%B5%E5%8C%BA%E5%9F%9F%E5%92%8C/"/>
      <url>/2020/09/15/leetcode/leetcode-1314%E7%9F%A9%E9%98%B5%E5%8C%BA%E5%9F%9F%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1314-矩阵区域和"><a class="markdownIt-Anchor" href="#leetcode-1314-矩阵区域和"></a> <a href="https://leetcode-cn.com/problems/matrix-block-sum/">leetcode-1314. 矩阵区域和</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] matrixBlockSum(<span class="keyword">int</span>[][] mat, <span class="keyword">int</span> K) &#123;</span><br><span class="line">        <span class="comment">// 确定矩阵的大小</span></span><br><span class="line">        <span class="keyword">int</span> n = mat.length;</span><br><span class="line">        <span class="keyword">int</span> c = mat[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">int</span>[][] result = <span class="keyword">new</span> <span class="keyword">int</span>[n][c];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; c; j++) &#123;</span><br><span class="line">                <span class="comment">//计算原始数组中需要计算的角标</span></span><br><span class="line">                <span class="keyword">int</span> xmin = i - K &lt; <span class="number">0</span> ? <span class="number">0</span> : i - K;</span><br><span class="line">                <span class="keyword">int</span> xmax = i + K &gt; n - <span class="number">1</span> ? n - <span class="number">1</span> : i + K;</span><br><span class="line">                <span class="keyword">int</span> ymin = j - K &lt; <span class="number">0</span> ? <span class="number">0</span> : j - K;</span><br><span class="line">                <span class="keyword">int</span> ymax = j + K &gt; c - <span class="number">1</span> ? c - <span class="number">1</span> : j + K;</span><br><span class="line">                result[i][j] = caculate(mat, xmin, xmax, ymin, ymax);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算大小</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">caculate</span><span class="params">(<span class="keyword">int</span>[][] mat, <span class="keyword">int</span> xmin, <span class="keyword">int</span> xmax, <span class="keyword">int</span> ymin, <span class="keyword">int</span> ymax)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = xmin; i &lt;= xmax; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = ymin; j &lt;= ymax; j++) &#123;</span><br><span class="line">                result += mat[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1583.统计不开心的朋友</title>
      <link href="/2020/09/15/leetcode/leetcode-1583%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%BC%80%E5%BF%83%E7%9A%84%E6%9C%8B%E5%8F%8B/"/>
      <url>/2020/09/15/leetcode/leetcode-1583%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%BC%80%E5%BF%83%E7%9A%84%E6%9C%8B%E5%8F%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1583-统计不开心的朋友"><a class="markdownIt-Anchor" href="#leetcode-1583-统计不开心的朋友"></a> <a href="https://leetcode-cn.com/problems/count-unhappy-friends/">leetcode-1583. 统计不开心的朋友</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">unhappyFriends</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] preferences, <span class="keyword">int</span>[][] pairs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n/<span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//一对对进行判断是否亲密</span></span><br><span class="line">            isUnHappy(n, preferences, pairs, i, <span class="number">0</span>);</span><br><span class="line">            isUnHappy(n, preferences, pairs, i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">isUnHappy</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] preferences, <span class="keyword">int</span>[][] pairs, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 判断朋友的亲密性</span></span><br><span class="line">        <span class="keyword">int</span> self = pairs[i][j];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配对的朋友</span></span><br><span class="line">        <span class="keyword">int</span> friend;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</span><br><span class="line">            friend = pairs[i][<span class="number">1</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            friend = pairs[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自己的朋友有哪些</span></span><br><span class="line">        <span class="comment">// 记录比匹配的朋友更亲密的朋友</span></span><br><span class="line">        <span class="comment">// 把比匹配到亲密度更高的朋友加入到集合中,这些数都比匹配的朋友更亲密</span></span><br><span class="line">        List&lt;Integer&gt; selfMoreSweetFriend = findMoreSweetFriends(n, preferences, self, friend);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历看匹配的朋友,朋友的匹配朋友的亲密度是否比self低</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; selfMoreSweetFriend.size() ; k++) &#123;</span><br><span class="line">            <span class="comment">// 查找出更亲密的朋友</span></span><br><span class="line">            <span class="keyword">int</span> sweet = selfMoreSweetFriend.get(k);</span><br><span class="line">            <span class="keyword">int</span> matchFriend = findFriend(pairs, sweet);</span><br><span class="line">            List&lt;Integer&gt; matchMoreSweetFriend = findMoreSweetFriends(n, preferences, sweet, matchFriend);</span><br><span class="line">            <span class="keyword">if</span> (matchMoreSweetFriend.contains(self))&#123;</span><br><span class="line">                <span class="comment">// 则认为是不开心</span></span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">findMoreSweetFriends</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[][] preferences, <span class="keyword">int</span> self, <span class="keyword">int</span> matchFriend)</span></span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n - <span class="number">1</span>; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preferences[self][k] == matchFriend) &#123;</span><br><span class="line">                <span class="comment">//匹配到亲密度的朋友</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(preferences[self][k]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findFriend</span><span class="params">(<span class="keyword">int</span>[][] pairs, <span class="keyword">int</span> sweet)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pairs.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pairs[i][<span class="number">0</span>] == sweet) &#123;</span><br><span class="line">                <span class="keyword">return</span> pairs[i][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (pairs[i][<span class="number">1</span>] == sweet) &#123;</span><br><span class="line">                <span class="keyword">return</span> pairs[i][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1582.二进制矩阵中的特殊位置</title>
      <link href="/2020/09/15/leetcode/leetcode-1582%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E4%BD%8D%E7%BD%AE/"/>
      <url>/2020/09/15/leetcode/leetcode-1582%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-1582-二进制矩阵中的特殊位置"><a class="markdownIt-Anchor" href="#leetcode-1582-二进制矩阵中的特殊位置"></a> <a href="https://leetcode-cn.com/problems/special-positions-in-a-binary-matrix/">leetcode-1582. 二进制矩阵中的特殊位置</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numSpecial</span><span class="params">(<span class="keyword">int</span>[][] mat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> row = mat.length;</span><br><span class="line">        <span class="keyword">int</span> cols = mat[<span class="number">0</span>].length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mat[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                    dfs(mat, i, j, row, cols);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[][] mat, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> row, <span class="keyword">int</span> cols)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> rowBool = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; row; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (k == i) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mat[k][j] == <span class="number">1</span>)&#123;</span><br><span class="line">                rowBool = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> colBool = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cols; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (k == j) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mat[i][k] == <span class="number">1</span>)&#123;</span><br><span class="line">                colBool = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rowBool &amp;&amp; colBool) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-188.买卖股票的最佳时机IV</title>
      <link href="/2020/09/15/leetcode/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIV/"/>
      <url>/2020/09/15/leetcode/leetcode-188%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIV/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-188-买卖股票的最佳时机-iv"><a class="markdownIt-Anchor" href="#leetcode-188-买卖股票的最佳时机-iv"></a> <a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/">leetcode-188. 买卖股票的最佳时机 IV</a></h4><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">0</span> || k &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">2</span>*k &gt; n) &#123;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">                res += Math.max(<span class="number">0</span>, prices[i] - prices[i - <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分别表示第几天,第几次售卖,</span></span><br><span class="line">        <span class="keyword">int</span>[][][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][k+<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= k; j++) &#123;</span><br><span class="line">                dp[i][j][<span class="number">0</span>] = -<span class="number">1000000000</span>;</span><br><span class="line">                dp[i][j][<span class="number">1</span>] = -<span class="number">1000000000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;=k ; j++) &#123;</span><br><span class="line">                dp[i][j][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][j][<span class="number">0</span>], dp[i - <span class="number">1</span>][j][<span class="number">1</span>] + prices[i]);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//只要要交易一次</span></span><br><span class="line">                <span class="keyword">if</span> (j &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    dp[i][j][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][j][<span class="number">1</span>], dp[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= k; j++) &#123;</span><br><span class="line">            res = Math.max(res, dp[n-<span class="number">1</span>][j][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-123.买卖股票的最佳时机III</title>
      <link href="/2020/09/15/leetcode/leetcode-123%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIII/"/>
      <url>/2020/09/15/leetcode/leetcode-123%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIII/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-123-买卖股票的最佳时机-iii"><a class="markdownIt-Anchor" href="#leetcode-123-买卖股票的最佳时机-iii"></a> <a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">leetcode-123. 买卖股票的最佳时机 III</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个数组,n表示第几天,3表示交易了几次,2表示持有或者不持有股票</span></span><br><span class="line">        <span class="keyword">int</span>[][][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">3</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一共有5中状态</span></span><br><span class="line">        <span class="comment">// 表示一直未买进股票</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//表示第一次买进股票,未进行卖出的交易,卖出只能有两次</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一次卖出,此状态还未发生,设置为不可能的值</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>][<span class="number">0</span>] = -<span class="number">1000000000</span>;</span><br><span class="line">        <span class="comment">//在第一次卖出后，然后再进行买入</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>][<span class="number">1</span>] = -<span class="number">1000000000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二次将股票卖出</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">2</span>][<span class="number">0</span>] = -<span class="number">1000000000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            dp[i][<span class="number">2</span>][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">2</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Math.max(dp[n - <span class="number">1</span>][<span class="number">2</span>][<span class="number">0</span>], Math.max(dp[n - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>], dp[n - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">2</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 定义dp数组,此处使用滚动变量</span></span><br><span class="line">        <span class="keyword">int</span> buy1 = -prices[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> sell1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> buy2 = -<span class="number">1000000000</span>;</span><br><span class="line">        <span class="keyword">int</span> sell2 = -<span class="number">1000000000</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            buy1 = Math.max(buy1, -prices[i]);</span><br><span class="line">            sell1 = Math.max(sell1, buy1 + prices[i]);</span><br><span class="line">            buy2 = Math.max(buy2, sell1 - prices[i]);</span><br><span class="line">            sell2 = Math.max(sell2, buy2 + prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sell2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-122买卖股票的最佳时机II</title>
      <link href="/2020/09/14/leetcode/leetcode-122%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII/"/>
      <url>/2020/09/14/leetcode/leetcode-122%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-122-买卖股票的最佳时机-ii"><a class="markdownIt-Anchor" href="#leetcode-122-买卖股票的最佳时机-ii"></a> <a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">leetcode-122. 买卖股票的最佳时机 II</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义数组存放</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>] = Math.max(dp[<span class="number">0</span>], dp[<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[<span class="number">1</span>] = Math.max(dp[<span class="number">1</span>], dp[<span class="number">0</span>] - prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-121.买卖股票的最佳时机</title>
      <link href="/2020/09/14/leetcode/leetcode-121%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/"/>
      <url>/2020/09/14/leetcode/leetcode-121%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-121-买卖股票的最佳时机"><a class="markdownIt-Anchor" href="#leetcode-121-买卖股票的最佳时机"></a> <a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">leetcode-121. 买卖股票的最佳时机</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (prices.length &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="comment">//定义dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">2</span>];</span><br><span class="line">        <span class="comment">//初始化数组</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">//此处-prices[i]表示在当前持入股票,因为题目只能允许股票买卖一次</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = Math.max(dp[i - <span class="number">1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dp[n-<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路–状态压缩</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = prices.length;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义股票持有及不持有两种状态</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="comment">// 股票不持有</span></span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 股票持有</span></span><br><span class="line">        dp[<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            dp[<span class="number">0</span>] = Math.max(dp[<span class="number">0</span>], dp[<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[<span class="number">1</span>] = Math.max(dp[<span class="number">1</span>], -prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-152.乘积最大子数组</title>
      <link href="/2020/09/14/leetcode/leetcode-152%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84/"/>
      <url>/2020/09/14/leetcode/leetcode-152%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="152-乘积最大子数组"><a class="markdownIt-Anchor" href="#152-乘积最大子数组"></a> <a href="https://leetcode-cn.com/problems/maximum-product-subarray/">152. 乘积最大子数组</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//初始化状态值dp[i][0]代表最小值,dp[i][1]代表最大值</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//从第二个数开始遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//小于0时,如果最小值为负数,此时相乘为最大值</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = Math.min(nums[i], dp[i-<span class="number">1</span>][<span class="number">1</span>]*nums[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = Math.max(nums[i], dp[i-<span class="number">1</span>][<span class="number">0</span>]*nums[i]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 大于0时</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = Math.min(nums[i], dp[i-<span class="number">1</span>][<span class="number">0</span>]*nums[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = Math.max(nums[i], dp[i-<span class="number">1</span>][<span class="number">1</span>]*nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历整个dp找到最大值</span></span><br><span class="line">        <span class="keyword">int</span> res = dp[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i][<span class="number">1</span>] &gt; res)&#123;</span><br><span class="line">                res = dp[i][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路–使用滑动变量缩小空间</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//初始化状态值dp[i][0]代表最小值,dp[i][1]代表最大值</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>] = nums[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> max = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> min = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//用一个一维的数组记录最大乘积</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从第二个数开始遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//小于0时,如果最小值为负数,此时相乘为最大值</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = Math.min(nums[i], dp[i-<span class="number">1</span>][<span class="number">1</span>]*nums[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = Math.max(nums[i], dp[i-<span class="number">1</span>][<span class="number">0</span>]*nums[i]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 大于0时</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = Math.min(nums[i], dp[i-<span class="number">1</span>][<span class="number">0</span>]*nums[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = Math.max(nums[i], dp[i-<span class="number">1</span>][<span class="number">1</span>]*nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历整个dp找到最大值</span></span><br><span class="line">        <span class="keyword">int</span> res = dp[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i][<span class="number">1</span>] &gt; res)&#123;</span><br><span class="line">                res = dp[i][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-637二叉树的层平均值</title>
      <link href="/2020/09/14/leetcode/leetcode-637%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC/"/>
      <url>/2020/09/14/leetcode/leetcode-637%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-637-二叉树的层平均值"><a class="markdownIt-Anchor" href="#leetcode-637-二叉树的层平均值"></a> <a href="https://leetcode-cn.com/problems/average-of-levels-in-binary-tree/">leetcode-637. 二叉树的层平均值</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;Double&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Double&gt; <span class="title">averageOfLevels</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> size = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                <span class="comment">//每次弹出来一个,代表一层遍历结束,计算每层的平均值</span></span><br><span class="line">                sum += node.val;</span><br><span class="line">                <span class="keyword">if</span> (i == size - <span class="number">1</span>) &#123;</span><br><span class="line">                    result.add((<span class="keyword">double</span>)sum / size);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-120三角形最小路径和</title>
      <link href="/2020/09/11/leetcode/leetcode-120%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/"/>
      <url>/2020/09/11/leetcode/leetcode-120%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="leetcode-120-三角形最小路径和"><a class="markdownIt-Anchor" href="#leetcode-120-三角形最小路径和"></a> <a href="https://leetcode-cn.com/problems/triangle/">leetcode-120. 三角形最小路径和</a></h4><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = triangle.size();</span><br><span class="line">        <span class="comment">// 初始记录的状态的数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自底向上递推</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;=<span class="number">0</span> ; i--) &#123;</span><br><span class="line">            <span class="comment">//从左到右</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                <span class="comment">// 定义状态转移方程</span></span><br><span class="line">                dp[i][j] = Math.min(dp[i+<span class="number">1</span>][j], dp[i+<span class="number">1</span>][j+<span class="number">1</span>]) + triangle.get(i).get(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路-状态压缩</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = triangle.size();</span><br><span class="line">        <span class="comment">// 初始记录的状态的数组</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自底向上递推</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;=<span class="number">0</span> ; i--) &#123;</span><br><span class="line">            <span class="comment">//从左到右</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                <span class="comment">// 定义状态转移方程</span></span><br><span class="line">                dp[j] = Math.min(dp[j], dp[j+<span class="number">1</span>]) + triangle.get(i).get(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-70.爬楼梯</title>
      <link href="/2020/09/11/leetcode/leetcode-70%E7%88%AC%E6%A5%BC%E6%A2%AF/"/>
      <url>/2020/09/11/leetcode/leetcode-70%E7%88%AC%E6%A5%BC%E6%A2%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/climbing-stairs/">leetcode-70.爬楼梯</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 定义初始状态</span></span><br><span class="line">        <span class="keyword">int</span>[] mem = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        mem[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i&lt;= n; i++)&#123;</span><br><span class="line">            mem[i] = mem[i-<span class="number">1</span>] + mem[i-<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mem[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-459.重复的子字符串</title>
      <link href="/2020/09/11/leetcode/leetcode-459%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/09/11/leetcode/leetcode-459%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/repeated-substring-pattern/">leetcode-459.重复的子字符串</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">repeatedSubstringPattern</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="comment">//暴力法,假设重复的个数是1到n</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i*<span class="number">2</span> &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % i == <span class="number">0</span>)&#123;</span><br><span class="line">                Boolean bool = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s.charAt(j - i) != s.charAt(j)) &#123;</span><br><span class="line">                        bool = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (bool) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题16.11跳水板</title>
      <link href="/2020/09/11/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9816-11%E8%B7%B3%E6%B0%B4%E6%9D%BF/"/>
      <url>/2020/09/11/leetcode/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9816-11%E8%B7%B3%E6%B0%B4%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/diving-board-lcci/">leetcode-面试题16.11跳水板</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] divingBoard(<span class="keyword">int</span> shorter, <span class="keyword">int</span> longer, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">               HashSet&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= k; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = shorter*i+longer*(k - i);</span><br><span class="line">            <span class="keyword">if</span>(!set.contains(num))&#123;</span><br><span class="line">                result.add(num);</span><br><span class="line">                set.add(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Collections.sort(result);</span><br><span class="line">        <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[result.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;result.size() ; i++) &#123;</span><br><span class="line">            ans[i] = result.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-547.朋友圈</title>
      <link href="/2020/09/10/leetcode/leetcode-547%E6%9C%8B%E5%8F%8B%E5%9C%88/"/>
      <url>/2020/09/10/leetcode/leetcode-547%E6%9C%8B%E5%8F%8B%E5%9C%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/friend-circles/">leetcode-547.朋友圈</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(<span class="keyword">int</span>[][] M)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化存储父节点</span></span><br><span class="line">        <span class="keyword">int</span>[] parent = <span class="keyword">new</span> <span class="keyword">int</span>[M.length];</span><br><span class="line">        <span class="comment">// 将所有的数的parent均初始化为-1,表示自己指向自己</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parent.length; i++) &#123;</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M.length ; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M.length ; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (M[i][j] == <span class="number">1</span> &amp;&amp; i != j)&#123;</span><br><span class="line">                    <span class="comment">//说明两个不同的数字是相联通的</span></span><br><span class="line">                    <span class="comment">// 此时将两个归为一个朋友圈</span></span><br><span class="line">                    union(parent, i, j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//此时遍历parent数组</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parent.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parent[i] == i)&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//并查集 找到父节点,未压缩</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (parent[i] == i)&#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> find(parent, parent[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 并查集,查询父节点，并压缩，当第一次查完，以后再查就是近乎于O(1)的时间复杂度</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRoot</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (parent[i] != i)&#123;</span><br><span class="line">            parent[i] = findRoot(parent, parent[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parent[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//合并两个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span>[] parent, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> xset = findRoot(parent, i);</span><br><span class="line">        <span class="keyword">int</span> yset = findRoot(parent, j);</span><br><span class="line">        <span class="keyword">if</span> (xset != yset)&#123;</span><br><span class="line">            parent[xset] = yset;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-491.递增子序列</title>
      <link href="/2020/09/10/leetcode/leetcode-491%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2020/09/10/leetcode/leetcode-491%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/increasing-subsequences/">leetcode-491.递增子序列</a></p><p><strong>原始思路</strong></p><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; findSubsequences(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        dfs(-<span class="number">101</span>, <span class="number">0</span> , nums);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pre, <span class="keyword">int</span> begin, <span class="keyword">int</span>[] nums)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (begin &gt; nums.length)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (ans.size() &gt;= <span class="number">2</span> &amp;&amp; !set.contains(ans.toString()))&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(ans));</span><br><span class="line">            set.add(ans.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = begin; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &lt; pre)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans.add(nums[i]);</span><br><span class="line">            dfs(nums[i], i + <span class="number">1</span>, nums);</span><br><span class="line">            ans.remove(ans.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-17.电话号码的字母组合</title>
      <link href="/2020/09/10/leetcode/leetcode-17%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/"/>
      <url>/2020/09/10/leetcode/leetcode-17%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/">leetcode-17. 电话号码的字母组合</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">public</span> List&lt;java.lang.String&gt; letterCombinations(String digits) &#123;</span><br><span class="line">        <span class="comment">//初始化数组,输入如23</span></span><br><span class="line">        String[] arr = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>,<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>,<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>,<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>,<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] chr = <span class="keyword">new</span> <span class="keyword">int</span>[digits.length()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; digits.length(); i++)&#123;</span><br><span class="line">            chr[i] = Integer.parseInt(java.lang.String.valueOf(digits.charAt(i)));</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(arr, chr, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(java.lang.String[] arr, <span class="keyword">int</span>[] chr, <span class="keyword">int</span> chrIndex)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sb.length() == chr.length)&#123;</span><br><span class="line">            <span class="keyword">if</span> (sb.length() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                result.add(sb.toString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (chrIndex &gt; chr.length)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> begin = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (chr[chrIndex] == <span class="number">7</span>)&#123;</span><br><span class="line">            begin = (chr[chrIndex]-<span class="number">2</span>)*<span class="number">3</span>;</span><br><span class="line">            end = (chr[chrIndex]-<span class="number">1</span>)*<span class="number">3</span> ;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (chr[chrIndex] == <span class="number">8</span>)&#123;</span><br><span class="line">            begin = (chr[chrIndex]-<span class="number">2</span>)*<span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">            end = (chr[chrIndex]-<span class="number">1</span>)*<span class="number">3</span> ;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (chr[chrIndex] == <span class="number">9</span>)&#123;</span><br><span class="line">            begin = (chr[chrIndex]-<span class="number">2</span>)*<span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">            end = arr.length -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            begin = (chr[chrIndex]-<span class="number">2</span>)*<span class="number">3</span>;</span><br><span class="line">            end = (chr[chrIndex]-<span class="number">1</span>)*<span class="number">3</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = begin; i&lt;= end; i++)&#123;</span><br><span class="line">            sb.append(arr[i]);</span><br><span class="line">            dfs(arr, chr, chrIndex + <span class="number">1</span>);</span><br><span class="line">            sb.deleteCharAt(sb.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-二分查找</title>
      <link href="/2020/09/09/acwing/acwing-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
      <url>/2020/09/09/acwing/acwing-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/791/">acwing-二分查找</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        <span class="comment">//定义指针</span></span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> right = arr.length - <span class="number">1</span>;</span><br><span class="line">        middle = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">            middle = (left + right)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(arr[middle] &lt; k)&#123;</span><br><span class="line">                right = middle - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[middle] &gt; k)&#123;</span><br><span class="line">                left = middle + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="keyword">return</span> arr[middle];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//表示没有找到</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小霸王面经分享</title>
      <link href="/2020/09/09/other/%E5%B0%8F%E9%9C%B8%E7%8E%8B%E9%9D%A2%E7%BB%8F/"/>
      <url>/2020/09/09/other/%E5%B0%8F%E9%9C%B8%E7%8E%8B%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>架构班目前我学了【1-13和大数据03,04】内容:<a href="http://note.youdao.com/s/dxE3UxWN;">http://note.youdao.com/s/dxE3UxWN;</a><br />架构班学习上建议跟着老师的大纲一步一步学习,因为跳着看后人的心会浮躁起来,比如前面电商项目一和微服务源码很多视频都几个小时,跳看后回头在补时效率就很低了。<br />本次跳槽主要是想验证一下自己这半年多的学习成果,平时学习时间安排 早上5-9点左右看老师视频,在公司上午复习下之前学的技术栈,主要通过自己的笔记和图来回顾,下午忙完领导安排活后实战和整理笔记,周末全天;知识点上是否吃透可以通过找会的人让他考考你或者跟不会的人能讲明白这个技术点或老师的代码都能自己手撸出来;<br />面试前半个月找石杉老师指导一下简历上技术栈和项目(这个很重要不然简历根本没有吸引力),按照简历技术栈来复习自己的知识体系(主要看自己平时自己做的笔记同时也沉淀自我笔记),项目上找架构班大佬虐两到三次项目细节;</p><p>一：面试了哪些公司？<br />百度 美团  京东 滴滴  小米 爱奇艺 58集团 新浪 好未来 boss 猿辅导<br />拿到了哪些公司的offer: 百度 美团 京东  滴滴 小米 爱奇艺 58集团 好未来 boss直聘<br />jvm,mysql,jdk集合和JUC并发源码,网络,微服务框架,分布式事务,分布式锁源码,redis</p><p>以上知识点对应老师的课程:<br />0.jvm和mysql来自救火队长专栏<br />1.jdk 石杉老师的架构班:08_JDK源码剖析系列内容<br />2.网络 石杉老师的架构班:09_大白话网络,10_Java NIO技术精讲以及原理剖析,11_支撑1亿图片的分布式存储系统项目实战,12_Netty核心功能精讲以及核心源码剖析,13_基于Netty的高并发基础架构项目实战,03_支撑每日10亿数据量的Kafka架构实战和04_探索世界上最复杂的消息系统：Kafka内核源码分析<br />3.微服务体系 石杉老师的架构班:springcloud netflix五个组件源码,分布式事务atomickos和byteTcc源码,分布式锁curator和redisson源码</p><p>4.redis 石杉老师亿级流量和redis设计与实现<br />三: 第一部分的内容jdk的相关的在老师架构班有两百多讲实战结合eureka源码写注册中心核心代码和Hadoop源码写editLog,老师也从中抽了一部分放在面试突击第三季这里<br />问题：说一下HashMap的工作原理(简单描述下回答思路)</p><ol><li>底层数据结构</li><li>初始化核心参数</li><li>hash算法<br />4.寻址算法</li><li>hash冲突</li><li>扩容机制</li><li>put方法,get方法和remove方法执行流程<br />8.hashMap是否是线程安全</li></ol><p>问题：说一下线程安全ConcurrentHashMap的工作原理(简单描述下回答思路)<br />1.底层数据结构<br />2. hash算法<br />3.寻址算法<br />4. put方法流程,get方法,remove方法,size方法<br />5.jdk 1.7和1.8底层实现区别,可能会被问到1.7如何去锁segment</p><p>问题：volatile硬件底层原理,cas和synchronized原理?<br />1.学习资料:石杉老师面试突击第三季volatile硬件级别讲解(强烈建议看一下)<br />自己整理的笔记: <a href="http://note.youdao.com/s/H02nMj8u">http://note.youdao.com/s/H02nMj8u</a><br />2.重点说一下回答思路:<br />1.为了解决处理器与主存之间的速度鸿沟,引入高速缓存,却又导致了缓存一致性问题<br />2.为了解决缓存一致性问问题,引入了如MESI等技术,又导致了处理器等待问题<br />3.为了解决处理器等待问题,引入了写缓冲区和无效队列,又导致了重排序和可见性问题<br />4.为了解决重排序和可见性问题,引入了内存屏障<br />5.每个技术点跟面试官举工作中的场景或者源码中场景知道为什么要学它,学了它后有什么用,比如volatile(aqs中state concurrentHashMap中Node节点),线程池的ctl(atomic 高三位:线程池状态 低位:线程池worker线程数量),concurrentHashMap(cas+synchronized),工作中优化停机,心跳时间等</p><p>问题: 线程池的工作原理和线程池的应用场景<br />1.学习资料:石杉老师面试突击第三季线程池工作原理<br />2.自己整理的笔记:<a href="http://note.youdao.com/s/G4t8hOyT">http://note.youdao.com/s/G4t8hOyT</a><br />问题: 说一下ThreadLocal工作原理和使用场景<br />1.学习资料:石杉老师面试突击第三季threadLocal工作原理<br />2.使用场景:石杉老师架构班中比如zuul源码中RequestContext和分布式文件系统写editLog的txId<br />3.自我整理的笔记:<a href="http://note.youdao.com/s/341vlwEp">http://note.youdao.com/s/341vlwEp</a><br />四: 第二部分的内容jvm相关的知识,之前试看周志明jvm相关书籍都是死记硬背理论缺乏实战效果不理想,之后是看救火队长的jvm专栏写的通俗易懂同时很多案例分析,建议先看专栏在看书,专栏中都有答案这里把jvm面试中问题说一下</p><p>问题: jvm的内存分配和执行原理以及类加载过程<br />问题:常用垃圾收集器有哪些,你们线上用的什么收集器,CMS优化,G1工作原理<br />问题:线上机器cpu负载过高如何去排查,如何去优化JVM参数<br />问题:是否有遇到过线上OOM情况,如何去排查的(这个拿老师案例说一下)<br />1.触发OOM的地方metaspace,线程虚拟机栈,堆内存,堆外内存专栏对应的场景都有案例我面试说了一个堆外内存溢出的情况<br />2.业务背景:公司IM系统使用netty来进行消息推送,有人在pipeline中自己创建byteBuf未释放<br />3.分析问题:<br />1.先通过OOM后自动生成的堆快照信息通过mat分析可能出现的地方和线程的调用栈定位到代码行<br />2.当并发量较大时堆内存持有堆外内存引用的对象进入老年代一直不能被回收,当通过jdk ByteBuffer.allocateDirect(xx)时java.nio.Bits#reserveMemory尝试的去分配堆外内存,如果堆外内存空间不够时会执行一次System.gc()通知jvm来进行一次full gc<br />3.但是由于线上jvm参数-XX:DisableExplicitGC禁止system.gc()导致堆外内存溢出</p><p>五: 第三部分的内容mysql相关的知识,我之前看过mysql45讲,曾经以为自己mysql不用在学一遍了,后来儒猿群朋友推荐看队长的mysql专栏才知道细节上的东西,客观评价一下mysql 45讲讲的比较好的两个点就是死锁和join了其他我觉得一般,太多时间要看评论才能弄明白问题,mysql知识点队长专栏都有详细讲解,这里我就把面试问到问题列一下</p><p>问题:mysql buffer pool的结构组成,建议从查询和更新操作来讲<br />笔记:<a href="https://www.processon.com/view/link/5f27c4e17d9c0835d3a35995">https://www.processon.com/view/link/5f27c4e17d9c0835d3a35995</a><br />问题:mysql通过什么机制来保证事物数据不丢失,MVCC机制和read-view视图<br />问题:mysql的索引结构,为什么不使用B树使用B+树,三层索引大概能支持多少数据,sql如何优化,覆盖索引,回表查询,索引下推等概念<br />问题:mysql的锁有哪些,如何分析死锁问题,死锁如何解决<br />问题:现在有一个场景需要保证数据库和redis的双写一致性,你会如何去做<br />问题:mysql的水平分库分表,什么情况下水平分表,什么情况下分库,分库分表的中间件你如何进行技术的选型,分片键有多个如何去做,单表迁移到分库分表方案,分库分表如何扩容</p><p>六: 第四部分的内容redis相关知识点石杉老师的亿级流量和redis设计与实现</p><p>问题:redis数据结构类型有哪些,平时在哪些场景下用过<br />1.redis数据结构类型有哪些:<a href="http://note.youdao.com/s/Omt2UtMp">http://note.youdao.com/s/Omt2UtMp</a><br />2.应用场景:<a href="http://note.youdao.com/s/8NPHq37A">http://note.youdao.com/s/8NPHq37A</a></p><p>问题:redis过期淘汰策略,内存淘汰策略,持久化方式<br />1.内存淘汰策略:<a href="http://note.youdao.com/s/O0iHxERv">http://note.youdao.com/s/O0iHxERv</a><br />2.rdb持久化:<a href="https://www.processon.com/view/link/5f39d0cce0b34d07117334ab">https://www.processon.com/view/link/5f39d0cce0b34d07117334ab</a><br />3.aof持久化:<a href="https://www.processon.com/view/link/5f39fa95e401fd0be031aee5">https://www.processon.com/view/link/5f39fa95e401fd0be031aee5</a><br />问题:redis主从集群+哨兵,redisCluster工作原理,一致性hash的好处</p><p>问题:redis的master和slave的集群可能出现主从之间网络实例抖动,导致重连失败一直需要进行全量复制你觉得是什么原因?<br />1.复制原理:<a href="https://www.processon.com/view/link/5f3b3d18079129531b60ee86">https://www.processon.com/view/link/5f3b3d18079129531b60ee86</a><br />2.导致的原因:从节点拿offset来主节点复制积压缓冲区找时找不到导致全量复制</p><p>问题:缓存雪崩,缓存穿透,缓存击穿如何解决,平时生产redis需要注意什么</p><ol><li>学习资料面试突击第一季:</li></ol><pre><code>https://gitee.com/shishan100/Java-Interview-Advanced#分布式缓存</code></pre><p>​<br />​<br />生产问题</p><ol start="2"><li>fork耗时导致高并发请求下延时(最好控制在10g中<br />• fork子进程需要拷贝父进程的空间内页表</li><li>避免复制风暴</li></ol><pre><code>•  别一个master挂多个slave导致都全量复制的时候,占用带宽    • 可以slave上在去挂slave,即星状变成树  3.匹配key•  keys指令导致的高cpu问题(禁止)• 如果必须通过scan扩容不会重复(高位累加)&amp;缩容的时候会重复  4.危险命令• flushall:清空所有数据。• flushdb:清空本库数据。 请确认在没有请求的情况下再执行以上操作。(深夜更新时)另外，redis 提供了异步清空命令• flushall async 和flushdb async 异步清空数据，不会阻塞当前线程</code></pre><p>七: 第五部分的内容分布式锁和微服务的相关内容,石杉老师架构班有详细的spring cloud netfix 5个组件和zk curator redisson的源码分析,工作原理上面试突击第二季有讲解<br />问题:分布式锁使用过哪些,使用场景<br />• 方案:<a href="http://note.youdao.com/s/9I3mdlyC">http://note.youdao.com/s/9I3mdlyC</a><br />• Zk curator源码:<a href="http://note.youdao.com/s/S7rvozW2">http://note.youdao.com/s/S7rvozW2</a><br />• Redisson:<a href="http://note.youdao.com/s/GgheHWp6">http://note.youdao.com/s/GgheHWp6</a></p><p>问题: 能说一下springcloud netfix中feign和hystrix工作原理<br />1.feign请求核心流程: <a href="http://note.youdao.com/s/BKApT2bP">http://note.youdao.com/s/BKApT2bP</a><br />2.feign整合hystrix核心流程: <a href="http://note.youdao.com/s/CNXJKhqi">http://note.youdao.com/s/CNXJKhqi</a><br />3.hystrix熔断器原理:<a href="http://note.youdao.com/s/J4IxMXk7">http://note.youdao.com/s/J4IxMXk7</a><br />4.hystrix存在问题,熔断打开后过了滑动窗口的时间后只根据一次请求的结果来确定是否继续熔断(二次开发统计一定比率)</p><p>八: 第六部分布式事务内容：<br />问题:分布式事务有使用过吗?在哪些场景下?说一下byteTcc的方案?seata有了解过?saga的原理有了解过吗?<br />1.学习资料:面试突击第二季或者石杉老师架构班的分布式事务原理和实战<br />2.笔记:<a href="http://note.youdao.com/s/I2SJpVam">http://note.youdao.com/s/I2SJpVam</a><br />3.byteTcc源码:<a href="http://note.youdao.com/s/ToAMxuGZ">http://note.youdao.com/s/ToAMxuGZ</a><br />4.seata官网:<a href="http://seata.io/zh-cn/docs/dev/mode/tcc-mode.html">http://seata.io/zh-cn/docs/dev/mode/tcc-mode.html</a></p><p>九: 第七部分网络相关内容<br />学习资料:面试突击第三季或石杉老师架构班大白话网络,nio源码,netty源码,kafka源码,自研分布式文件系统和IM系统<br />问题: 说一下http和https的请求流程<br />1.http请求流程:<a href="https://www.processon.com/view/link/5f113c8ae401fd06f3df1bed">https://www.processon.com/view/link/5f113c8ae401fd06f3df1bed</a><br />2.https请求流程:<a href="https://www.processon.com/view/link/5f11521de401fd06f3df7e75">https://www.processon.com/view/link/5f11521de401fd06f3df7e75</a><br />问题: bio和nio说一下,netty对比原生的nio好在哪里<br />1.netty好处:<a href="http://note.youdao.com/s/Dt9XWGgc">http://note.youdao.com/s/Dt9XWGgc</a></p><p>netty的源码:<br />1.核心流程:<a href="https://www.processon.com/view/link/5f3e3f1f5653bb06f2dc1b27">https://www.processon.com/view/link/5f3e3f1f5653bb06f2dc1b27</a><br />2.服务端:<a href="https://www.processon.com/view/link/5f448c1de0b34d638e054d4f">https://www.processon.com/view/link/5f448c1de0b34d638e054d4f</a><br />3.netty的实战:说rocketmq中代码或者石杉老师架构班自研IM系统<br />4.rocketmq源码:<br />1.学习资料:儒猿技术窝原子弹:从0开始带你成为消息中间件实战高手<br />源码:<br />producer端:<a href="https://www.processon.com/view/link/5fa91d8d7d9c081baf205c23">https://www.processon.com/view/link/5fa91d8d7d9c081baf205c23</a><br />broker端:<a href="https://www.processon.com/view/link/5fade419f346fb2d03b275db">https://www.processon.com/view/link/5fade419f346fb2d03b275db</a></p><p>十: 第八部分设计类型的题目:<br />1.统计一个ip访问次数<br />• 在不加锁的情况下ConcurrentHashMap+putIfAbsent+Atomic<br />2.自研的网关的功能<br />• 这里说的是基础架构自研的,自己了解一点基于netty实现,参考zuul的前,中,后拦截器思路实现,自定义组件:appId认证,加密解密,加签验签,监控等<br />3.设计模型的了解和应用场景<br />• type=1调用类a执行,type=2类b执行,type=3类c执行通过策略模式来进行优化<br />• 工作场景说了下库存更新:模板方法+命令模式+工厂模式,权限删除访问者模式,在介绍了一些开源中间件的源码中设计模式</p><p>4.比如搜索系统会调用百度,Google,必应,有道,调用过程中其中一个方法调用执行完则返回结果</p><ul><li><p>线程池提交多个异步任务,任务执行完后放入到一个阻塞队列中<br />主线程中阻塞队列take元素获取到返回结果</p><p>5.让你设计一个秒杀系统你怎么设计<br />- 架构班石杉老师秒杀的图:<a href="http://note.youdao.com/s/KWjR5hxo">http://note.youdao.com/s/KWjR5hxo</a><br />6.如何设计一个消息中间件,消息中间件事务如何去设计,平时使用消息中间件需要考虑什么问题</p></li></ul><p>学习资料:石杉老师架构班kafka讲解<br />producer:<a href="https://www.processon.com/view/link/5f87744c07912906db271efd">https://www.processon.com/view/link/5f87744c07912906db271efd</a><br />broker端:<a href="https://www.processon.com/view/link/5f93d5c71e085307a0a1826a">https://www.processon.com/view/link/5f93d5c71e085307a0a1826a</a><br />consumer端:<a href="https://www.processon.com/view/link/5f9bae6107912907289bfdff">https://www.processon.com/view/link/5f9bae6107912907289bfdff</a><br />事务设计:参考rocketmq事务消息说的方案:<a href="http://note.youdao.com/s/VZz4RZN5">http://note.youdao.com/s/VZz4RZN5</a><br />使用注意事项面试突击:<a href="https://gitee.com/shishan100/Java-Interview-Advanced">https://gitee.com/shishan100/Java-Interview-Advanced</a></p><p>十一: 第九部分开放题:<br />0.每次换工作的原因<br />1.你想换一个什么样岗位<br />2.工作什么样的事情给你带来成就感<br />3.现在有两个工作你怎么选择,工作A做的事情是高并发的场景他的业务上可能没有起色在走下坡路;另外一个场景并发量没有那么高技术上有数据量分库分表,分布式事务等场景,业务上给公司带来的价值更高<br />4.平时工作中技术和业务怎么权衡<br />5.一个需求需求需要做你们平时开发流程是什么样<br />5.一个需求需求需要做你们平时开发流程是什么样<br />6.你目前薪资多少,期望薪资多少,多久能到岗<br />7.你有什么要问我的吗<br />8.对我们团队的工作有了解吗</p><p>十二: 第十部分算法:<br />1.算法一般在一面和二面可能有<br />2.我平时没怎么刷属于放弃,个人认为时间成本和回报不成正比,算法其实也挺邪门的,我整个三四十次面试下来就出算法题5-6个,但是也有同学面试出很多算法<br />3.如果不喜欢刷算法的同学,建议算一种类型比如链表,同时面试的时候适当卖惨,比如说自己只会链表类型算法,其次算法很菜,大部分面试官听到后会直接会给你出链表类型题目<br />4.如果算法没做出来还让你继续面的话一定要通过技术来征服面试官,最后可以问一下面试官对算法的态度<br />5.如果要刷算法建议每天控制在1个小时左右把自己会的题刷个5-10遍</p><p>十三: 第十一部分项目:<br />技术上的问题大概就是上面列举出来的, 一面聊基础会问的很深和很细,二面和三面主要看你项目,我本次面试的重点说的项目是自研分布式文件系统(石杉老师架构班项目)，订单服务,消息推送服务开发等,要想进比如京东 百度 美团 阿里这样的大厂，技术深度和广度都需要很扎实,同时项目需要有含金量跟面试官有的聊,平时自己准备时:<br />自研或二次开发中间件项目:<br />1.自研的东西对比其他开源的内容有什么好处(可以从技术架构上,公司数据存储上,业务需求等方面考虑)<br />2.自研的带来的收益有哪些(最后表现出来的结果)<br />3.做这件事技术上最重要的点是哪些(用到的技术会被深问)<br />4.哪个地方做的比较完美,哪些地方后续还需要扩展(明白自己系统的优势和劣势)</p><p>业务项目<br />1.项目整理技术架构<br />2.你负责的项目的核心业务流程,需要有亮点比如熔断限流降级,分布式事务,分布式锁,分库分表,消息中间件异步化等<br />共性的内容:<br />1.项目每天的访问量<br />2.日活跃用户<br />3.平时和高峰期的qps<br />4.日交易量<br />5.服务部署多少台每台机器的配置<br />6.生产出现过的问题,如何去排查问题的</p><p>小结：<br />我本次面试独角兽+大厂大概面了十几家左右，面试一般是4轮，前3轮技术面试，第四轮hrbp简单聊工作履历和离职原因 新的岗位是否了解等,最后聊一下谈薪资和股票事情,聊薪资注意一下:不要把自己所有offer都告诉hr,这样hr会按照总包的价格来压低你的基础工资,在就是不管去不去先拿offer再说不要不好意思,这样你之后面试才有底气谈工资</p><p>学习方法</p><ol><li>第一遍主要是看资料学习(比如老师讲源码看源码分析的笔记,比如老师写代码过一遍老师的代码在脑海中把流程给弄明白),看的过程可以记录一下重点的知识点(不建议跟着敲效率为0)</li><li>第二遍自己写代码(卡主了在回头看一遍老师代码继续撸)或者写demo分析源码画流程图</li><li>第三遍总结自己笔记(不建议用老师的笔记不是说老师笔记不好作为参考)</li><li>第四遍第二天早上可以默写出昨天学习知识点核心的流程</li><li>第五遍反复实战项目应用(比如比较重要项目建议敲两遍以上,重要技术点视频学两遍以上)</li><li>第六遍跟看过的人交流或没看过的人,让你自己描述的东西能让别人听懂并能回答他问的问题</li></ol>]]></content>
      
      
      <categories>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面经 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-39.组合总和</title>
      <link href="/2020/09/09/leetcode/leetcode-39%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/"/>
      <url>/2020/09/09/leetcode/leetcode-39%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/combination-sum/">leetcode-39. 组合总和</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        Arrays.sort(candidates);</span><br><span class="line">        dfs(<span class="number">0</span>, candidates, target);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (total == target)&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(tmp));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((target - total)&lt; candidates[<span class="number">0</span>] || k &gt;= candidates.length || total &gt; target)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        tmp.add(candidates[k]);</span><br><span class="line">        total += candidates[k];</span><br><span class="line">        <span class="keyword">if</span>(!dfs(k, candidates, target))&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        total -= tmp.get(tmp.size() - <span class="number">1</span>);</span><br><span class="line">        tmp.remove(tmp.size() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(!dfs(k, candidates, target))&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        Arrays.sort(candidates);</span><br><span class="line">        dfs(<span class="number">0</span>, candidates, target);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(target == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//符合条件，加入数据</span></span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(tmp));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = begin; i &lt; candidates.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 进行剪枝,前提是数组有序</span></span><br><span class="line">            <span class="keyword">if</span>(target - candidates[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp.add(candidates[i]);</span><br><span class="line">            dfs(i, candidates, target - candidates[i]);</span><br><span class="line">            tmp.remove(tmp.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-787.归并排序</title>
      <link href="/2020/09/08/acwing/acwing-787%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
      <url>/2020/09/08/acwing/acwing-787%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/789/">acwing-787.归并排序</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            arr[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//进行排序</span></span><br><span class="line">        sort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> middle = left + right &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(left &gt;= right)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//左右分别排序</span></span><br><span class="line">        sort(arr, left, middle);</span><br><span class="line">        sort(arr, middle + <span class="number">1</span>, right);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//进行归并,这一步是归并排序中的难点</span></span><br><span class="line">        <span class="comment">//申请一个right - left + 1大小的数组作为临时数组</span></span><br><span class="line">        <span class="keyword">int</span>[] tmp = <span class="keyword">new</span> <span class="keyword">int</span>[right - left + <span class="number">1</span>];</span><br><span class="line">        <span class="comment">//定义两个指针和一个数组指针</span></span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l = left;</span><br><span class="line">        <span class="keyword">int</span> r = middle + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//循环将两个数组按数据放入tmp中</span></span><br><span class="line">        <span class="keyword">while</span>(l &lt;= middle &amp;&amp; r &lt;= right)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[l] &lt;= arr[r])&#123;</span><br><span class="line">                tmp[k++] = arr[l++];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                tmp[k++] = arr[r++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果左右数组中的某一个到达末尾,就把剩余的一个数组加到后面</span></span><br><span class="line">        <span class="keyword">while</span>(l &lt;= middle)&#123;</span><br><span class="line">            tmp[k++] = arr[l++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &lt;= right)&#123;</span><br><span class="line">            tmp[k++] = arr[r++];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//将临时数组的值复制到原数组中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = left , j = <span class="number">0</span>; i &lt;= right; i++,j++)&#123;</span><br><span class="line">            arr[i] = tmp[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-77.组合</title>
      <link href="/2020/09/08/leetcode/leetcode-77%E7%BB%84%E5%90%88/"/>
      <url>/2020/09/08/leetcode/leetcode-77%E7%BB%84%E5%90%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/combinations/">leetcode-77. 组合</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combine(<span class="keyword">int</span> n, <span class="keyword">int</span> k)&#123;</span><br><span class="line">        dfs(<span class="number">1</span>, n, k);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用DFS加回溯的思路</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((list.size() + n - cur + <span class="number">1</span>) &lt; k)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(list.size() == k)&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(list));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 向list中添加元素</span></span><br><span class="line">        list.add(cur);</span><br><span class="line">        dfs(cur + <span class="number">1</span>, n, k);</span><br><span class="line">        <span class="comment">//移除元素</span></span><br><span class="line">        list.remove(list.size() - <span class="number">1</span>);</span><br><span class="line">        dfs(cur + <span class="number">1</span>, n , k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acwing-785.快速排序</title>
      <link href="/2020/09/07/acwing/acwing-785%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
      <url>/2020/09/07/acwing/acwing-785%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.acwing.com/problem/content/description/787/">acwing-785.快速排序</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.*;</span><br><span class="line">Class Main&#123;</span><br><span class="line">    <span class="comment">//快排</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(left &gt;= right)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> middle = arr[left + (right - left)/<span class="number">2</span>];</span><br><span class="line">        <span class="comment">// -1 和 +1 是为了扩一位</span></span><br><span class="line">        <span class="keyword">int</span> l = left - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> r = right + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;<span class="keyword">while</span>(arr[l] &lt; middle);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;<span class="keyword">while</span>(arr[r] &gt; middle);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(l &lt; r)&#123;</span><br><span class="line">                <span class="keyword">int</span> tmp = arr[l];</span><br><span class="line">                arr[l] = arr[r];</span><br><span class="line">                arr[r] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        quickSort(arr, left ,r);</span><br><span class="line">        quickSort(arr, r+<span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        BufferedReader bf = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            String n = bf.readLine();</span><br><span class="line">            String str = bf.readLine();</span><br><span class="line">            <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[Integer.valueOf(n)];</span><br><span class="line">            String[] arrStr = str.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrStr.length; i++)&#123;</span><br><span class="line">                arr[i] = Integer.valueOf(arrStr[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            quickSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">                System.out.print(arr[i]);</span><br><span class="line">                <span class="keyword">if</span>(i != arr.length -<span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1560圆形赛道上经过次数最多的扇区</title>
      <link href="/2020/09/07/leetcode/leetcode-1560%E5%9C%86%E5%BD%A2%E8%B5%9B%E9%81%93%E4%B8%8A%E7%BB%8F%E8%BF%87%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E6%89%87%E5%8C%BA/"/>
      <url>/2020/09/07/leetcode/leetcode-1560%E5%9C%86%E5%BD%A2%E8%B5%9B%E9%81%93%E4%B8%8A%E7%BB%8F%E8%BF%87%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E6%89%87%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/most-visited-sector-in-a-circular-track/">1560. 圆形赛道上经过次数最多的扇区</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">mostVisited</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] rounds)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mostVisit(n, rounds);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">mostVisit</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] rounds)</span></span>&#123;</span><br><span class="line">        <span class="comment">//存放每个数字被经过的次数</span></span><br><span class="line">        HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            arr[i - <span class="number">1</span>] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历每一轮</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rounds.length -<span class="number">1</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)&#123;</span><br><span class="line">                visit(arr, rounds[i], rounds[i + <span class="number">1</span>], map);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (rounds[i] == n)&#123;</span><br><span class="line">                    visit(arr, arr[<span class="number">0</span>], rounds[i + <span class="number">1</span>], map);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    visit(arr, arr[rounds[i]], rounds[i + <span class="number">1</span>], map);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Integer num = <span class="number">0</span>;</span><br><span class="line">        Integer max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet())&#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue() &gt; max)&#123;</span><br><span class="line">                max = entry.getValue();</span><br><span class="line">                num = entry.getKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet())&#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue() == max)&#123;</span><br><span class="line">                list.add(entry.getKey());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> start, <span class="keyword">int</span> end, HashMap&lt;Integer, Integer&gt; map,)</span></span>&#123;</span><br><span class="line">        <span class="comment">//每一轮遍历的数字</span></span><br><span class="line">        <span class="keyword">if</span> (start &gt;= end)&#123;</span><br><span class="line">            <span class="comment">//先从start遍历到数组末尾,然后从数组开头遍历到end</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = start - <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                map.put(arr[i], map.getOrDefault(arr[i],<span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; end; i++)&#123;</span><br><span class="line">                map.put(arr[i], map.getOrDefault(arr[i],<span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//直接从start遍历到end</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = start - <span class="number">1</span>; i &lt; end; i++) &#123;</span><br><span class="line">                map.put(arr[i], map.getOrDefault(arr[i],<span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-347.前K个高频元素</title>
      <link href="/2020/09/07/leetcode/leetcode-347%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0/"/>
      <url>/2020/09/07/leetcode/leetcode-347%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/top-k-frequent-elements/">leetcode-347. 前 K 个高频元素</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] topKFrequent(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="comment">// 申请一个map</span></span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length ; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(nums[i]))&#123;</span><br><span class="line">                map.put(nums[i], map.get(nums[i]) + <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(nums[i], <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个最大为k的最大堆</span></span><br><span class="line">        PriorityQueue&lt;Map.Entry&lt;Integer, Integer&gt;&gt; queue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(k, <span class="keyword">new</span> Comparator&lt;Map.Entry&lt;Integer, Integer&gt;&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Map.Entry&lt;Integer, Integer&gt; o1, Map.Entry&lt;Integer, Integer&gt; o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o2.getValue().compareTo(o1.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet())&#123;</span><br><span class="line">            queue.add(entry);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[k];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k ; i++) &#123;</span><br><span class="line">            result[i] = queue.poll().getKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-236.二叉树的最近公共祖先</title>
      <link href="/2020/09/07/leetcode/leetcode-236%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
      <url>/2020/09/07/leetcode/leetcode-236%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/">leetcode-236. 二叉树的最近公共祖先</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;TreeNode&gt; listP = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ArrayList&lt;TreeNode&gt; listQ = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        findNode(root, p, listP);</span><br><span class="line">        findNode(root, q, listQ);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组倒序遍历,最近的公共数字就是最近公共祖先</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = listP.size() -<span class="number">1</span>; i &gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(listQ.contains(listP.get(i)))&#123;</span><br><span class="line">                <span class="keyword">return</span> listP.get(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回溯算法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findNode</span><span class="params">(TreeNode root, TreeNode target, ArrayList&lt;TreeNode&gt; list)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历到最后还没找到返回false</span></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果没有找到目标节点,添加节点到路径中</span></span><br><span class="line">        <span class="keyword">if</span> (!list.contains(target))&#123;</span><br><span class="line">            list.add(root);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果找到了目标节点,则返回</span></span><br><span class="line">        <span class="keyword">if</span>(list.contains(target))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//DFS查找</span></span><br><span class="line">        <span class="keyword">if</span>(!findNode(root.left, target, list))&#123;</span><br><span class="line">            list.remove(root.left);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!findNode(root.right, target, list))&#123;</span><br><span class="line">            list.remove(root.right);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题解思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(root == <span class="keyword">null</span> || root == p || root == q)&#123;</span><br><span class="line">             <span class="keyword">return</span> root;</span><br><span class="line">         &#125;</span><br><span class="line">         TreeNode left = lowestCommonAncestor(root.left, p, q);</span><br><span class="line">         TreeNode right = lowestCommonAncestor(root.right, p, q);</span><br><span class="line">         <span class="comment">// 最近公共祖先在右边</span></span><br><span class="line">         <span class="keyword">if</span>(left == <span class="keyword">null</span>)&#123;</span><br><span class="line">             <span class="keyword">return</span> right;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">// 最近公共祖先在左边边</span></span><br><span class="line">         <span class="keyword">if</span>(right == <span class="keyword">null</span>)&#123;</span><br><span class="line">             <span class="keyword">return</span> left;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//p q分散在两边</span></span><br><span class="line">         <span class="keyword">return</span> root;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-60.第k个排列</title>
      <link href="/2020/09/05/leetcode/leetcode-60%E7%AC%ACk%E4%B8%AA%E6%8E%92%E5%88%97/"/>
      <url>/2020/09/05/leetcode/leetcode-60%E7%AC%ACk%E4%B8%AA%E6%8E%92%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/permutation-sequence/">leetcode-60.第k个排列</a></p><p><strong>思路解析</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPermutation</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        AtomicInteger atomic = <span class="keyword">new</span> AtomicInteger(k);</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            sb.append(getIndexNum(n, atomic, i, set));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//确认每一位数字</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">getIndexNum</span><span class="params">(<span class="keyword">int</span> n, AtomicInteger atomic, <span class="keyword">int</span> index, Set&lt;Integer&gt; set)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (index == n) &#123;</span><br><span class="line">            <span class="comment">//说明前n-1位已经确定，那么最后一位也可以确定</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!set.contains(i)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//每个index上该数字出现最多的次数</span></span><br><span class="line">        <span class="keyword">int</span> fb = fb(n - index);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取除数,i=1表示在第一个数字上，i=1表示在第二个数字上....依次类推</span></span><br><span class="line">        <span class="keyword">int</span> i = (atomic.get() - <span class="number">1</span>) / fb + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!set.contains(j)) &#123;</span><br><span class="line">                i--;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//找到了第i个数为index上的数</span></span><br><span class="line">                    result = j;</span><br><span class="line">                    set.add(result);</span><br><span class="line">                    <span class="comment">//更新atomic的值</span></span><br><span class="line">                    atomic.set(atomic.get() - (((atomic.get() - <span class="number">1</span>) / fb + <span class="number">1</span>) - <span class="number">1</span>) * fb);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回此时确认的数字</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//斐波拉切函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">fb</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> k * fb(k - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-235.二叉搜索树的最近公共祖先</title>
      <link href="/2020/09/04/leetcode/leetcode-235%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
      <url>/2020/09/04/leetcode/leetcode-235%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/">leetcode-235二叉搜索树的最近公共祖先</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findAncestor(root, p, q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TreeNode <span class="title">findAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span></span>&#123;</span><br><span class="line">        <span class="comment">//如果p,q分散在两边,那中间的肯定是共公祖先,当p、q其中一个为root的话,那么必然自己就是祖先</span></span><br><span class="line">        <span class="keyword">if</span>(p.val &gt; root.val &amp;&amp; q.val&lt; root.val</span><br><span class="line">            || p.val &lt; root.val &amp;&amp; q.val&gt; root.val</span><br><span class="line">            || p.val == root.val</span><br><span class="line">            || q.val == root.val)&#123;</span><br><span class="line">                <span class="keyword">return</span> root;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//此时说明p、q必定分布在一边,选取任意一个值判断在左边还是右边,然后进行递归</span></span><br><span class="line">        <span class="keyword">if</span>(root.val &gt; p.val)&#123;</span><br><span class="line">            <span class="keyword">return</span> findAncestor(root.left, p , q);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> findAncestor(root.right, p , q);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1567.乘积为正数的最长子数组长度</title>
      <link href="/2020/09/04/leetcode/leetcode-1567%E4%B9%98%E7%A7%AF%E4%B8%BA%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6/"/>
      <url>/2020/09/04/leetcode/leetcode-1567%E4%B9%98%E7%A7%AF%E4%B8%BA%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/maximum-length-of-subarray-with-positive-product/">leetcode-1567.乘积为正数的最长子数组长度</a></p><p><strong>原始思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxLen</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findMax(nums);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">findMax</span><span class="params">(<span class="keyword">int</span>[] nums)</span></span>&#123;</span><br><span class="line">        <span class="comment">//从第一个位置开始,遇到0了就停止并返回最大的数组乘积的起始与结束位置的index</span></span><br><span class="line">        Integer max;</span><br><span class="line">        <span class="comment">// 记录此时max为正数的</span></span><br><span class="line">        Integer endIndex;</span><br><span class="line">        <span class="comment">//初始化最大长度为0</span></span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>; i &lt;nums.length; i++)&#123;</span><br><span class="line">            endIndex = -<span class="number">1</span>;</span><br><span class="line">            max = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//剪枝</span></span><br><span class="line">            <span class="keyword">if</span> ((nums.length - i + <span class="number">1</span>)&lt;=maxLen)&#123;</span><br><span class="line">                <span class="keyword">return</span> maxLen;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//记录出现负数的次数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j =i; j &lt;nums.length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j] == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//结束循环</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> num = nums[j] &gt; <span class="number">0</span> ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (max == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    max = num;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    max = max * num;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (max &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    endIndex = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//记录此时为正数的最大长度</span></span><br><span class="line">            <span class="keyword">if</span> (endIndex - i + <span class="number">1</span> &gt; maxLen)&#123;</span><br><span class="line">                maxLen = endIndex - i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> maxLen;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-98.验证二叉搜索树</title>
      <link href="/2020/09/02/leetcode/leetcode-98%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
      <url>/2020/09/02/leetcode/leetcode-98%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/validate-binary-search-tree/">leetcode-98.验证二叉搜索树</a></p><p><strong>原始思路</strong>：<strong>中序排序</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        AtomicReference&lt;Integer&gt; atomicReference = <span class="keyword">new</span> AtomicReference&lt;&gt;();</span><br><span class="line">        <span class="keyword">return</span> isValid(root, atomicReference);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 中序排序遍历,后遍历的树需要大于前一个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(TreeNode current, AtomicReference&lt;Integer&gt; atomicReference)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(current.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!isValid(current.left, atomicReference))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(atomicReference.get() != <span class="keyword">null</span> &amp;&amp; current.val &lt;= atomicReference.get())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        atomicReference.set(current.val);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(current.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!isValid(current.right, atomicReference))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递归思路</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isValid(root, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(TreeNode root,Integer min, Integer max)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 重点注意:左子树的最大值不能大于等根节点,右子树的最小值不能小于等于根节点</span></span><br><span class="line">        <span class="keyword">if</span>(min != <span class="keyword">null</span> &amp;&amp; root.val &lt;= min)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max != <span class="keyword">null</span> &amp;&amp; root.val &gt;= max)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//递归左右子树</span></span><br><span class="line">        <span class="keyword">if</span>(!isValid(root.left, min, root.val))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!isValid(root.right, root.val, max))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1566.重复至少 K 次且长度为 M 的模式</title>
      <link href="/2020/09/01/leetcode/leetcode-1566%E9%87%8D%E5%A4%8D%E8%87%B3%E5%B0%91%20K%20%E6%AC%A1%E4%B8%94%E9%95%BF%E5%BA%A6%E4%B8%BA%20M%20%E7%9A%84%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/09/01/leetcode/leetcode-1566%E9%87%8D%E5%A4%8D%E8%87%B3%E5%B0%91%20K%20%E6%AC%A1%E4%B8%94%E9%95%BF%E5%BA%A6%E4%B8%BA%20M%20%E7%9A%84%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times/">leetcode-1566.重复至少 K 次且长度为 M 的模式</a></p><p><strong>原始思路实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">containsPattern</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//边界判断</span></span><br><span class="line">        <span class="keyword">if</span>(arr.length &lt; m || m&lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i + m -<span class="number">1</span> &lt; arr.length; i++)&#123;</span><br><span class="line">            <span class="comment">//定义重复次数count</span></span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//记录找到数组的最后角标</span></span><br><span class="line">            <span class="keyword">int</span> index = i + m -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = index + <span class="number">1</span> ; j+ m -<span class="number">1</span> &lt;arr.length; j++)&#123;</span><br><span class="line">                <span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">//如何快速判断m个数组是相同的模式</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; m; x++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(arr[i+x] != arr[j+x])&#123;</span><br><span class="line">                        b = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(b)&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    <span class="comment">//更新找到相同模板的数组的最后一位角标</span></span><br><span class="line">                    index = j + m -<span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//证明不连续了</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(count == k)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//后面的全部能匹配上也不够K时,没有必要在继续寻找,直接break</span></span><br><span class="line">                <span class="keyword">if</span>((arr.length-index)/m&lt;(k-count))&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>观看题解后思路实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">containsPattern</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//边界判断</span></span><br><span class="line">        <span class="keyword">if</span>(arr.length &lt; m*k)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= arr.length - m*k; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> j ;</span><br><span class="line">            <span class="keyword">for</span>(j = i+m; j &lt; i + m*k; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j] != arr[j-m])&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果此时存在j刚好到达i+k*m的位置,说明存在k个m的模板</span></span><br><span class="line">            <span class="keyword">if</span>(j == i + k*m)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud</title>
      <link href="/2020/08/31/springCloud/Spring%20Cloud/"/>
      <url>/2020/08/31/springCloud/Spring%20Cloud/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>第一：微服务注册中心的注册表如何更好的防止读写并发冲突？<br />第二：Eureka注册表多级缓存架构有了解过吗？<br />第三：Nacos如何支撑阿里巴巴内部上百万服务实例的访问？<br />第四：Nacos高并发异步注册架构知道如何设计的吗？<br />第五：Sentinel底层滑动时间窗限流算法怎么实现的？<br />第六：Sentinel底层是如何计算线上系统实时QPS的？<br />第七：Seata分布式事务回滚机制如何实现的？<br />第八：Nacos集群CP架构底层类Raft协议怎么实现的？<br />第九：Nacos&amp;Eureka&amp;Zookeeper集群架构都有脑裂问题吗？<br />第十：如何设计能支撑全世界公司使用的微服务云架构？</p>]]></content>
      
      
      <categories>
          
          <category> spring cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch笔记</title>
      <link href="/2020/08/27/elasticsearch%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/08/27/elasticsearch%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>elasticsearch笔记</p>]]></content>
      
      
      <categories>
          
          <category> elasticsearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ笔记 06-事务机制</title>
      <link href="/2020/08/27/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2006-%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6/"/>
      <url>/2020/08/27/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2006-%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="rocketmq事务机制"><a class="markdownIt-Anchor" href="#rocketmq事务机制"></a> RocketMQ事务机制</h2><h3 id="基于half消息的事务机制"><a class="markdownIt-Anchor" href="#基于half消息的事务机制"></a> 基于half消息的事务机制</h3><p>​<img src="/images/half%E6%B6%88%E6%81%AF%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6.png" alt="half消息事务机制" style="zoom:50%;" /></p><p>​生产者如订单系统在发送消息到MQ时，会先发送half消息到MQ，half消息成功后订单系统会收到half发送成功的通知，此时说明MQ存活，订单系统可以执行订单更新等本地事务，如果订单系统的本地事务执行失败可以发送一个rollback请求到MQ，告诉MQ删除之前发的half消息。如果订单系统本地事务执行成功，会发送一个commit请求给MQ进行commit操作，消息被commit之后，消费者才能看见这条消息</p><p><strong>如果发送half消息成功了，但是没有收到响应怎么办？</strong></p><p>​half消息发送给MQ，MQ保存成功，但是由于网络等原因造成订单系统没有收到MQ返回的响应，此时订单系统会误以为发送给MQ失败了，会将订单系统标记为关闭等操作，但是这个时候MQ已经存储了一条half消息，此时由于RocketMQ存在一个补偿机制，MQ会定时扫描自己处于half状态的消息，如果一直没有对这个消息进行commit或者rollback操作，超过一定的时间，就会回调订单系统的接口，让订单系统确认是要commit还是rollback消息，如果订单系统发现订单状态是已关闭，那必然会发送rollback请求给MQ去删除half消息</p><p><strong>如果生产者进行commit或者rollback失败会怎么样？</strong></p><p>​当half消息写入MQ成功，并且订单系统收到响应了，此时订单系统执行本地事务成功或者失败了，执行了commit或者rollback请求，发送给MQ，结果因为网络故障，导致commit或者rollback请求发送失败，此时RocketMQ后台发现一个half长时间未执行commit或者rollback操作也会执行补偿机制，回调订单系统的接口</p><h3 id="half消息是如何对消费者不可见及消息确认机制"><a class="markdownIt-Anchor" href="#half消息是如何对消费者不可见及消息确认机制"></a> half消息是如何对消费者不可见及消息确认机制</h3><p>​<img src="/images/half%E6%B6%88%E6%81%AF%E7%A1%AE%E8%AE%A4%E6%9C%BA%E5%88%B6.png" alt="half消息确认机制" style="zoom:50%;" /></p><p>​举个例子，订单系统发送了一个half状态的订单支付消息到“OrderPaySuccessTopic”里去，OrderPaySuccessTopic是一个Topic，从之前的底层原理剖析的环节知道写入一个Topic，最终是定位到这个Topic的某个MessageQueue，然后定位到一台Broker机器上去，然后写入的是Broker上的CommitLog文件，同时将消费索引写入MessageQueue对应的ConsumeQueue文件，按理说如果你写入一条half消息到OrderPaySuccessTopic里去，会定位到这个Topic的一个MessageQueue，然后定位到上图RocketMQ的一台机器上去，消息会写入CommitLog，同时消息的offset会写入MessageQueue对应的ConsumeQueue，这个ConsumeQueue是属于OrderPaySuccuessTopic的，然后消费者按理说会从这个ConsumeQueue里获取到你写入的这个half消息。但是实际上消费者却没法看到这条消息，其本质原因就是RocketMQ一旦发现你发送的是一个half消息，他不会把这个half消息的offset写入OrderPaySuccessTopic的ConsumeQueue里去,会把这条half消息写入到自己内部的<strong>RMQ_SYS_TRANS_HALF_TOPIC</strong>这个Topic对应的一个ConsumeQueue里去，所以消费者自然无法从OrderPaySuccessTopic的ConsumeQueue中看到这条half消息了</p><p><strong>生产者什么时候会收到half消息成功的响应？</strong></p><p>​当half消息进入到RocketMQ内部的RMQ_SYS_TRANS_HALF_TOPIC的ConsumeQueue文件了，此时就会认为half消息写入成功了，然后就会返回响应给生产者。</p><p><strong>一直没有执行rollback或者commit会怎么样？</strong></p><p>​假如因为网络故障，订单系统没收到half消息的响应，或者说自己发送的rollback/commit请求失败了，那么RocketMQ会干什么？</p><p>​其实这个时候他会在后台有定时任务，定时任务会去扫描RMQ_SYS_TRANS_HALF_TOPIC中的half消息，如果你超过一定时间还是half消息，他会回调订单系统的接口，让你判断这个half消息是要rollback还是commit</p><p><strong>如果执行rollback操作的话，如何标记消息回滚？</strong></p><p>​假设生产者执行了rollback请求，那么此时就需要对消息进行回滚，但是消息并不会真的把half消息从磁盘中删除，因为RocketMQ都是将<strong>消息顺序写入</strong>磁盘文件的，所以在这里如果执行rollback，他的本质就是用一个OP操作来标记half消息的状态，RocketMQ内部有一个OP_TOPIC，此时可以写一条rollback OP记录到这个Topic里，标记某个half消息是rollback了，假设你一直没有执行commit/rollback，RocketMQ会回调生产者的接口去判断half消息的状态，但是最多就是回调15次，如果15次之后都没法告知他half消息的状态，就自动把消息标记为rollback。</p><p><strong>如果执行commit操作，如何让消息对红包系统可见？</strong></p><p>​如果执行commit操作之后，RocketMQ就会在OP_TOPIC里写入一条记录，标记half消息已经是commit状态了，接着把放在RMQ_SYS_TRANS_HALF_TOPIC中的half消息给写入到OrderPaySuccessTopic的ConsumeQueue里去，然后消费者就可以看到这条消息进行消费</p>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ笔记 05-消费者如何拉取消息</title>
      <link href="/2020/08/27/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2005-%E6%B6%88%E8%B4%B9%E8%80%85%E5%A6%82%E4%BD%95%E6%8B%89%E5%8F%96%E6%B6%88%E6%81%AF/"/>
      <url>/2020/08/27/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2005-%E6%B6%88%E8%B4%B9%E8%80%85%E5%A6%82%E4%BD%95%E6%8B%89%E5%8F%96%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="消费者如何从master-broker或者slaver-broker上拉取数据"><a class="markdownIt-Anchor" href="#消费者如何从master-broker或者slaver-broker上拉取数据"></a> 消费者如何从Master Broker或者Slaver Broker上拉取数据</h2><img src="/images/%E6%B6%88%E8%B4%B9%E8%80%85%E6%8B%89%E5%8F%96%E6%B6%88%E6%81%AF.png" alt="消费者拉取消息" style="zoom: 50%;" /><p><strong>ConsumerQueue文件基于os cache</strong></p><p>​ConsumeQueue会被大量的消费者发送的请求给高并发的读取，所有ConsumeQueue文件的读操作非常频繁，同时也会极大影响消费者进行消息的拉取的性能和消费的吞吐量，所以Broker对ConsumeQueue文件也是基于os cache进行优化，对于Broker大量的ConsumeQueue文件，在写入的时候是优先写入os cache中，而且os也有自己的优化机制，就是在读取一个磁盘文件的时候，会自动把磁盘文件的一些数据缓存到os cache中，由于ConsumeQueue文件主要是存放消息的offset，所以每个文件很小，30万条消息的offset就只有5.72M左右，完全可以被os缓存到内存cache中</p><p><strong>CommitLog是基于os cache+磁盘一起读取的</strong></p><p>​os cache是机器的内存，一般最多也就几十个G而已，对于CommitLog而言，无法将全部数据加载到内存中，os cache主要是提升文件的写入性能，os会自动把旧数据刷入磁盘中，腾出空间给新写入的数据。</p><p>​结论当你拉取消息的时候，可以轻松从os cache里读取少量的ConsumeQueue文件里的offset，这个性能是极高的，但是当你去CommitLog文件里读取完整消息数据的时候，会有两种可能</p><ul><li>如果你读取的是那种刚刚写入CommitLog的数据，那么大概率他们还停留在os cache中，此时你可以顺利的直接从os cache里读取CommitLog中的数据，这个就是内存读取，性能是很高的</li><li>你也许读取的是比较早之前写入CommitLog的数据，那些数据早就被刷入磁盘了，已经不在os cache里了，那么此时你就只能从磁盘上的文件里读取了，这个性能是比较差一些的。</li></ul><p><strong>什么时候会从os cache读？什么时候会从磁盘读？</strong></p><p>​如果你的消费者机器一直快速的在拉取和消费处理，紧紧的跟上了生产者写入broker的消息速率，那么你每次拉取几乎都是在拉取最近人家刚写入CommitLog的数据，那几乎都在os cache里。但是如果broker的负载很高，导致你拉取消息的速度很慢，或者是你自己的消费者机器拉取到一批消息之后处理的时候性能很低，处理的速度很慢，这都会导致你跟不上生产者写入的速率，此时可能很大概率从磁盘上读取数据。</p><p><strong>Master Broker什么时候会让你从Slave Broker拉取数据？</strong></p><p>​Broker自己是知道机器上当前的整体物理内存有多大的，而且他也知道自己可用的最大空间占里面的比例，他是知道自己的消息最多可以在内存里放多少的！比如他心知肚明，他最多存放10GB数据在os cache中，也就大概在内存里放5万条消息而已！</p><p>​然后这个时候消费者过来拉取消息，他发现你还有8万条消息没有拉取，这个8万条消息他发现是10GB内存最多存放的5万条消息的，那么此时就说明，肯定有3万条消息目前是在磁盘上的，不在os cache内存里！</p><p>​所以os cache经过上述判断，会发现此时你很大概率会从磁盘里加载3万条消息出来！他会认为，出现这种情况，很可能是因为自己作为master broker负载太高了，导致没法及时的把消息给你，所以你落后的进度比较多。这个时候，Master Broker就会告诉消费者，这次给你从磁盘里读取3万条消息，但是下次你还是从slave broker去拉取吧！</p><p>​本质是对比消费者当前没有拉取消息的数量和大小，以及最多可以存放在os cache内存里的消息的大小，如果你没拉取的消息超过了最大能使用的内存的量，那么说明消费者后续会频繁从磁盘加载数据，此时就让消费者从slave broker去加载数据了！</p>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ笔记 04-底层原理</title>
      <link href="/2020/08/24/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2004-%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/"/>
      <url>/2020/08/24/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2004-%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="底层原理初探"><a class="markdownIt-Anchor" href="#底层原理初探"></a> 底层原理初探</h2><h3 id="问题概览"><a class="markdownIt-Anchor" href="#问题概览"></a> 问题概览</h3><ol><li>生产者往Broker上发送消息的底层原理</li><li>Broker接受到消息后是如何储存到磁盘的？</li><li>基于DLedger技术部署的Broker高可用集群是如何进行数据同步的？</li><li>消费者是基于什么策略选择Master或Slaver拉取数据的？</li><li>消费者是如何从Broker拉取数据回来进行处理以及ACK的？如果消费者故障了会怎么办？</li></ol><h3 id="数据分片机制及消息是如何发送给broker"><a class="markdownIt-Anchor" href="#数据分片机制及消息是如何发送给broker"></a> 数据分片机制及消息是如何发送给Broker？</h3><p><strong>创建Topic的时候为什么需要指定MessageQueue数量？</strong></p><p>​MessageQueue是RocketMQ中很重要的一个数据分片机制，它将一个Topic的数据拆分成很多个数据分片，然后在每一个Broker机器上存储一些MessageQueue</p><p><strong>生成者发送消息时写入哪个MessageQueue？</strong></p><p>​生成者在发送消息时首先会去请求NameServer，这样就知道了Topic中有多少个MessageQueue，每个MessageQueue分布在哪个broker上了，这样就可以把一个Topic中的数据分散到多个MessageQueue中，然后分散在多个Broker中</p><p><strong>如果某个Broker出现故障了怎么办？</strong></p><p>​如果MasterBroker挂了，此时正在等待的其它Slaver Broker会自动热切换为Master Broker中，但是在自动切换的这个过程中，这一组Broker就没有Master Broker可以写入了，这时通常建议将Producer中开启sendLatencyFaultEnable，当开启后会启动容错机制，如果发现访问某个Broker有延迟500ms，然后还说无法访问，那么就会自动回避访问这个Broker一段时间，比如在接下来的3000ms以内就不会访问该Broker，这样可以避免一个Broker故障后短时间内，短时间内生成者频繁发消息到这个故障的Broker上，出现较多次的异常，等一段时间Master Broker恢复好了，比如Slave Broker已经切换为Master Broker就可以再次访问了</p><h3 id="broker是如何存储数据的"><a class="markdownIt-Anchor" href="#broker是如何存储数据的"></a> Broker是如何存储数据的？</h3><p>​通过CommitLog消息顺序写入机制，当生产的消息发送到Broker上时，首先将消息写入磁盘上的一个日志文件CommitLog，直接顺序写入文件，如下</p><img src="/images/commitLog.png" alt="CommitLog" style="zoom: 67%;" /><p>这个CommitLog由多个磁盘文件组成，每个磁盘文件的大小限定为最多1G，Broker接收到消息后就会直接写入到这个文件的末尾，如果一个CommitLog写满1GB后，就会从新创建一个CommitLog文件</p><p><strong>MessageQueue在数据储存中体现在哪里？</strong></p><p>​在Broker中，对Topic下的每个MessageQueue都会有一系列的ConsumerQueue文件，这个ConsumerQueue文件中存储这一条消息对应在CommitLog文件中的offset偏移量、Tag、长度等信息，当Broker接受到一条信息写入CommitLog后，同时会将这条消息在CommitLog中的偏移量offset等信息写入到这条消息所属的MessageQueue对应的ConsumeQueue文件中去</p><img src="/images/ConsumerQueue.png" alt="ConsumerQueue" style="zoom: 50%;" /><p><strong>如何做到让消息写入CommitLog文件近乎内存写性能的？</strong></p><p>​生产者把消息写入到Broker时，Broker会直接把消息写入磁盘上的CommitLog文件，那么Broker是如何提升整个过程的性能的呢？这个部分的性能提升直接影响Broker处理消息的吞吐量，所有Broker采用的是基于Os操作系统的<strong>PageCache</strong>和<strong>顺序写</strong>两个机制来提升CommitLog文件的性能的</p><p>​Broker以顺序写的方式将消息写入CommitLog磁盘文件，也就是每次写入在文件的末尾追加一条数据就可以了，文件进行顺序写的性能要比文件随机写的性能提升很多，数据在写入CommitLog文件的时候，并不是直接写入底层的屋里磁盘文件的，而是先进去OS的PageCache内存中，然后由OS的后台线程选择一个时间，异步化的将OS PageCache缓存中的数据刷入底层的磁盘文件</p><p>​所以Broker接受到消息后采用<strong>磁盘文件顺序写+OS PageCache写入+OS异步刷盘策略</strong>，可以让消息写入CommitLog的性能与写入内存中差不多，使Broker具有高吞吐量的消息写入</p><img src="/images/Broker%E5%86%99%E5%85%A5%E6%80%A7%E8%83%BD.png" alt="Broker写入性能" style="zoom:67%;" /><p><strong>同步刷盘与异步刷盘</strong></p><ul><li><p>异步刷盘：生成者把消息发送给Broker，Broker将消息写入OS PageCache中，就直接返回ACK给生产者了，此时生产者认为消息已经写入成功</p><p>​存在的问题：当数据在OS PageCache中时，此时Broker发生宕机，那么此时数据就丢失了，但是生产者还以为数据写入成功了</p></li><li><p>同步刷盘：生成者把消息发送给Broker，必须强制将消息刷入底层的物理磁盘中，然后才返回ACK给生产者了，保证的数据不会丢失，如果此时Broker还没来得及将数据刷入磁盘就宕机了，此时对producer来说就会感知到消息发送失败了，只需要不停重试发送，直到Slaver Broker切换为Master Broker就可以接受消息的再次写入了</p><p>​优点：保证消息不会丢失</p><p>​缺点：每次强制消息刷入磁盘，必然导致每条数据的写入性能急剧下降，从而导致Broker的吞吐量下降</p></li></ul><h3 id="基于dledger技术的broker主从同步原理"><a class="markdownIt-Anchor" href="#基于dledger技术的broker主从同步原理"></a> 基于Dledger技术的Broker主从同步原理</h3><p><strong>Dledger如何实现Broker多副本高可用？</strong></p><p>​基于Dledger技术替换Broker的CommitLog，Dledger技术有他自己的CommitLog机制，基于Dledger技术实现Broker高可用架构，实际上就是用Dledger先替换掉Broker自己管理的CommitLog，由Dlegger来管理CommitLog，然后Broker还可以基于Dledger管理的CommitLog构建出机器上的各个ConsumeQueue磁盘文件。</p><img src="/images/Dledger.png" alt="Dledger" style="zoom:67%;" /><p>​一组Broker机器的leader选取，是Dledger<strong>基于Raft协议来进行Leader Broker选举</strong>的，当三台Broker机器启动时，会先将票投给自己，第一轮选举失败，接着每个Broker会进入一个随机事件的休眠，比如说Broker01休眠3秒，Broker02休眠5秒，Broker03休眠4秒，此时Broker01必然是先苏醒过来的，他苏醒过来之后，直接会继续尝试投票给自己，并且发送自己的选票给别人。接着Broker03休眠4秒后苏醒过来，他发现Broker01已经发送来了一个选票是投给Broker01自己的，此时他自己因为没投票，所以会尊重别人的选择，就直接把票投给Broker01了，同时把自己的投票发送给别人。接着Broker02苏醒了，他收到了Broker01投票给Broker01自己，收到了Broker03也投票给了Broker01，那么他此时自己是没投票的，直接就会尊重别人的选择，直接就投票给Broker01，并且把自己的投票发送给别人。其实只要有（3台机器 / 2） + 1个人投票给某个人，就会选举他当Leader，这个（机器数量 / 2） + 1就是大多数的意思。</p><p>​这就是Raft协议中选举leader算法的简单描述，简单来说，他确保有人可以成为Leader的核心机制就是一轮选举不出来Leader的话，就让大家随机休眠一下，先苏醒过来的人会投票给自己，其他人苏醒过后发现自己收到选票了，就会直接投票给那个人。</p><p><strong>Dledger基于Raft协议进行多副本同步</strong></p><p>​Dledger在进行<strong>数据同步时会分为两个阶段，一个是uncommited阶段，一个是commited阶段</strong></p><p>​首先Leader Broker上的Dledger收到一条数据之后，会标记为uncommited状态，然后他会通过自己的DledgerServer组件把这个uncommited数据发送给Follower Broker的DledgerServer。接着Follower Broker的DledgerServer收到uncommited消息后，必须返回一个ack给Leader Broker的DledgerServer，如果Leader Broker收到超过半数的Follower Broker返回的ack之后，就会将消息标记为commited状态。然后Leader Broker上的DledgerServer就会发送commited消息给Follower Broker机器上的DledgerServer，让他们把消息标记为commited状态，这就是基于Raft协议实现的两阶段完成的数据同步机制。</p>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ笔记 03-OS内核参数及JVM参数调优</title>
      <link href="/2020/08/21/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2003-OS%E5%86%85%E6%A0%B8%E5%8F%82%E6%95%B0%E5%8F%8AJVM%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%E4%BC%98/"/>
      <url>/2020/08/21/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2003-OS%E5%86%85%E6%A0%B8%E5%8F%82%E6%95%B0%E5%8F%8AJVM%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%E4%BC%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="os内核参数及jvm参数调优"><a class="markdownIt-Anchor" href="#os内核参数及jvm参数调优"></a> OS内核参数及JVM参数调优</h2><h3 id="os内核参数"><a class="markdownIt-Anchor" href="#os内核参数"></a> OS内核参数</h3><ol><li><p>vm.overcommit_memory</p><ul><li><p>这个参数有0,1,2三个值可选，如果值是0的话，在你的中间件系统申请内存的时候，os内核会检查可用内存是否足够，如果足够的话就分配内存给你，如果感觉剩余内存不是太够了，干脆就拒绝你的申请，导致你申请内存失败，进而导致中间件系统异常出错。</p><p>因此一般需要将这个参数的值调整为1，意思是把所有可用的物理内存都允许分配给你，只要有内存就给你来用，这样可以避免申请内存失败的问题，可以用如下命令修改：echo ‘vm.overcommit_memory=1’ &gt;&gt; /etc/sysctl.conf</p></li></ul></li><li><p>vm.max_map_count</p><ul><li><p>这个参数的值会影响中间件系统可以开启的线程的数量，同样也是非常重要的，如果这个参数过小，有的时候可能会导致有些中间件无法开启足够的线程，进而导致报错，甚至中间件系统挂掉。他的默认值是65536，但是这个值有时候是不够的，比如我们大数据团队的生产环境部署的Kafka集群曾经有一次就报出过这个异常，说无法开启足够多的线程，直接导致Kafka宕机了。</p><p>因此建议可以把这个参数调大10倍，比如655360这样的值，保证中间件可以开启足够多的线程，可以用如下命令修改：echo ‘vm.max_map_count=655360’ &gt;&gt; /etc/sysctl.conf</p></li></ul></li><li><p>vm.swappiness</p><ul><li><p>这个参数是用来控制进程的swap行为的，这个简单来说就是os会把一部分磁盘空间作为swap区域，然后如果有的进程现在可能不是太活跃，就会被操作系统把进程调整为睡眠状态，把进程中的数据放入磁盘上的swap区域，然后让这个进程把原来占用的内存空间腾出来，交给其他活跃运行的进程来使用。</p><p>如果这个参数的值设置为0，意思就是尽量别把任何一个进程放到磁盘swap区域去，尽量大家都用物理内存。如果这个参数的值是100，那么意思就是尽量把一些进程给放到磁盘swap区域去，内存腾出来给活跃的进程使用。默认这个参数的值是60，有点偏高了，可能会导致我们的中间件运行不活跃的时候被迫腾出内存空间然后放磁盘swap区域去。</p><p>因此通常在生产环境建议把这个参数调整小一些，比如设置为10，尽量用物理内存，别放磁盘swap区域去。可以用如下命令修改：echo ‘vm.swappiness=10’ &gt;&gt; /etc/sysctl.conf</p></li></ul></li><li><p>ulimit</p><ul><li><p>这个是用来控制linux上的最大文件链接数的，默认值可能是1024，一般肯定是不够的，因为你在大量频繁的读写磁盘文件的时候，或者是进行网络通信的时候，都会跟这个参数有关系</p><p>对于一个中间件系统而言肯定是不能使用默认值的，如果你采用默认值，很可能在线上会出现如下错误：error: too many open files。</p><p>因此通常建议用如下命令修改这个值：echo ‘ulimit -n 1000000’ &gt;&gt; /etc/profile</p></li></ul></li></ol><p><strong>总结</strong>：</p><p>综合思考一下这几个参数，会发现到最后要调整的东西，无非都是跟磁盘文件IO、网络通信、内存管理、线程数量有关系的，因为我们的中间件系统在运行的时候无非就是跟这些打交道。</p><ol><li>中间件系统肯定要开启大量的线程（跟vm.max_map_count有关）</li><li>而且要进行大量的网络通信和磁盘IO（跟ulimit有关）</li><li>然后大量的使用内存（跟vm.swappiness和vm.overcommit_memory有关）</li></ol><h3 id="jvm参数"><a class="markdownIt-Anchor" href="#jvm参数"></a> JVM参数</h3><p>启动Broker的参数如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“-server -Xms8g -Xmx8g -Xmn4g -XX:+UseG1GC -XX:G1HeapRegionSize&#x3D;16m -XX:G1ReservePercent&#x3D;25 -XX:InitiatingHeapOccupancyPercent&#x3D;30 -XX:SoftRefLRUPolicyMSPerMB&#x3D;0 -verbose:gc -Xloggc:&#x2F;dev&#x2F;shm&#x2F;mq_gc_%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintAdaptiveSizePolicy -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles&#x3D;5 -XX:GCLogFileSize&#x3D;30m -XX:-OmitStackTraceInFastThrow -XX:+AlwaysPreTouch -XX:MaxDirectMemorySize&#x3D;15g -XX:-UseLargePages -XX:-UseBiasedLocking”</span><br></pre></td></tr></table></figure><p>-<strong>server</strong>：这个参数就是说用服务器模式启动</p><p><strong>-Xms8g -Xmx8g -Xmn4g</strong>：这个就是很关键的一块参数了，也是重点需要调整的，就是默认的堆大小是8g内存，新生代是4g内存，如果高配物理机是48g内存的，这里完全可以给他们翻几倍，比如给堆内存20g，其中新生代给10g，甚至可以更多一些，当然要留一些内存给操作系统来用</p><p><strong>-XX:+UseG1GC -XX:G1HeapRegionSize=16m</strong>：这几个参数至关重要，这是选用了G1垃圾回收器来做分代回收，对新生代和老年代都是用G1来回收，这里把G1的region大小设置为了16m，这个因为机器内存比较多，所以region大小可以调大一些给到16m，不然用2m的region，会导致region数量过多的</p><p><strong>-XX:G1ReservePercent=25</strong>：这个参数是说，在G1管理的老年代里预留25%的空闲内存，保证新生代对象晋升到老年代的时候有足够空间，避免老年代内存都满了，新生代有对象要进入老年代没有充足内存了，默认值是10%，略微偏少</p><p><strong>-XX:InitiatingHeapOccupancyPercent=30</strong>：这个参数是说，当堆内存的使用率达到30%之后就会自动启动G1的并发垃圾回收，开始尝试回收一些垃圾对象，默认值是45%，这里调低了一些，也就是提高了GC的频率，但是避免了垃圾对象过多，一次垃圾回收耗时过长的问题</p><p><strong>-XX:SoftRefLRUPolicyMSPerMB=0</strong>：这个参数默认设置为0了，其实建议这个参数不要设置为0，避免频繁回收一些软引用的Class对象，这里可以调整为比如1000</p><p><strong>-verbose:gc -Xloggc:/dev/shm/mq_gc_%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintAdaptiveSizePolicy -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=30m</strong>：这一堆参数都是控制GC日志打印输出的，确定了gc日志文件的地址，要打印哪些详细信息，然后控制每个gc日志文件的大小是30m，最多保留5个gc日志文件</p><p><strong>-XX:-OmitStackTraceInFastThrow</strong>：这个参数是说，有时候JVM会抛弃一些异常堆栈信息，因此这个参数设置之后，就是禁用这个特性，要把完整的异常堆栈信息打印出来，注意选项中的减号,加号则表示启用</p><p><strong>-XX:+AlwaysPreTouch</strong>：这个参数的意思是我们刚开始指定JVM用多少内存，不会真正分配给他，会在实际需要使用的时候再分配给他，所以使用这个参数之后，就是强制让JVM启动的时候直接分配我们指定的内存，不要等到使用内存的时候再分配</p><p><strong>-XX:MaxDirectMemorySize=15g</strong>：这是说RocketMQ里大量用了NIO中的direct buffer，这里限定了direct buffer最多申请多少，如果你机器内存比较大，可以适当调大这个值</p><p><strong>-XX:-UseLargePages -XX:-UseBiasedLocking</strong>：这两个参数的意思是禁用大内存页和偏向锁</p><h3 id="rocketmq核心参数"><a class="markdownIt-Anchor" href="#rocketmq核心参数"></a> RocketMQ核心参数</h3><p>dledger的示例配置文件：rocketmq/distribution/target/apache-rocketmq/conf/dledger，在这里主要是有一个较为核心的参数：sendMessageThreadPoolNums=16，这个参数的意思就是RocketMQ内部用来发送消息的线程池的线程数量，默认是16，其实这个参数可以根据你的机器的CPU核数进行适当增加，比如机器CPU是24核的，可以增加这个线程数量到24或者30，都是可以的。</p><h3 id="全文总结"><a class="markdownIt-Anchor" href="#全文总结"></a> 全文总结</h3><ol><li>中间件系统在压测或者上生产之前，需要对三大块参数进行调整：OS内核参数、JVM参数以及中间件核心参数</li><li>OS内核参数主要调整的地方都是跟磁盘IO、网络通信、内存管理以及线程管理有关的，需要适当调节大小</li><li>JVM参数需要我们去中间件系统的启动脚本中寻找他的默认JVM参数，然后根据机器的情况，对JVM的堆内存大小，新生代大小，Direct Buffer大小，等等，做出一些调整，发挥机器的资源</li><li>中间件核心参数主要也是关注其中跟网络通信、磁盘IO、线程数量、内存 管理相关的，根据机器资源，适当可以增加网络通信线程，控制同步刷磁盘或者异步刷磁盘，线程数量有多少，内存中一些队列的大小</li></ol>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ笔记 02-基本原理</title>
      <link href="/2020/08/18/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2002-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"/>
      <url>/2020/08/18/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2002-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="rocketmq基本原理"><a class="markdownIt-Anchor" href="#rocketmq基本原理"></a> RocketMQ基本原理</h2><p>问题：</p><ol><li><p>RocketMQ是如何集群化部署来承载高并发访问？</p><p>将系统的流量分散在RocketMQ部署的多台机器上</p></li><li><p>如果RocketMQ要存储海量消息，如何实现分布式存储架构？</p><p>将数据打散存到每个Broker上，万一Broker宕机怎么办，采用Broker主从架构及多副本策略</p></li></ol><p>RocketMQ基本架构原理图：</p><img src="/images/RocketMQ%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.png" alt="RocketMQ基本架构图" style="zoom:50%;" /><p>​RockerMQ中的生成者和消费者自己主动去NameServer上拉取Broker信息，Broker与NameServer之间通过心跳机制保持联系，Broker每30秒向NameServer发送一次心跳，NameServer每10秒运行一个任务去检查各个Broker的最近一次心跳时间，如果某个Broker120秒都未发送过心跳，则认为该Broker已经挂掉了。</p><p>问题:发送消息的时候面对N多台机器，到底应该向哪一台上面的Broker发送过去？消费者如何知道去哪个Broker上消费？<br />我们可以在创建Topic的时候指定让他里面的数据分散存储在多台Broker机器上，比如一个Topic里有1000万条数据，此时有2台Broker，那么就可以让每台Broker上都放500万条数据。然后生产者、消费者与NameServer建立TCP长连接获取路由信息，就知道哪些Topic分布在哪些Broker上面</p><h2 id="broker架构原理"><a class="markdownIt-Anchor" href="#broker架构原理"></a> Broker架构原理</h2><img src="/images/Broker%E6%9E%B6%E6%9E%84%E5%8F%8A%E9%80%89%E4%B8%BE%E5%8E%9F%E7%90%86.png" alt="Broker架构与选举机制" style="zoom: 67%;" /><p>​消费者获取数据时，Master Broker在返回消息给消费者系统的时候，会根据当时Master Broker的负载情况和Slave Broker的同步情况，向消费者系统建议下一次拉取消息的时候是从Master Broker拉取还是从Slave Broker拉取，既可能从master上拉取数据也可能从slaver上拉取数据。或者举另外一个例子，本身这个时候Master Broker上都已经写入了100万条数据了，结果Slave Broke不知道啥原因，同步的特别慢，才同步了96万条数据，落后了整整4万条消息的同步，这个时候你作为消费者系统可能都获取到96万条数据了，那么下次还是只能从Master Broker去拉取消息。</p><p>Slaver Broker假如宕机了对整个MQ的影响不大，因为Master Broker可以支持读写，但是Master Broker挂了，会导致该节点不可用，需要运维人员手动切换Slaver Broker为Master Broker，会导致中间一段时间不可用，在RocketMQ 4.5后，此时一旦Master Broker宕机了，就可以在多个副本，也就是多个Slave中，通过Dledger技术和Raft协议算法进行leader选举，直接将一个Slave Broker选举为新的Master Broker，然后这个新的Master Broker就可以对外提供服务了。</p><h2 id="broker主从数据一致"><a class="markdownIt-Anchor" href="#broker主从数据一致"></a> Broker主从数据一致</h2><p>​关于rocketmq的数据同步分为2种模式，一种为异步复制，一种为同步复制，当为异步复制模式时，只要成功写入master，则会相应生成者success，同时会与slave慢慢同步数据，这种的优点的是低延迟，高吞吐，但是此模式可用性降低（如果此时master宕机，而数据没有完全同步到slave）。如果异步复制，此时要求成功写master后，同时还要求slave也成功写入，然后slave应答master ok后，master才会应答生产者success，这种模式可用性增加，但是延迟增加，吞吐率下降。具体选择哪种模式 还是需要根据应用场景决定</p><h2 id="broker与nameserver通信"><a class="markdownIt-Anchor" href="#broker与nameserver通信"></a> Broker与NameServer通信</h2><p>​在RocketMQ中，Broker会跟每个NameServer建立TCP长连接，然后定时通过TCP长连接发送心跳过去，这样每个NameServer都知道集群中有哪些Broker，每个Broker存放了哪些Topic数据</p><h2 id="生产者-消费者如何发送-拉取消息"><a class="markdownIt-Anchor" href="#生产者-消费者如何发送-拉取消息"></a> 生产者、消费者如何发送、拉取消息</h2><img src="/images/RocketMQ%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E6%8B%89%E5%8F%96%E6%B6%88%E6%81%AF.png" alt="生产者消费者发送拉取消息" style="zoom:80%;" /><ul><li>生产者：在发送消息时首先得有一个Topic，发送消息时得指定发送到哪个Topic里面，首先与NameServer建立TCP长连接，然后拉取到最新的路由信息，包括集群里有哪些Broker，集群里有哪些Topic，每个Topic都存储在哪些Broker上，然后生产者系统自然就可以通过路由信息找到自己要投递消息的Topic分布在哪几台Broker上，此时可以根据负载均衡算法，从里面选择一台Broke机器出来，比如round robine轮询算法，或者是hash算法。最后选择一台Broker之后，就可以跟那个Broker也建立一个TCP长连接，然后通过长连接向Broker发送消息即可</li><li>消费者：其实跟生产者系统原理是类似的，他们也会跟NameServer建立长连接，然后拉取路由信息，接着找到自己要获取消息的Topic在哪几台Broker上，就可以跟Broker建立长连接，从里面拉取消息了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM笔记-01类加载机制</title>
      <link href="/2020/08/18/jvm/JVM%E7%AC%94%E8%AE%B0-01%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
      <url>/2020/08/18/jvm/JVM%E7%AC%94%E8%AE%B0-01%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="jvm类加载机制"><a class="markdownIt-Anchor" href="#jvm类加载机制"></a> JVM类加载机制</h2><h3 id="一个类从加载到使用一般会经历的过程"><a class="markdownIt-Anchor" href="#一个类从加载到使用一般会经历的过程"></a> 一个类从加载到使用一般会经历的过程</h3><p>加载 —— 验证—— 准备 —— 解析 —— 初始化 —— 使用 —— 卸载</p><p>验证：验证.class文件是否合乎jvm规范</p><p>准备：为加载类分配一定的内存空间，包括类变量分配内存空间并且赋默认初始值</p><p>解析：将符号引用替换为直接引用</p><p>初始化：准备阶段只会赋初始值，如果是有执行代码会在初始化时执行并赋值，执行静态代码块中的方法</p><h3 id="jvm在什么情况下会去加载一个类"><a class="markdownIt-Anchor" href="#jvm在什么情况下会去加载一个类"></a> JVM在什么情况下会去加载一个类</h3><p>当代码中需要使用这个类时</p><h3 id="什么时候会初始化一个类"><a class="markdownIt-Anchor" href="#什么时候会初始化一个类"></a> 什么时候会初始化一个类</h3><p>一般来说会在new实例化对象时和包含main()方法的主类时，并且会加载和初始化这个类继承的父类</p><h3 id="类加载器的双亲委派机制"><a class="markdownIt-Anchor" href="#类加载器的双亲委派机制"></a> 类加载器的双亲委派机制</h3><ul><li><p><strong>启动类加载器</strong></p><p>Bootstrap ClassLoader主要负责加载java目录中的核心类，一旦jvm启动就首先会依托启动类加载器去加载lib目录下的核心类库</p></li><li><p><strong>扩展类加载器</strong></p><p>Extension ClassLoader会在jvm启动时去加载lib\ext目录中类</p></li><li><p><strong>应用程序类加载器</strong></p><p>Application ClassLoader负责加载ClassPath环境变量所指定的路径中的类，大致理解为加载自己写好的java代码到内存中</p></li><li><p><strong>自定义类加载器</strong></p><p>根据自己的需求加载类</p></li></ul><h3 id="双亲委派机制"><a class="markdownIt-Anchor" href="#双亲委派机制"></a> <strong>双亲委派机制</strong></h3><p>​应用程序类加载器首先会委派给扩展类加载器，扩展类加载器委派给启动类加载器，启动类加载器找不到让扩展类加载器自己去找，扩展类加载器找不到让应用程序类加载器自己加载，此时应用程序类加载器加载到了这个类</p><p><img src="/images/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6-1603276865470.jpg" alt="双亲委派机制" /></p>]]></content>
      
      
      <categories>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ笔记 01-RocketMQ、Kafka、RabbitMQ 技术选型</title>
      <link href="/2020/08/17/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2001-%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/"/>
      <url>/2020/08/17/rocketMQ/RocketMQ%E7%AC%94%E8%AE%B0%2001-%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="rocketmq-kafka-rabbitmq-技术选型"><a class="markdownIt-Anchor" href="#rocketmq-kafka-rabbitmq-技术选型"></a> RocketMQ、Kafka、RabbitMQ 技术选型</h2><h3 id="1-mq选型需要考虑的问题"><a class="markdownIt-Anchor" href="#1-mq选型需要考虑的问题"></a> 1、MQ选型需要考虑的问题</h3><ol><li>业界MQ有哪几种？</li><li>每一种MQ的表现如何？</li><li>这些MQ在同等机器的条件下，能抗多少QPS？</li><li>每种MQ的性能有多高？（发送一条消息给它是需要2ms还是20ms）</li><li>MQ的可用性是否能得到保障？</li><li>会不会存在丢失数据？</li><li>能否实现在线扩容？</li><li>消息中间件经常需要使用的一些功能他们都有吗（比如说延迟消息、事务消息、消息堆积、消息回溯、死信队列，等等）？</li></ol><h3 id="2-mq的优势与劣势"><a class="markdownIt-Anchor" href="#2-mq的优势与劣势"></a> 2、MQ的优势与劣势</h3><p>Kafka、RabbitMQ、RocketMQ社区活跃度：目前社区都较为活跃，尤其是Kafka和RabbitMQ，目前Kafka几乎是国内大数据领域日志采集传输的标准，RabbitMQ在各种中小公司里运用极为广泛，RocketMQ也是开始在一些大公司和其他公司里快速推行中</p><p><strong>Kafka</strong></p><ul><li>优势：在常规的配置下，一台机器可以达到每秒十几万的QPS，发送消息给kafka都是毫秒级的，kafka支持集群部署，可用性很高</li><li>劣势：kafka接受到消息会写到磁盘缓冲区，并没有直接落地在磁盘上，要是机器本身宕机了，会导致磁盘缓冲区的数据丢失；kafka本身的功能较为单一，主要是支持消息的发送和消费，一般用于日志的采集和传输，适用于量特别大、吞吐量高，不需要太多高级的功能的场景</li></ul><p><strong>RabbitMQ</strong></p><ul><li>优势：可以保证消息不丢失，也可以保证高可用，支持部分高级功能，如死信队列、消息重试等</li><li>劣势：吞吐量较低，一般只有每秒几万的QPS，集群的扩展较为麻烦，开发语言为erlang，较少人能阅读或修改它的源代码</li></ul><p><strong>RocketMQ</strong></p><ul><li>优势：几乎同时解决了Kafka和RabbitMQ的缺陷，其吞吐量很高，单台机器能达到十万的QPS，可以保证高可用及数据不丢失，可以部署大规模集群，还支持各种高级功能，如延迟消息、事务消息、消息回溯、死信队列、消息积压等，基于Java开发，容易阅读和修改源码</li><li>劣势：目前文档较少</li></ul>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术阶段图</title>
      <link href="/2020/08/16/%E6%8A%80%E6%9C%AF%E9%98%B6%E6%AE%B5%E5%9B%BE/"/>
      <url>/2020/08/16/%E6%8A%80%E6%9C%AF%E9%98%B6%E6%AE%B5%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/images/1593763287954-2383b947-2fdb-429d-a82f-658211028c21-1603277765627.png" alt="" /></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
